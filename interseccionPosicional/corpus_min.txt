50b445ba5fa735185f000106 TheAWKManualEdition1.0December1995DianeBarlowCloseArnoldD.RobbinsPaulH.RubinRichardStallmanPietvanOostrum Copyrightc1989,1991,1992,1993FreeSoftwareFoundation,Inc.ThisisEdition1.0ofTheAWKManual,forthenewimplementationofAWK(sometimescallednawk).Notice:Thisworkisderivedfromtheoriginalgawkmanual.AdaptionsforNAWKmadebyPietvanOostrum,Dec.1995,July1998.Permissionisgrantedtomakeanddistributeverbatimcopiesofthismanualprovidedthecopyrightnoticeandthispermissionnoticearepreservedonallcopies.Permissionisgrantedtocopyanddistributemoversionsofthismanualunderthecon-ditionsforverbatimcopying,providedthattheentireresultingderivedworkisdistributedunderthetermsofapermissionnoticeidenticaltothisone.Permissionisgrantedtocopyanddistributetranslationsofthismanualintoanotherlan-guage,undertheaboveconditionsformoversions,exceptthatthispermissionnoticemaybestatedinatranslationapprovedbytheFoundation. Preface1PrefaceIfyouarelikemanycomputerusers,youwouldfrequentlyliketomakechangesinvarioustextwherevercertainpatternsappear,orextractdatafrompartsofcertainlineswhilediscardingtherest.TowriteaprogramtodothisinalanguagesuchasCorPascalisatime-consuminginconveniencethatmaytakemanylinesofcode.Thejobmaybeeasierwithawk.Theawkutilityinterpretsaspecial-purposeprogramminglanguagethatmakesitpossibletohandlesimpledata-reformattingjobseasilywithjustafewlinesofcode.Thismanualteachesyouwhatawkdoesandhowyoucanuseawkely.Youshouldalreadybefamiliarwithbasicsystemcommandssuchasls.Usingawkyoucan:managesmall,personaldatabasesgeneratereportsvalidatedataproduceindexes,andperformotherdocumentpreparationtasksevenexperimentwithalgorithmsthatcanbeadaptedlatertoothercomputerlanguagesThismanualhasthetaskofbeingbothtutorialandreference.Ifyouareanovice,feelfreetoskipoverdetailsthatseemtoocomplex.Youshouldalsoignorethemanycrossreferences;theyarefortheexpertuser,andfortheon-lineInfoversionofthemanual.HistoryofawkThenameawkcomesfromtheinitialsofitsdesigners:AlfredV.Aho,PeterJ.Wein-berger,andBrianW.Kernighan.Theoriginalversionofawkwaswrittenin1977.In1985anewversionmadetheprogramminglanguagemorepowerful,introducingfunctions,multipleinputstreams,andcomputedregularexpressions.ThisnewversionbecamegenerallyavailablewithSystemVRelease3.1.TheversioninSystemVRelease4addedsomenewfeaturesandalsocleanedupthebehaviorinsomeofthe\darkcorners"ofthelanguage.ThespforawkintheposixCommandLanguageandUtilitiesstandardfurtherthelanguage.Weneedtothankmanypeoplefortheirassistanceinproducingthismanual.JayFenlasoncontributedmanyideasandsampleprograms.RichardMlynarikandRobertJ.Chassellgavehelpfulcommentsonearlydraftsofthismanual.ThepaperASupplementalDocumentforawkbyJohnW.PierceoftheChemistryDepartmentatUCSanDiego,pinpointedseveralissuesrelevantbothtoawkimplementationandtothismanual,thatwouldotherwisehaveescapedus.DavidTrueman,PatRankin,andMichalJaegermannalsocontributedsectionsofthemanual.Thefollowingpeopleprovidedmanyhelpfulcommentsonthiseditionofthemanual:RickAdams,MichaelBrennan,RichBurridge,DianeClose,Christopher(\Topher")Eliot,MichaelLijewski,PatRankin,MiriamRobbins,andMichalJaegermann.RobertJ.ChassellprovidedmuchvaluableadviceontheuseofTexinfo. 2TheAWKManual GNUGENERALPUBLICLICENSE3GNUGENERALPUBLICLICENSEVersion2,June1991Copyrightc1989,1991FreeSoftwareFoundation,Inc.675MassAve,Cambridge,MA02139,USAEveryoneispermittedtocopyanddistributeverbatimcopiesofthislicensedocument,butchangingitisnotallowed.PreambleThelicensesformostsoftwarearedesignedtotakeawayyourfreedomtoshareandchangeit.Bycontrast,theGNUGeneralPublicLicenseisintendedtoguaranteeyourfreedomtoshareandchangefreesoftware|tomakesurethesoftwareisfreeforallitsusers.ThisGeneralPublicLicenseappliestomostoftheFreeSoftwareFoundation'ssoftwareandtoanyotherprogramwhoseauthorscommittousingit.(SomeotherFreeSoftwareFoundationsoftwareiscoveredbytheGNULibraryGeneralPublicLicenseinstead.)Youcanapplyittoyourprograms,too.Whenwespeakoffreesoftware,wearereferringtofreedom,notprice.OurGeneralPublicLicensesaredesignedtomakesurethatyouhavethefreedomtodistributecopiesoffreesoftware(andchargeforthisserviceifyouwish),thatyoureceivesourcecodeorcangetitifyouwantit,thatyoucanchangethesoftwareorusepiecesofitinnewfreeprograms;andthatyouknowyoucandothesethings.Toprotectyourrights,weneedtomakerestrictionsthatforbidanyonetodenyyoutheserightsortoaskyoutosurrendertherights.Theserestrictionstranslatetocertainresponsibilitiesforyouifyoudistributecopiesofthesoftware,orifyoumodifyit.Forexample,ifyoudistributecopiesofsuchaprogram,whethergratisorforafee,youmustgivetherecipientsalltherightsthatyouhave.Youmustmakesurethatthey,too,receiveorcangetthesourcecode.Andyoumustshowthemthesetermssotheyknowtheirrights.Weprotectyourrightswithtwosteps:(1)copyrightthesoftware,and(2)youthislicensewhichgivesyoulegalpermissiontocopy,distributeand/ormodifythesoftware.Also,foreachauthor'sprotectionandours,wewanttomakecertainthateveryoneunderstandsthatthereisnowarrantyforthisfreesoftware.Ifthesoftwareismobysomeoneelseandpassedon,wewantitsrecipientstoknowthatwhattheyhaveisnottheoriginal,sothatanyproblemsintroducedbyotherswillnotontheoriginalauthors'reputations.Finally,anyfreeprogramisthreatenedconstantlybysoftwarepatents.Wewishtoavoidthedangerthatredistributorsofafreeprogramwillindividuallyobtainpatentlicenses,inmakingtheprogramproprietary.Topreventthis,wehavemadeitclearthatanypatentmustbelicensedforeveryone'sfreeuseornotlicensedatall.Theprecisetermsandconditionsforcopying,distributionandmofollow. 4TheAWKManualTERMSANDCONDITIONSFORCOPYING,DISTRIBUTIONANDMODIFICATION1.ThisLicenseappliestoanyprogramorotherworkwhichcontainsanoticeplacedbythecopyrightholdersayingitmaybedistributedunderthetermsofthisGeneralPublicLicense.The\Program",below,referstoanysuchprogramorwork,anda\workbasedontheProgram"meanseithertheProgramoranyderivativeworkundercopyrightlaw:thatistosay,aworkcontainingtheProgramoraportionofit,eitherverbatimorwithmoand/ortranslatedintoanotherlanguage.(Hereinafter,translationisincludedwithoutlimitationintheterm\moEachlicenseeisaddressedas\you".Activitiesotherthancopying,distributionandmoarenotcoveredbythisLicense;theyareoutsideitsscope.TheactofrunningtheProgramisnotrestricted,andtheoutputfromtheProgramiscoveredonlyifitscontentsconstituteaworkbasedontheProgram(independentofhavingbeenmadebyrunningtheProgram).WhetherthatistruedependsonwhattheProgramdoes.2.YoumaycopyanddistributeverbatimcopiesoftheProgram'ssourcecodeasyoureceiveit,inanymedium,providedthatyouconspicuouslyandappropriatelypublishoneachcopyanappropriatecopyrightnoticeanddisclaimerofwarranty;keepintactallthenoticesthatrefertothisLicenseandtotheabsenceofanywarranty;andgiveanyotherrecipientsoftheProgramacopyofthisLicensealongwiththeProgram.Youmaychargeafeeforthephysicalactoftransferringacopy,andyoumayatyouroptionwarrantyprotectioninexchangeforafee.3.YoumaymodifyyourcopyorcopiesoftheProgramoranyportionofit,thusformingaworkbasedontheProgram,andcopyanddistributesuchmoorworkunderthetermsofSection1above,providedthatyoualsomeetalloftheseconditions:a.Youmustcausethemotocarryprominentnoticesstatingthatyouchangedtheandthedateofanychange.b.Youmustcauseanyworkthatyoudistributeorpublish,thatinwholeorinpartcontainsorisderivedfromtheProgramoranypartthereof,tobelicensedasawholeatnochargetoallthirdpartiesunderthetermsofthisLicense.c.Ifthemoprogramnormallyreadscommandsinteractivelywhenrun,youmustcauseit,whenstartedrunningforsuchinteractiveuseinthemostordinaryway,toprintordisplayanannouncementincludinganappropriatecopyrightnoticeandanoticethatthereisnowarranty(orelse,sayingthatyouprovideawarranty)andthatusersmayredistributetheprogramundertheseconditions,andtellingtheuserhowtoviewacopyofthisLicense.(Exception:iftheProgramitselfisinteractivebutdoesnotnormallyprintsuchanannouncement,yourworkbasedontheProgramisnotrequiredtoprintanannouncement.)Theserequirementsapplytothemoworkasawhole.IfidensectionsofthatworkarenotderivedfromtheProgram,andcanbereasonablyconsideredindependentandseparateworksinthemselves,thenthisLicense,anditsterms,donotapplytothosesectionswhenyoudistributethemasseparateworks.ButwhenyoudistributethesamesectionsaspartofawholewhichisaworkbasedontheProgram,thedistributionofthewholemustbeonthetermsofthisLicense,whosepermissions GNUGENERALPUBLICLICENSE5forotherlicenseesextendtotheentirewhole,andthustoeachandeverypartregardlessofwhowroteit.Thus,itisnottheintentofthissectiontoclaimrightsorcontestyourrightstoworkwrittenentirelybyyou;rather,theintentistoexercisetherighttocontrolthedistributionofderivativeorcollectiveworksbasedontheProgram.Inaddition,mereaggregationofanotherworknotbasedontheProgramwiththeProgram(orwithaworkbasedontheProgram)onavolumeofastorageordistributionmediumdoesnotbringtheotherworkunderthescopeofthisLicense.4.YoumaycopyanddistributetheProgram(oraworkbasedonit,underSection2)inobjectcodeorexecutableformunderthetermsofSections1and2aboveprovidedthatyoualsodooneofthefollowing:a.Accompanyitwiththecompletecorrespondingmachine-readablesourcecode,whichmustbedistributedunderthetermsofSections1and2aboveonamediumcustomarilyusedforsoftwareinterchange;or,b.Accompanyitwithawrittenvalidforatleastthreeyears,togiveanythirdparty,forachargenomorethanyourcostofphysicallyperformingsourcedistri-bution,acompletemachine-readablecopyofthecorrespondingsourcecode,tobedistributedunderthetermsofSections1and2aboveonamediumcustomarilyusedforsoftwareinterchange;or,c.Accompanyitwiththeinformationyoureceivedastothetodistributecor-respondingsourcecode.(Thisalternativeisallowedonlyfornoncommercialdis-tributionandonlyifyoureceivedtheprograminobjectcodeorexecutableformwithsuchaninaccordwithSubsectionbabove.)Thesourcecodeforaworkmeansthepreferredformoftheworkformakingmocationstoit.Foranexecutablework,completesourcecodemeansallthesourcecodeforallmodulesitcontains,plusanyassociatedinterfaceplusthescriptsusedtocontrolcompilationandinstallationoftheexecutable.However,asaspe-cialexception,thesourcecodedistributedneednotincludeanythingthatisnormallydistributed(ineithersourceorbinaryform)withthemajorcomponents(compiler,kernel,andsoon)oftheoperatingsystemonwhichtheexecutableruns,unlessthatcomponentitselfaccompaniestheexecutable.Ifdistributionofexecutableorobjectcodeismadebyaccesstocopyfromadesignatedplace,thenequivalentaccesstocopythesourcecodefromthesameplacecountsasdistributionofthesourcecode,eventhoughthirdpartiesarenotcompelledtocopythesourcealongwiththeobjectcode.5.Youmaynotcopy,modify,sublicense,ordistributetheProgramexceptasexpresslyprovidedunderthisLicense.Anyattemptotherwisetocopy,modify,sublicenseordistributetheProgramisvoid,andwillautomaticallyterminateyourrightsunderthisLicense.However,partieswhohavereceivedcopies,orrights,fromyouunderthisLicensewillnothavetheirlicensesterminatedsolongassuchpartiesremaininfullcompliance.6.YouarenotrequiredtoacceptthisLicense,sinceyouhavenotsignedit.However,nothingelsegrantsyoupermissiontomodifyordistributetheProgramoritsderivativeworks.TheseactionsareprohibitedbylawifyoudonotacceptthisLicense.Therefore,bymodifyingordistributingtheProgram(oranyworkbasedontheProgram),you 6TheAWKManualindicateyouracceptanceofthisLicensetodoso,andallitstermsandconditionsforcopying,distributingormodifyingtheProgramorworksbasedonit.7.EachtimeyouredistributetheProgram(oranyworkbasedontheProgram),therecipientautomaticallyreceivesalicensefromtheoriginallicensortocopy,distributeormodifytheProgramsubjecttothesetermsandconditions.Youmaynotimposeanyfurtherrestrictionsontherecipients'exerciseoftherightsgrantedherein.YouarenotresponsibleforenforcingcompliancebythirdpartiestothisLicense.8.If,asaconsequenceofacourtjudgmentorallegationofpatentinfringementorforanyotherreason(notlimitedtopatentissues),conditionsareimposedonyou(whetherbycourtorder,agreementorotherwise)thatcontradicttheconditionsofthisLicense,theydonotexcuseyoufromtheconditionsofthisLicense.IfyoucannotdistributesoastosatisfysimultaneouslyyourobligationsunderthisLicenseandanyotherpertinentobligations,thenasaconsequenceyoumaynotdistributetheProgramatall.Forexample,ifapatentlicensewouldnotpermitroyalty-freeredistributionoftheProgrambyallthosewhoreceivecopiesdirectlyorindirectlythroughyou,thentheonlywayyoucouldsatisfybothitandthisLicensewouldbetorefrainentirelyfromdistributionoftheProgram.Ifanyportionofthissectionisheldinvalidorunenforceableunderanyparticularcircumstance,thebalanceofthesectionisintendedtoapplyandthesectionasawholeisintendedtoapplyinothercircumstances.Itisnotthepurposeofthissectiontoinduceyoutoinfringeanypatentsorotherpropertyrightclaimsortocontestvalidityofanysuchclaims;thissectionhasthesolepurposeofprotectingtheintegrityofthefreesoftwaredistributionsystem,whichisimplementedbypubliclicensepractices.Manypeoplehavemadegenerouscontri-butionstothewiderangeofsoftwaredistributedthroughthatsysteminrelianceonconsistentapplicationofthatsystem;itisuptotheauthor/donortodecideifheorsheiswillingtodistributesoftwarethroughanyothersystemandalicenseecannotimposethatchoice.ThissectionisintendedtomakethoroughlyclearwhatisbelievedtobeaconsequenceoftherestofthisLicense.9.Ifthedistributionand/oruseoftheProgramisrestrictedincertaincountrieseitherbypatentsorbycopyrightedinterfaces,theoriginalcopyrightholderwhoplacestheProgramunderthisLicensemayaddanexplicitgeographicaldistributionlimitationexcludingthosecountries,sothatdistributionispermittedonlyinoramongcountriesnotthusexcluded.Insuchcase,thisLicenseincorporatesthelimitationasifwritteninthebodyofthisLicense.10.TheFreeSoftwareFoundationmaypublishrevisedand/ornewversionsoftheGeneralPublicLicensefromtimetotime.Suchnewversionswillbesimilarinspirittothepresentversion,butmayindetailtoaddressnewproblemsorconcerns.Eachversionisgivenadistinguishingversionnumber.IftheProgramspaversionnumberofthisLicensewhichappliestoitand\anylaterversion",youhavetheoptionoffollowingthetermsandconditionseitherofthatversionorofanylaterversionpublishedbytheFreeSoftwareFoundation.IftheProgramdoesnotspecifyaversionnumberofthisLicense,youmaychooseanyversioneverpublishedbytheFreeSoftwareFoundation. GNUGENERALPUBLICLICENSE711.IfyouwishtoincorporatepartsoftheProgramintootherfreeprogramswhosedistri-butionconditionsaret,writetotheauthortoaskforpermission.ForsoftwarewhichiscopyrightedbytheFreeSoftwareFoundation,writetotheFreeSoftwareFoun-dation;wesometimesmakeexceptionsforthis.Ourdecisionwillbeguidedbythetwogoalsofpreservingthefreestatusofallderivativesofourfreesoftwareandofpromotingthesharingandreuseofsoftwaregenerally.NOWARRANTY12.BECAUSETHEPROGRAMISLICENSEDFREEOFCHARGE,THEREISNOWARRANTYFORTHEPROGRAM,TOTHEEXTENTPERMITTEDBYAPPLI-CABLELAW.EXCEPTWHENOTHERWISESTATEDINWRITINGTHECOPY-RIGHTHOLDERSAND/OROTHERPARTIESPROVIDETHEPROGRAM\ASIS"WITHOUTWARRANTYOFANYKIND,EITHEREXPRESSEDORIMPLIED,INCLUDING,BUTNOTLIMITEDTO,THEIMPLIEDWARRANTIESOFMER-CHANTABILITYANDFITNESSFORAPARTICULARPURPOSE.THEENTIRERISKASTOTHEQUALITYANDPERFORMANCEOFTHEPROGRAMISWITHYOU.SHOULDTHEPROGRAMPROVEDEFECTIVE,YOUASSUMETHECOSTOFALLNECESSARYSERVICING,REPAIRORCORRECTION.13.INNOEVENTUNLESSREQUIREDBYAPPLICABLELAWORAGREEDTOINWRITINGWILLANYCOPYRIGHTHOLDER,ORANYOTHERPARTYWHOMAYMODIFYAND/ORREDISTRIBUTETHEPROGRAMASPERMITTEDABOVE,BELIABLETOYOUFORDAMAGES,INCLUDINGANYGENERAL,SPECIAL,INCIDENTALORCONSEQUENTIALDAMAGESARISINGOUTOFTHEUSEORINABILITYTOUSETHEPROGRAM(INCLUDINGBUTNOTLIMITEDTOLOSSOFDATAORDATABEINGRENDEREDINACCURATEORLOSSESSUSTAINEDBYYOUORTHIRDPARTIESORAFAILUREOFTHEPROGRAMTOOPERATEWITHANYOTHERPROGRAMS),EVENIFSUCHHOLDEROROTHERPARTYHASBEENADVISEDOFTHEPOSSIBILITYOFSUCHDAMAGES.ENDOFTERMSANDCONDITIONS 8TheAWKManualHowtoApplyTheseTermstoYourNewProgramsIfyoudevelopanewprogram,andyouwantittobeofthegreatestpossibleusetothepublic,thebestwaytoachievethisistomakeitfreesoftwarewhicheveryonecanredistributeandchangeundertheseterms.Todoso,attachthefollowingnoticestotheprogram.Itissafesttoattachthemtothestartofeachsourcetomostelyconveytheexclusionofwarranty;andeachshouldhaveatleastthe\copyright"lineandapointertowherethefullnoticeisfound.onelinetogivetheprogram'snameandabriefideaofwhatitdoes.Copyright(C)19yynameofauthorThisprogramisfreesoftware;youcanredistributeitand/ormodifyitunderthetermsoftheGNUGeneralPublicLicenseaspublishedbytheFreeSoftwareFoundation;eitherversion2oftheLicense,or(atyouroption)anylaterversion.Thisprogramisdistributedinthehopethatitwillbeuseful,butWITHOUTANYWARRANTY;withouteventheimpliedwarrantyofMERCHANTABILITYorFITNESSFORAPARTICULARPURPOSE.SeetheGNUGeneralPublicLicenseformoredetails.YoushouldhavereceivedacopyoftheGNUGeneralPublicLicensealongwiththisprogram;ifnot,writetotheFreeSoftwareFoundation,Inc.,675MassAve,Cambridge,MA02139,USA.Alsoaddinformationonhowtocontactyoubyelectronicandpapermail.Iftheprogramisinteractive,makeitoutputashortnoticelikethiswhenitstartsinaninteractivemode:Gnomovisionversion69,Copyright(C)19yynameofauthorGnomovisioncomeswithABSOLUTELYNOWARRANTY;fordetailstype`showw'.Thisisfreesoftware,andyouarewelcometoredistributeitundercertainconditions;type`showc'fordetails.Thehypotheticalcommands`showw'and`showc'shouldshowtheappropriatepartsoftheGeneralPublicLicense.Ofcourse,thecommandsyouusemaybecalledsomethingotherthan`showw'and`showc';theycouldevenbemouse-clicksormenuitems|whateversuitsyourprogram.Youshouldalsogetyouremployer(ifyouworkasaprogrammer)oryourschool,ifany,tosigna\copyrightdisclaimer"fortheprogram,ifnecessary.Hereisasample;alterthenames:Yoyodyne,Inc.,herebydisclaimsallcopyrightinterestintheprogram`Gnomovision'(whichmakespassesatcompilers)writtenbyJamesHacker.signatureofTyCoon,1April1989TyCoon,PresidentofViceThisGeneralPublicLicensedoesnotpermitincorporatingyourprogramintoproprietaryprograms.Ifyourprogramisasubroutinelibrary,youmayconsideritmoreusefultopermit GNUGENERALPUBLICLICENSE9linkingproprietaryapplicationswiththelibrary.Ifthisiswhatyouwanttodo,usetheGNULibraryGeneralPublicLicenseinsteadofthisLicense. 10TheAWKManual Chapter1:UsingthisManual111UsingthisManualThetermawkreferstoaparticularprogram,andtothelanguageyouusetotellthisprogramwhattodo.Whenweneedtobecareful,wecalltheprogram\theawkutility"andthelanguage\theawklanguage."ThetermgawkreferstoaversionofawkdevelopedasparttheGNUproject.Thepurposeofthismanualistoexplainboththeawklanguageandhowtoruntheawkutility.Thetermawkprogramreferstoaprogramwrittenbyyouintheawkprogramminglanguage.SeeChapter2[GettingStartedwithawk],page13,forthebareessentialsyouneedtoknowtostartusingawk.Someuseful\one-liners"areincludedtogiveyouafeelfortheawklanguage(seeChap-ter5[Useful\One-liners"],page45).Asampleawkprogramhasbeenprovidedforyou(seeAppendixB[SampleProgram],page121).Ifyoutermsthatyouaren'tfamiliarwith,trylookingthemupintheglossary(seeAppendixC[Glossary],page123).TheentireawklanguageissummarizedforquickreferenceinAppendixA[awkSummary],page109.Lookthereifyoujustneedtorefreshyourmemoryaboutaparticularfeature.Mostofthetimecompleteawkprogramsareusedasexamples,butinsomeofthemoreadvancedsections,onlythepartoftheawkprogramthatillustratestheconceptbeingdescribedisshown.1.1DataFilesfortheExamplesManyoftheexamplesinthismanualtaketheirinputfromtwosampledataThecalled`BBS-list',representsalistofcomputerbulletinboardsystemstogetherwithinformationaboutthosesystems.Theseconddatacalled`inventory-shipped',con-tainsinformationaboutshipmentsonamonthlybasis.Eachlineoftheseisonerecord.Inthe`BBS-list',eachrecordcontainsthenameofacomputerbulletinboard,itsphonenumber,theboard'sbaudrate,andacodeforthenumberofhoursitisoperational.An`A'inthelastcolumnmeanstheboardoperates24hoursaday.A`B'inthelastcolumnmeanstheboardoperateseveningandweekendhours,only.A`C'meanstheboardoperatesonlyonweekends.aardvark555-55531200/300Balpo-net555-34122400/1200/300Abarfly555-76851200/300Abites555-16752400/1200/300Acamelot555-0542300Ccore555-29121200/300Cfooey555-12342400/1200/300Bfoot555-66991200/300B 12TheAWKManualmacfoo555-64801200/300Asdace555-34302400/1200/300Asabafoo555-21271200/300CTheseconddatacalled`inventory-shipped',representsinformationaboutship-mentsduringtheyear.Eachrecordcontainsthemonthoftheyear,thenumberofgreencratesshipped,thenumberofredboxesshipped,thenumberoforangebagsshipped,andthenumberofbluepackagesshipped,respectively.Thereare16entries,coveringthe12monthsofoneyearand4monthsofthenextyear.Jan132515115Feb153224226Mar152434228Apr315263420May163429208Jun314275492Jul243467436Aug153447316Sep135537277Oct295468525Nov208782577Dec173561401Jan213664620Feb265880652Mar247570495Apr217074514 Chapter2:GettingStartedwithawk132GettingStartedwithawkThebasicfunctionofawkistosearchforlines(orotherunitsoftext)thatcontaincertainpatterns.Whenalinematchesoneofthepatterns,awkperformsspactionsonthatline.awkkeepsprocessinginputlinesinthiswayuntiltheendoftheinputisreached.Whenyourunawk,youspecifyanawkprogramwhichtellsawkwhattodo.Theprogramconsistsofaseriesofrules.(Itmayalsocontainfunction,butthatisanadvancedfeature,sowewillignoreitfornow.SeeChapter12Functions],page97.)Eachrulesponepatterntosearchfor,andoneactiontoperformwhenthatpatternisfound.Syntactically,aruleconsistsofapatternfollowedbyanaction.Theactionisenclosedincurlybracestoseparateitfromthepattern.Rulesareusuallyseparatedbynewlines.Therefore,anawkprogramlookslikethis:pattern{action}pattern{action}...2.1AVerySimpleExampleThefollowingcommandrunsasimpleawkprogramthatsearchestheinput`BBS-list'forthestringofcharacters:`foo'.(Astringofcharactersisusuallycalled,astring.ThetermstringisperhapsbasedonsimilarusageinEnglish,suchas\astringofpearls,"or,\astringofcarsinatrain.")awk'/foo/{print$0}'BBS-listWhenlinescontaining`foo'arefound,theyareprinted,because`print$0'meansprintthecurrentline.(Just`print'byitselfmeansthesamething,sowecouldhavewrittenthatinstead.)Youwillnoticethatslashes,`/',surroundthestring`foo'intheactualawkprogram.Theslashesindicatethat`foo'isapatterntosearchfor.Thistypeofpatterniscalledaregularexpression,andiscoveredinmoredetaillater(seeSection6.2[RegularExpressionsasPatterns],page47).Therearesingle-quotesaroundtheawkprogramsothattheshellwon'tinterpretanyofitasspecialshellcharacters.Hereiswhatthisprogramprints:fooey555-12342400/1200/300Bfoot555-66991200/300Bmacfoo555-64801200/300Asabafoo555-21271200/300CInanawkrule,eitherthepatternortheactioncanbeomitted,butnotboth.Ifthepatternisomitted,thentheactionisperformedforeveryinputline.Iftheactionisomitted,thedefaultactionistoprintalllinesthatmatchthepattern.Thus,wecouldleaveouttheaction(theprintstatementandthecurlybraces)intheaboveexample,andtheresultwouldbethesame:alllinesmatchingthepattern`foo' 14TheAWKManualwouldbeprinted.Bycomparison,omittingtheprintstatementbutretainingthecurlybracesmakesanemptyactionthatdoesnothing;thennolineswouldbeprinted.2.2AnExamplewithTwoRulesTheawkutilityreadstheinputonelineatatime.Foreachline,awktriesthepatternsofeachoftherules.Ifseveralpatternsmatchthenseveralactionsarerun,intheorderinwhichtheyappearintheawkprogram.Ifnopatternsmatch,thennoactionsarerun.Afterprocessingalltherules(perhapsnone)thatmatchtheline,awkreadsthenextline(however,seeSection9.7[ThenextStatement],page78).Thiscontinuesuntiltheendoftheisreached.Forexample,theawkprogram:/12/{print$0}/21/{print$0}containstworules.Therulehasthestring`12'asthepatternand`print$0'astheaction.Thesecondrulehasthestring`21'asthepatternandalsohas`print$0'astheaction.Eachrule'sactionisenclosedinitsownpairofbraces.Thisawkprogramprintseverylinethatcontainsthestring`12'orthestring`21'.Ifalinecontainsbothstrings,itisprintedtwice,oncebyeachrule.Ifwerunthisprogramonourtwosampledata`BBS-list'and`inventory-shipped',asshownhere:awk'/12/{print$0}/21/{print$0}'BBS-listinventory-shippedwegetthefollowingoutput:aardvark555-55531200/300Balpo-net555-34122400/1200/300Abarfly555-76851200/300Abites555-16752400/1200/300Acore555-29121200/300Cfooey555-12342400/1200/300Bfoot555-66991200/300Bmacfoo555-64801200/300Asdace555-34302400/1200/300Asabafoo555-21271200/300Csabafoo555-21271200/300CJan213664620Apr217074514Notehowthelinein`BBS-list'beginningwith`sabafoo'wasprintedtwice,onceforeachrule. Chapter2:GettingStartedwithawk152.3AMoreComplexExampleHereisanexampletogiveyouanideaofwhattypicalawkprogramsdo.Thisexampleshowshowawkcanbeusedtosummarize,select,andrearrangetheoutputofanotherutility.Itusesfeaturesthathaven'tbeencoveredyet,sodon'tworryifyoudon'tunderstandallthedetails.ls-l|awk'$5=="Nov"{sum+=$4}END{printsum}'ThiscommandprintsthetotalnumberofbytesinalltheinthecurrentdirectorythatwerelastmoinNovember(ofanyyear).(IntheCshellyouwouldneedtotypeasemicolonandthenabackslashattheendoftheline;inaposix-compliantshell,suchastheBourneshellortheBourne-Againshell,youcantypetheexampleasshown.)The`ls-l'partofthisexampleisacommandthatgivesyoualistingoftheinadirectory,includingsizeanddate.Itsoutputlookslikethis:-rw-r--r--1close1933Nov713:05Makefile-rw-r--r--1close10809Nov713:03awk.h-rw-r--r--1close983Apr1312:14awk.tab.h-rw-r--r--1close31869Jun1512:20awk.y-rw-r--r--1close22414Nov713:03awk1.c-rw-r--r--1close37455Nov713:03awk2.c-rw-r--r--1close27511Dec913:07awk3.c-rw-r--r--1close7989Nov713:03awk4.cThecontainsread-writepermissions,thesecondcontainsthenumberoflinkstotheandthethirdidentheowneroftheThefourthcontainsthesizeoftheinbytes.Thesixth,andseventhcontainthemonth,day,andtime,respectively,thatthewaslastmoFinally,theeighthcontainsthenameoftheThe$5=="Nov"inourawkprogramisanexpressionthattestswhethertheoftheoutputfrom`ls-l'matchesthestring`Nov'.Eachtimealinehasthestring`Nov'initstheaction`{sum+=$4}'isperformed.Thisaddsthefourth(thesize)tothevariablesum.Asaresult,whenawkhasreadingalltheinputlines,sumisthesumofthesizesofwhoselinesmatchedthepattern.(Thisworksbecauseawkvariablesareautomaticallyinitializedtozero.)Afterthelastlineofoutputfromlshasbeenprocessed,theENDruleisexecuted,andthevalueofsumisprinted.Inthisexample,thevalueofsumwouldbe80600.Thesemoreadvancedawktechniquesarecoveredinlatersections(seeChapter7[OverviewofActions],page55).Beforeyoucanmoveontomoreadvancedawkprogram-ming,youhavetoknowhowawkinterpretsyourinputanddisplaysyouroutput.Bymanipulatingandusingprintstatements,youcanproducesomeveryusefulandspectacularlookingreports.2.4HowtoRunawkPrograms 16TheAWKManualThereareseveralwaystorunanawkprogram.Iftheprogramisshort,itiseasiesttoincludeitinthecommandthatrunsawk,likethis:awk'program'...whereprogramconsistsofaseriesofpatternsandactions,asdescribedearlier.Whentheprogramislong,itisusuallymoreconvenienttoputitinaandrunitwithacommandlikethis:awk-f...2.4.1One-shotThrow-awayawkProgramsOnceyouarefamiliarwithawk,youwilloftentypesimpleprogramsatthemomentyouwanttousethem.Thenyoucanwritetheprogramastheargumentoftheawkcommand,likethis:awk'program'...whereprogramconsistsofaseriesofpatternsandactions,asdescribedearlier.ThiscommandformatinstructstheshelltostartawkandusetheprogramtoprocessrecordsintheinputTherearesinglequotesaroundprogramsothattheshelldoesn'tinterpretanyawkcharactersasspecialshellcharacters.Theyalsocausetheshelltotreatallofprogramasasingleargumentforawkandallowprogramtobemorethanonelinelong.Thisformatisalsousefulforrunningshortormedium-sizedawkprogramsfromshellscripts,becauseitavoidstheneedforaseparatefortheawkprogram.Aself-containedshellscriptismorereliablesincetherearenoothertomisplace.2.4.2RunningawkwithoutInputFilesYoucanalsorunawkwithoutanyinputIfyoutypethecommandline:awk'program'thenawkappliestheprogramtothestandardinput,whichusuallymeanswhateveryoutypeontheterminal.ThiscontinuesuntilyouindicatebytypingControl-d.Forexample,ifyouexecutethiscommand:awk'/th/'whateveryoutypenextistakenasdataforthatawkprogram.Ifyougoontotypethefollowingdata:KathyBenTomBethSethKarenThomas Chapter2:GettingStartedwithawk17Control-dthenawkprintsthisoutput:KathyBethSethasmatchingthepattern`th'.Noticethatitdidnotrecognize`Thomas'asmatchingthepattern.Theawklanguageiscasesensitive,andmatchespatternsexactly.2.4.3RunningLongProgramsSometimesyourawkprogramscanbeverylong.InthiscaseitismoreconvenienttoputtheprogramintoaseparateTotellawktousethatforitsprogram,youtype:awk-f...The`-f'instructstheawkutilitytogettheawkprogramfromthe.Anynamecanbeusedfor.Forexample,youcouldputtheprogram:/th/intothe`th-prog'.Thenthiscommand:awk-fth-progdoesthesamethingasthisone:awk'/th/'whichwasexplainedearlier(seeSection2.4.2[RunningawkwithoutInputFiles],page16).Notethatyoudon'tusuallyneedsinglequotesaroundthenamethatyouspecifywith`-f',becausemostnamesdon'tcontainanyoftheshell'sspecialcharacters.Noticethatin`th-prog',theawkprogramdidnothavesinglequotesaroundit.Thequotesareonlyneededforprogramsthatareprovidedontheawkcommandline.Ifyouwanttoidentifyyourawkprogramclearlyassuch,youcanaddtheextension`.awk'tothename.Thisdoesn'ttheexecutionoftheawkprogram,butitdoesmake\housekeeping"easier.2.4.4ExecutableawkProgramsOnceyouhavelearnedawk,youmaywanttowriteself-containedawkscripts,usingthe`#!'scriptmechanism.YoucandothisonmanyUnixsystems1(andsomedayonGNU).Forexample,youcouldcreateatextnamed`hello',containingthefollowing(where`BEGIN'isafeaturewehavenotyetdiscussed):#!/bin/awk-f#asampleawkprogramBEGIN{print"hello,world"}Aftermakingthisexecutable(withthechmodcommand),youcansimplytype:1The`#!'mechanismworksonUnixsystemsderivedfromBerkeleyUnix,SystemVRelease4,andsomeSystemVRelease3systems. 18TheAWKManualhelloattheshell,andthesystemwillarrangetorunawk2asifyouhadtyped:awk-fhelloSelf-containedawkscriptsareusefulwhenyouwanttowriteaprogramwhichuserscaninvokewithoutknowingthattheprogramiswritteninawk.Ifyoursystemdoesnotsupportthe`#!'mechanism,youcangetasimilarusingaregularshellscript.Itwouldlooksomethinglikethis::ThecolonmakessurethisscriptisexecutedbytheBourneshell.awk'program'"$@"Usingthistechnique,itisvitaltoenclosetheprograminsinglequotestoprotectitfrominterpretationbytheshell.Ifyouomitthequotes,onlyashellwizardcanpredicttheresults.The`"$@"'causestheshelltoforwardallthecommandlineargumentstotheawkprogram,withoutinterpretation.Theline,whichstartswithacolon,isusedsothatthisshellscriptwillworkevenifinvokedbyauserwhousestheCshell.2.5CommentsinawkProgramsAcommentissometextthatisincludedinaprogramforthesakeofhumanreaders,andthatisnotreallypartoftheprogram.Commentscanexplainwhattheprogramdoes,andhowitworks.Nearlyallprogramminglanguageshaveprovisionsforcomments,becauseprogramsaretypicallyhardtounderstandwithouttheirextrahelp.Intheawklanguage,acommentstartswiththesharpsigncharacter,`#',andcontinuestotheendoftheline.Theawklanguageignorestherestofalinefollowingasharpsign.Forexample,wecouldhaveputthefollowinginto`th-prog':#Thisprogramfindsrecordscontainingthepattern`th'.Thisishow#youcontinuecommentsonadditionallines./th/Youcanputcommentlinesintokeyboard-composedthrow-awayawkprogramsalso,butthisusuallyisn'tveryuseful;thepurposeofacommentistohelpyouoranotherpersonunderstandtheprogramatalatertime.2.6awkStatementsversusLinesMostoften,eachlineinanawkprogramisaseparatestatementorseparaterule,likethis:2Thelinebeginningwith`#!'liststhefullpathnameofaninterpretertoberun,andanoptionalinitialcommandlineargumenttopasstothatinterpreter.Theoperatingsystemthenrunstheinterpreterwiththegivenargumentandthefullargumentlistoftheexecutedprogram.Theargumentinthelististhefullpathnameoftheawkprogram.Therestoftheargumentlistwilleitherbeoptionstoawk,ordataorboth. Chapter2:GettingStartedwithawk19awk'/12/{print$0}/21/{print$0}'BBS-listinventory-shippedButsometimesstatementscanbemorethanoneline,andlinescancontainseveralstatements.Youcansplitastatementintomultiplelinesbyinsertinganewlineafteranyofthefollowing:,{?:||&&doelseAnewlineatanyotherpointisconsideredtheendofthestatement.(Splittinglinesafter`?'and`:'isaminorgawkextension.The`?'and`:'referredtohereisthethreeoperandconditionalexpressiondescribedinSection8.11[ConditionalExpressions],page68.)Ifyouwouldliketosplitasinglestatementintotwolinesatapointwhereanewlinewouldterminateit,youcancontinueitbyendingthelinewithabackslashcharacter,`\'.Thisisallowedabsolutelyanywhereinthestatement,eveninthemiddleofastringorregularexpression.Forexample:awk'/Thisprogramistoolong,socontinueit\onthenextline/{print$1}'Wehavegenerallynotusedbackslashcontinuationinthesampleprogramsinthismanual.Sinceinawkthereisnolimitonthelengthofaline,itisneverstrictlynecessary;itjustmakesprogramsprettier.Wehavepreferredtomakethemevenmoreprettybykeepingthestatementsshort.Backslashcontinuationismostusefulwhenyourawkprogramisinaseparatesourceinsteadoftypedinonthecommandline.Youshouldalsonotethatmanyawkimplementationsaremorepickyaboutwhereyoumayusebackslashcontinuation.Formaximalportabilityofyourawkprograms,itisbestnottosplityourlinesinthemiddleofaregularexpressionorastring.Warning:backslashcontinuationdoesnotworkasdescribedabovewiththeCshell.Continuationwithbackslashworksforawkprogramsinandalsoforone-shotprogramsprovidedyouareusingaposix-compliantshell,suchastheBourneshellortheBourne-againshell.ButtheCshellusedonBerkeleyUnixbehavestly!There,youmustusetwobackslashesinarow,followedbyanewline.Whenawkstatementswithinoneruleareshort,youmightwanttoputmorethanoneofthemonaline.Youdothisbyseparatingthestatementswithasemicolon,`;'.Thisalsoappliestotherulesthemselves.Thus,thepreviousprogramcouldhavebeenwritten:/12/{print$0};/21/{print$0}Note:therequirementthatrulesonthesamelinemustbeseparatedwithasemicolonisarecentchangeintheawklanguage;itwasdoneforconsistencywiththetreatmentofstatementswithinanaction.2.7WhentoUseawkYoumightwonderhowawkmightbeusefulforyou.Usingadditionalutilityprograms,moreadvancedpatterns,separators,arithmeticstatements,andotherselectioncriteria,youcanproducemuchmorecomplexoutput.Theawklanguageisveryusefulforproducingreportsfromlargeamountsofrawdata,suchassummarizinginformationfromtheoutputofotherutilityprogramslikels.(SeeSection2.3[AMoreComplexExample],page15.) 20TheAWKManualProgramswrittenwithawkareusuallymuchsmallerthantheywouldbeinotherlan-guages.Thismakesawkprogramseasytocomposeanduse.Oftenawkprogramscanbequicklycomposedatyourterminal,usedonce,andthrownaway.Sinceawkprogramsareinterpreted,youcanavoidtheusuallylengthyedit-compile-test-debugcycleofsoftwaredevelopment.Complexprogramshavebeenwritteninawk,includingacompleteretargetableassemblerfor8-bitmicroprocessors(seeAppendixC[Glossary],page123,formoreinformation)andamicrocodeassemblerforaspecialpurposePrologcomputer.However,awk'scapabilitiesarestrainedbytasksofsuchcomplexity.Ifyouyourselfwritingawkscriptsofmorethan,say,afewhundredlines,youmightconsiderusingatprogramminglanguage.EmacsLispisagoodchoiceifyouneedsophisticatedstringorpatternmatchingcapabilities.Theshellisalsogoodatstringandpatternmatching;inaddition,itallowspowerfuluseofthesystemutilities.Moreconven-tionallanguages,suchasC,C++,andLisp,betterfacilitiesforsystemprogrammingandformanagingthecomplexityoflargeprograms.Programsintheselanguagesmayrequiremorelinesofsourcecodethantheequivalentawkprograms,buttheyareeasiertomaintainandusuallyrunmoretly. Chapter3:ReadingInputFiles213ReadingInputFilesInthetypicalawkprogram,allinputisreadeitherfromthestandardinput(bydefaultthekeyboard,butoftenapipefromanothercommand)orfromwhosenamesyouspecifyontheawkcommandline.Ifyouspecifyinputawkreadstheminorder,readingallthedatafromonebeforegoingontothenext.Thenameofthecurrentinputcanbefoundinthebuilt-invariableFILENAME(seeChapter13[Built-inVariables],page103).Theinputisreadinunitscalledrecords,andprocessedbytherulesonerecordatatime.Bydefault,eachrecordisoneline.Eachrecordissplitautomaticallyintotomakeitmoreconvenientforaruletoworkonitsparts.Onrareoccasionsyouwillneedtousethegetlinecommand,whichcandoexplicitinputfromanynumberof(seeSection3.7[ExplicitInputwithgetline],page29).3.1HowInputisSplitintoRecordsTheawklanguagedividesitsinputintorecordsandRecordsareseparatedbyacharactercalledtherecordseparator.Bydefault,therecordseparatoristhenewlinecharacter,arecordtobeasinglelineoftext.Sometimesyoumaywanttouseatcharactertoseparateyourrecords.Youcanuseatcharacterbychangingthebuilt-invariableRS.ThevalueofRSisastringthatsayshowtoseparaterecords;thedefaultvalueis"\n",thestringcontainingjustanewlinecharacter.Thisiswhyrecordsare,bydefault,singlelines.RScanhaveanystringasitsvalue,butonlythecharacterofthestringisusedastherecordseparator.Theothercharactersareignored.RSisexceptionalinthisregard;awkusesthefullvalueofallitsotherbuilt-invariables.YoucanchangethevalueofRSintheawkprogramwiththeassignmentoperator,`='(seeSection8.7[AssignmentExpressions],page64).Thenewrecord-separatorcharactershouldbeenclosedinquotationmarkstomakeastringconstant.Oftentherighttimetodothisisatthebeginningofexecution,beforeanyinputhasbeenprocessed,sothattheveryrecordwillbereadwiththeproperseparator.Todothis,usethespecialBEGINpattern(seeSection6.7[BEGINandENDSpecialPatterns],page53).Forexample:awk'BEGIN{RS="/"};{print$0}'BBS-listchangesthevalueofRSto"/",beforereadinganyinput.Thisisastringwhosecharacterisaslash;asaresult,recordsareseparatedbyslashes.Thentheinputisread,andthesecondruleintheawkprogram(theactionwithnopattern)printseachrecord.Sinceeachprintstatementaddsanewlineattheendofitsoutput,theofthisawkprogramistocopytheinputwitheachslashchangedtoanewline.Anotherwaytochangetherecordseparatorisonthecommandline,usingthevariable-assignmentfeature(seeChapter14[Invokingawk],page107).awk'{print$0}'RS="/"BBS-listThissetsRSto`/'beforeprocessing`BBS-list'. 22TheAWKManualReachingtheendofaninputterminatesthecurrentinputrecord,evenifthelastcharacterintheisnotthecharacterinRS.Theemptystring,""(astringofnocharacters),hasaspecialmeaningasthevalueofRS:itmeansthatrecordsareseparatedonlybyblanklines.SeeSection3.6[Multiple-LineRecords],page28,formoredetails.TheawkutilitykeepstrackofthenumberofrecordsthathavebeenreadsofarfromthecurrentinputThisvalueisstoredinabuilt-invariablecalledFNR.Itisresettozerowhenanewisstarted.Anotherbuilt-invariable,NR,isthetotalnumberofinputrecordsreadsofarfromallItstartsatzerobutisneverautomaticallyresettozero.IfyouchangethevalueofRSinthemiddleofanawkrun,thenewvalueisusedtodelimitsubsequentrecords,buttherecordcurrentlybeingprocessed(andrecordsalreadyprocessed)arenot3.2ExaminingFieldsWhenawkreadsaninputrecord,therecordisautomaticallyseparatedorparsedbytheinterpreterintochunkscalled.Bydefault,areseparatedbywhitespace,likewordsinaline.Whitespaceinawkmeansanystringofoneormorespacesand/ortabs;othercharacterssuchasnewline,formfeed,andsoon,thatareconsideredwhitespacebyotherlanguagesarenotconsideredwhitespacebyawk.Thepurposeofistomakeitmoreconvenientforyoutorefertothesepiecesoftherecord.Youdon'thavetousethem|youcanoperateonthewholerecordifyouwish|butarewhatmakesimpleawkprogramssopowerful.Torefertoainanawkprogram,youuseadollar-sign,`$',followedbythenumberoftheyouwant.Thus,$1referstothe$2tothesecond,andsoon.Forexample,supposethefollowingisalineofinput:Thisseemslikeaprettyniceexample.Heretheor$1,is`This';thesecondor$2,is`seems';andsoon.Notethatthelast$7,is`example.'.Becausethereisnospacebetweenthe`e'andthe`.',theperiodisconsideredpartoftheseventhNomatterhowmanythereare,thelastinarecordcanberepresentedby$NF.So,intheexampleabove,$NFwouldbethesameas$7,whichis`example.'.Whythisworksisexplainedbelow(seeSection3.3[Non-constantFieldNumbers],page23).Ifyoutrytorefertoabeyondthelastone,suchas$8whentherecordhasonly7yougettheemptystring.PlainNF,withno`$',isabuilt-invariablewhosevalueisthenumberofinthecurrentrecord.$0,whichlookslikeanattempttorefertothezerothisaspecialcase:itrepresentsthewholeinputrecord.Thisiswhatyouwoulduseifyouweren'tinterestedinHerearesomemoreexamples:awk'$1~/foo/{print$0}'BBS-list Chapter3:ReadingInputFiles23Thisexampleprintseachrecordinthe`BBS-list'whosecontainsthestring`foo'.Theoperator`~'iscalledamatchingoperator(seeSection8.5[ComparisonEx-pressions],page61);ittestswhetherastring(here,the$1)matchesagivenregularexpression.Bycontrast,thefollowingexample:awk'/foo/{print$1,$NF}'BBS-listlooksfor`foo'intheentirerecordandprintstheandthelastforeachinputrecordcontainingamatch.3.3Non-constantFieldNumbersThenumberofadoesnotneedtobeaconstant.Anyexpressionintheawklanguagecanbeusedaftera`$'torefertoaThevalueoftheexpressionspthenumber.Ifthevalueisastring,ratherthananumber,itisconvertedtoanumber.Considerthisexample:awk'{print$NR}'RecallthatNRisthenumberofrecordsreadsofar:1intherecord,2inthesecond,etc.Sothisexampleprintstheoftherecord,thesecondofthesecondrecord,andsoon.Forthetwentiethrecord,number20isprinted;mostlikely,therecordhasfewerthan20sothisprintsablankline.Hereisanotherexampleofusingexpressionsasnumbers:awk'{print$(2*2)}'BBS-listTheawklanguagemustevaluatetheexpression(2*2)anduseitsvalueasthenumberofthetoprint.The`*'signrepresentsmultiplication,sotheexpression2*2evaluatesto4.Theparenthesesareusedsothatthemultiplicationisdonebeforethe`$'operation;theyarenecessarywheneverthereisabinaryoperatorintheumberexpression.Thisexample,then,printsthehoursofoperation(thefourthforeverylineofthe`BBS-list'.Ifthenumberyoucomputeiszero,yougettheentirerecord.Thus,$(2-2)hasthesamevalueas$0.Negativenumbersarenotallowed.Thenumberofinthecurrentrecordisstoredinthebuilt-invariableNF(seeChapter13[Built-inVariables],page103).Theexpression$NFisnotaspecialfeature:itisthedirectconsequenceofevaluatingNFandusingitsvalueasanumber.3.4ChangingtheContentsofaFieldYoucanchangethecontentsofaasseenbyawkwithinanawkprogram;thischangeswhatawkperceivesasthecurrentinputrecord.(Theactualinputisuntouched:awknevermotheinputConsiderthisexample: 24TheAWKManualawk'{$3=$2-10;print$2,$3}'inventory-shippedThe`-'signrepresentssubtraction,sothisprogramreassignsthree,$3,tobethevalueoftwominusten,$2-10.(SeeSection8.3[ArithmeticOperators],page60.)Thentwo,andthenewvalueforthree,areprinted.Inorderforthistowork,thetextin$2mustmakesenseasanumber;thestringofcharactersmustbeconvertedtoanumberinorderforthecomputertodoarithmeticonit.Thenumberresultingfromthesubtractionisconvertedbacktoastringofcharacterswhichthenbecomesthree.SeeSection8.9[ConversionofStringsandNumbers],page66.Whenyouchangethevalueofa(asperceivedbyawk),thetextoftheinputrecordisrecalculatedtocontainthenewwheretheoldonewas.Therefore,$0changestothealteredThus,awk'{$2=$2-10;print$0}'inventory-shippedprintsacopyoftheinputwith10subtractedfromthesecondofeachline.Youcanalsoassigncontentstothatareoutofrange.Forexample:awk'{$6=($5+$4+$3+$2);print$6}'inventory-shippedWe'vejustcreated$6,whosevalueisthesumof$2,$3,$4,and$5.The`+'signrepresentsaddition.Forthe`inventory-shipped',$6representsthetotalnumberofparcelsshippedforaparticularmonth.Creatinganewchangestheinternalawkcopyofthecurrentinputrecord|thevalueof$0.Thus,ifyoudo`print$0'afteraddingatherecordprintedincludesthenewwiththeappropriatenumberofseparatorsbetweenitandthepreviouslyexistingThisrecomputationandisbyseveralfeaturesnotyetdiscussed,inpar-ticular,theoutputseparator,OFS,whichisusedtoseparatethe(seeSection4.3[OutputSeparators],page37),andNF(thenumberofseeSection3.2[ExaminingFields],page22).Forexample,thevalueofNFissettothenumberofthehighestyoucreate.Note,however,thatmerelyreferencinganout-of-rangedoesnotchangethevalueofeither$0orNF.Referencinganout-of-rangemerelyproducesanullstring.Forexample:if($(NF+1)!="")print"can'thappen"elseprint"everythingisnormal"shouldprint`everythingisnormal',becauseNF+1iscertaintobeoutofrange.(SeeSection9.1[TheifStatement],page73,formoreinformationaboutawk'sif-elsestate-ments.)Itisimportanttonotethatassigningtoawillchangethevalueof$0,butwillnotchangethevalueofNF,evenwhenyouassignthenullstringtoaForexample:echoabcd|awk'{OFS=":";$2="";print;printNF}'printsa::c:d4 Chapter3:ReadingInputFiles25Theisstillthere,itjusthasanemptyvalue.Youcantellbecausetherearetwocolonsinarow.3.5SpecifyinghowFieldsareSeparated(Thissectionisratherlong;itdescribesoneofthemostfundamentaloperationsinawk.Ifyouareanovicewithawk,werecommendthatyoure-readthissectionafteryouhavestudiedthesectiononregularexpressions,Section6.2[RegularExpressionsasPatterns],page47.)Thewayawksplitsaninputrecordintoiscontrolledbytheseparator,whichisasinglecharacteroraregularexpression.awkscanstheinputrecordformatchesfortheseparator;thethemselvesarethetextbetweenthematches.Forexample,iftheseparatoris`oo',thenthefollowingline:moogoogaipanwouldbesplitintothree`m',`g'and`gaipan'.Theseparatorisrepresentedbythebuilt-invariableFS.Shellprogrammerstakenote!awkdoesnotusethenameIFSwhichisusedbytheshell.YoucanchangethevalueofFSintheawkprogramwiththeassignmentoperator,`='(seeSection8.7[AssignmentExpressions],page64).Oftentherighttimetodothisisatthebeginningofexecution,beforeanyinputhasbeenprocessed,sothattheveryrecordwillbereadwiththeproperseparator.Todothis,usethespecialBEGINpattern(seeSection6.7[BEGINandENDSpecialPatterns],page53).Forexample,herewesetthevalueofFStothestring",":awk'BEGIN{FS=","};{print$2}'Giventheinputline,JohnQ.Smith,29OakSt.,Walamazoo,MI42139thisawkprogramextractsthestring`29OakSt.'.Sometimesyourinputdatawillcontainseparatorcharactersthatdon'tseparatethewayyouthoughttheywould.Forinstance,theperson'snameintheexamplewe'vebeenusingmighthaveatitleorattached,suchas`JohnQ.Smith,LXIX'.Frominputcontainingsuchaname:JohnQ.Smith,LXIX,29OakSt.,Walamazoo,MI42139theprevioussampleprogramwouldextract`LXIX',insteadof`29OakSt.'.Ifyouwereexpectingtheprogramtoprinttheaddress,youwouldbesurprised.Sochooseyourdatalayoutandseparatorcharacterscarefullytopreventsuchproblems.Asyouknow,bydefault,areseparatedbywhitespacesequences(spacesandtabs),notbysinglespaces:twospacesinarowdonotdelimitanemptyThedefaultvalueoftheseparatorisastring""containingasinglespace.Ifthisvaluewereinterpretedintheusualway,eachspacecharacterwouldseparatesotwospacesinarowwouldmakeanemptybetweenthem.ThereasonthisdoesnothappenisthatasinglespaceasthevalueofFSisaspecialcase:itistakentospecifythedefaultmannerofdelimiting 26TheAWKManualIfFSisanyothersinglecharacter,suchas",",theneachoccurrenceofthatcharacterseparatestwoTwoconsecutiveoccurrencesdelimitanemptyIfthecharacteroccursatthebeginningortheendoftheline,thattoodelimitsanemptyThespacecharacteristheonlysinglecharacterwhichdoesnotfollowtheserules.Moregenerally,thevalueofFSmaybeastringcontaininganyregularexpression.TheneachmatchintherecordfortheregularexpressionseparatesForexample,theassignment:FS=",\t"makeseveryareaofaninputlinethatconsistsofacommafollowedbyaspaceandatab,intoaseparator.(`\t'standsforatab.)Foralesstrivialexampleofaregularexpression,supposeyouwantsinglespacestoseparatethewaysinglecommaswereusedabove.YoucansetFSto"[]".Thisregularexpressionmatchesasinglespaceandnothingelse.FScanbesetonthecommandline.Youusethe`-F'argumenttodoso.Forexample:awk-F,'program'setsFStobethe`,'character.Noticethattheargumentusesacapital`F'.Contrastthiswith`-f',whichspacontaininganawkprogram.Caseistincommandoptions:the`-F'and`-f'optionshavenothingtodowitheachother.YoucanusebothoptionsatthesametimetosettheFSargumentandgetanawkprogramfromaThevalueusedfortheargumentto`-F'isprocessedinexactlythesamewayasassign-mentstothebuilt-invariableFS.Thismeansthatiftheseparatorcontainsspecialcharacters,theymustbeescapedappropriately.Forexample,tousea`\'astheseparator,youwouldhavetotype:#sameasFS="\\"awk-F\\\\'...'files...Since`\'isusedforquotingintheshell,awkwillsee`-F\\'.Thenawkprocessesthe`\\'forescapecharacters(seeSection8.1[ConstantExpressions],page57),yieldingasingle`\'tobeusedfortheseparator.Asaspecialcase,incompatibilitymode(seeChapter14[Invokingawk],page107),iftheargumentto`-F'is`t',thenFSissettothetabcharacter.(Thisisbecauseifyoutype`-F\t',withoutthequotes,attheshell,the`\'getsdeleted,soawkthatyoureallywantyourtobeseparatedwithtabs,andnot`t's.Use`-vFS="t"'onthecommandlineifyoureallydowanttoseparateyourwith`t's.)Forexample,let'suseanawkprogramcalled`baud.awk'thatcontainsthepattern/300/,andtheaction`print$1'.Hereistheprogram:/300/{print$1}Let'salsosetFStobethe`-'character,andruntheprogramonthe`BBS-list'.Thefollowingcommandprintsalistofthenamesofthebulletinboardsthatoperateat300baudandthethreedigitsoftheirphonenumbers:awk-F--fbaud.awkBBS-listItproducesthisoutput:aardvark555alpo Chapter3:ReadingInputFiles27barfly555bites555camelot555core555fooey555foot555macfoo555sdace555sabafoo555Notethesecondlineofoutput.Ifyouchecktheoriginalyouwillseethatthesecondlinelookedlikethis:alpo-net555-34122400/1200/300AThe`-'aspartofthesystem'snamewasusedastheseparator,insteadofthe`-'inthephonenumberthatwasoriginallyintended.Thisdemonstrateswhyyouhavetobecarefulinchoosingyourandrecordseparators.Thefollowingprogramsearchesthesystempasswordandprintstheentriesforuserswhohavenopassword:awk-F:'$2==""'/etc/passwdHereweusethe`-F'optiononthecommandlinetosettheseparator.Notethatin`/etc/passwd'areseparatedbycolons.Thesecondrepresentsauser'sencryptedpassword,butiftheisempty,thatuserhasnopassword.Accordingtotheposixstandard,awkissupposedtobehaveasifeachrecordissplitintoatthetimethatitisread.Inparticular,thismeansthatyoucanchangethevalueofFSafterarecordisread,butbeforeanyofthearereferenced.Thevalueofthe(i.e.howtheyweresplit)shouldtheoldvalueofFS,notthenewone.However,manyimplementationsofawkdonotdothis.Instead,theydefersplittingtheuntilareferenceactuallyhappens,usingthecurrentvalueofFS!Thisbehaviorcanbetodiagnose.Thefollowingexampleillustratestheresultsofthetwomethods.(Thesedcommandprintsjustthelineof`/etc/passwd'.)sed1q/etc/passwd|awk'{FS=":";print$1}'willusuallyprintrootonanincorrectimplementationofawk,whilegawkwillprintsomethinglikeroot:nSijPlPhZZwgE:0:0:Root:/:Thereisanimportantbetweenthetwocasesof`FS=""'(asingleblank)and`FS="[\t]+"'(whichisaregularexpressionmatchingoneormoreblanksortabs).ForbothvaluesofFS,areseparatedbyrunsofblanksand/ortabs.However,whenthevalueofFSis"",awkwillstripleadingandtrailingwhitespacefromtherecord,andthendecidewheretheare.Forexample,thefollowingexpressionprints`b':echo'abcd'|awk'{print$2}'However,thefollowingprints`a': 28TheAWKManualecho'abcd'|awk'BEGIN{FS="[\t]+"};{print$2}'Inthiscase,theisnull.Thestrippingofleadingandtrailingwhitespacealsocomesintoplaywhenever$0isrecomputed.Forinstance,thispipelineecho'abcd'|awk'{print;$2=$2;print}'producesthisoutput:abcdabcdTheprintstatementprintstherecordasitwasread,withleadingwhitespaceintact.Theassignmentto$2rebuilds$0byconcatenating$1through$NFtogether,separatedbythevalueofOFS.Sincetheleadingwhitespacewasignoredwhen$1,itisnotpartofthenew$0.Finally,thelastprintstatementprintsthenew$0.Thefollowingtablesummarizeshowaresplit,basedonthevalueofFS.FS==""Fieldsareseparatedbyrunsofwhitespace.Leadingandtrailingwhitespaceareignored.Thisisthedefault.FS==anysinglecharacterFieldsareseparatedbyeachoccurrenceofthecharacter.Multiplesuccessiveoccurrencesdelimitemptyasdoleadingandtrailingoccurrences.FS==regexpFieldsareseparatedbyoccurrencesofcharactersthatmatchregexp.Leadingandtrailingmatchesofregexpdelimitempty3.6Multiple-LineRecordsInsomedatabases,asinglelinecannotconvenientlyholdalltheinformationinoneentry.Insuchcases,youcanusemulti-linerecords.Thestepindoingthisistochooseyourdataformat:whenrecordsarenotassinglelines,howdoyouwanttothem?Whatshouldseparaterecords?Onetechniqueistouseanunusualcharacterorstringtoseparaterecords.Forexample,youcouldusetheformfeedcharacter(written\finawk,asinC)toseparatethem,makingeachrecordapageoftheTodothis,justsetthevariableRSto"\f"(astringcontainingtheformfeedcharacter).Anyothercharactercouldequallywellbeused,aslongasitwon'tbepartofthedatainarecord.Anothertechniqueistohaveblanklinesseparaterecords.Byaspecialdispensation,anullstringasthevalueofRSindicatesthatrecordsareseparatedbyoneormoreblanklines.IfyousetRStothenullstring,arecordalwaysendsattheblanklineencountered.Andthenextrecorddoesn'tstartuntilthenonblanklinethatfollows|nomatterhowmanyblanklinesappearinarow,theyareconsideredonerecord-separator.(Endofisalsoconsideredarecordseparator.)Thesecondstepistoseparatetheintherecord.Onewaytodothisistoputeachonaseparateline:todothis,justsetthevariableFStothestring"\n".(Thissimpleregularexpressionmatchesasinglenewline.) Chapter3:ReadingInputFiles29Anotherwaytoseparateistodivideeachofthelinesintointhenormalmanner.Thishappensbydefaultasaresultofaspecialfeature:whenRSissettothenullstring,thenewlinecharacteralwaysactsasaseparator.ThisisinadditiontowhateverseparationsresultfromFS.Theoriginalmotivationforthisspecialexceptionwasprobablysothatyougetusefulbehaviorinthedefaultcase(i.e.,FS=="").Thisfeaturecanbeaproblemifyoureallydon'twantthenewlinecharactertoseparatesincethereisnowaytopreventit.However,youcanworkaroundthisbyusingthesplitfunctiontobreakuptherecordmanually(seeSection11.3[Built-inFunctionsforStringManipulation],page91).3.7ExplicitInputwithgetlineSofarwehavebeengettingourinputfromawk'smaininputstream|eitherthestandardinput(usuallyyourterminal)orthesponthecommandline.Theawklanguagehasaspecialbuilt-incommandcalledgetlinethatcanbeusedtoreadinputunderyourexplicitcontrol.Thiscommandisquitecomplexandshouldnotbeusedbybeginners.Itiscoveredherebecausethisisthechapteroninput.Theexamplesthatfollowtheexplanationofthegetlinecommandincludematerialthathasnotbeencoveredyet.Therefore,comebackandstudythegetlinecommandafteryouhavereviewedtherestofthismanualandhaveagoodknowledgeofhowawkworks.getlinereturns1ifitarecord,and0iftheendoftheisencountered.Ifthereissomeerroringettingarecord,suchasathatcannotbeopened,thengetlinereturns1.Inthefollowingexamples,commandstandsforastringvaluethatrepresentsashellcommand.getlineThegetlinecommandcanbeusedwithoutargumentstoreadinputfromthecurrentinputAllitdoesinthiscaseisreadthenextinputrecordandsplititupintoThisisusefulifyou'veprocessingthecurrentrecord,butyouwanttodosomespecialprocessingrightnowonthenextrecord.Here'sanexample:awk'{if(t=index($0,"/*")){if(t>1)tmp=substr($0,1,t-1)elsetmp=""u=index(substr($0,t+2),"*/")while(u==0){getlinet=-1u=index($0,"*/")}if(u<=length($0)-2)$0=tmpsubstr($0,t+u+3) 30TheAWKManualelse$0=tmp}print$0}'ThisawkprogramdeletesallC-stylecomments,`/*...*/',fromtheinput.Byreplacingthe`print$0'withotherstatements,youcouldperformmorecomplicatedprocessingonthedecommentedinput,likesearchingformatchesofaregularexpression.(Thisprogramhasasubtleproblem|canyouspotit?)ThisformofthegetlinecommandsetsNF(thenumberofseeSec-tion3.2[ExaminingFields],page22),NR(thenumberofrecordsreadsofar;seeSection3.1[HowInputisSplitintoRecords],page21),FNR(thenumberofrecordsreadfromthisinputandthevalueof$0.Note:thenewvalueof$0isusedintestingthepatternsofanysubsequentrules.Theoriginalvalueof$0thattriggeredtherulewhichexecutedgetlineislost.Bycontrast,thenextstatementreadsanewrecordbutimmediatelybeginsprocessingitnormally,startingwiththeruleintheprogram.SeeSection9.7[ThenextStatement],page78.getlinevarThisformofgetlinereadsarecordintothevariablevar.Thisisusefulwhenyouwantyourprogramtoreadthenextrecordfromthecurrentinputbutyoudon'twanttosubjecttherecordtothenormalinputprocessing.Forexample,supposethenextlineisacomment,oraspecialstring,andyouwanttoreadit,butyoumustmakecertainthatitwon'ttriggeranyrules.Thisversionofgetlineallowsyoutoreadthatlineandstoreitinavariablesothatthemainread-a-line-and-check-each-ruleloopofawkneverseesit.Thefollowingexampleswapseverytwolinesofinput.Forexample,given:wantewfreephoreitoutputs:tewwanphorefreeHere'stheprogram:awk'{if((getlinetmp)>0){printtmpprint$0}elseprint$0}' Chapter3:ReadingInputFiles31ThegetlinefunctionusedinthiswaysetsonlythevariablesNRandFNR(andofcourse,var).Therecordisnotsplitintosothevaluesofthe(including$0)andthevalueofNFdonotchange.getline<Thisformofthegetlinefunctiontakesitsinputfromthe.Hereisastring-valuedexpressionthatspthename.`<'iscalledaredirectionsinceitdirectsinputtocomefromatplace.Thisformisusefulifyouwanttoreadyourinputfromaparticularinsteadoffromthemaininputstream.Forexample,thefollowingprogramreadsitsinputrecordfromthe`foo.input'whenitencountersawithavalueequalto10inthecurrentinputawk'{if($1==10){getline<"foo.input"print}elseprint}'Sincethemaininputstreamisnotused,thevaluesofNRandFNRarenotchanged.Buttherecordreadissplitintointhenormalmanner,sothevaluesof$0andotherarechanged.SoisthevalueofNF.Thisdoesnotcausetherecordtobetestedagainstallthepatternsintheawkprogram,inthewaythatwouldhappeniftherecordwerereadnormallybythemainprocessingloopofawk.Howeverthenewrecordistestedagainstanysubsequentrules,justaswhengetlineisusedwithoutaredirection.getlinevar<Thisformofthegetlinefunctiontakesitsinputfromtheandputsitinthevariablevar.Asabove,isastring-valuedexpressionthatspthefromwhichtoread.Inthisversionofgetline,noneofthebuilt-invariablesarechanged,andtherecordisnotsplitintoTheonlyvariablechangedisvar.Forexample,thefollowingprogramcopiesalltheinputtotheoutput,exceptforrecordsthatsay`@include'.Sucharecordisreplacedbythecontentsofthe.awk'{if(NF==2&&$1=="@include"){while((getlineline<$2)>0)printlineclose($2)}elseprint}'Noteherehowthenameoftheextrainputisnotbuiltintotheprogram;itistakenfromthedata,fromthesecondonthe`@include'line. 32TheAWKManualTheclosefunctioniscalledtoensurethatiftwoidentical`@include'linesappearintheinput,theentirespisincludedtwice.SeeSection3.8[ClosingInputFilesandPipes],page33.Oneofthisprogramisthatitdoesnotprocessnested`@include'statementsthewayatruemacropreprocessorwould.command|getlineYoucanpipetheoutputofacommandintogetline.Apipeissimplyawaytolinktheoutputofoneprogramtotheinputofanother.Inthiscase,thestringcommandisrunasashellcommandanditsoutputispipedintoawktobeusedasinput.Thisformofgetlinereadsonerecordfromthepipe.Forexample,thefollowingprogramcopiesinputtooutput,exceptforlinesthatbeginwith`@execute',whicharereplacedbytheoutputproducedbyrunningtherestofthelineasashellcommand:awk'{if($1=="@execute"){tmp=substr($0,10)while((tmp|getline)>0)printclose(tmp)}elseprint}'Theclosefunctioniscalledtoensurethatiftwoidentical`@execute'linesappearintheinput,thecommandisrunforeachone.SeeSection3.8[ClosingInputFilesandPipes],page33.Giventheinput:foobarbaz@executewhobletchtheprogrammightproduce:foobarbazhackttyv0Jul1314:22hackttyp0Jul1314:23(gnu:0)hackttyp1Jul1314:23(gnu:0)hackttyp2Jul1314:23(gnu:0)hackttyp3Jul1314:23(gnu:0)bletchNoticethatthisprogramranthecommandwhoandprintedtheresult.(Ifyoutrythisprogramyourself,youwillgettresults,showingyouwhoisloggedinonyoursystem.)ThisvariationofgetlinesplitstherecordintosetsthevalueofNFandrecomputesthevalueof$0.ThevaluesofNRandFNRarenotchanged. Chapter3:ReadingInputFiles33command|getlinevarTheoutputofthecommandcommandissentthroughapipetogetlineandintothevariablevar.Forexample,thefollowingprogramreadsthecurrentdateandtimeintothevariablecurrent_time,usingthedateutility,andthenprintsit.awk'BEGIN{"date"|getlinecurrent_timeclose("date")print"Reportprintedon"current_time}'Inthisversionofgetline,noneofthebuilt-invariablesarechanged,andtherecordisnotsplitinto3.8ClosingInputFilesandPipesIfthesamenameorthesameshellcommandisusedwithgetlinemorethanonceduringtheexecutionofanawkprogram,theisopened(orthecommandisexecuted)onlythetime.Atthattime,therecordofinputisreadfromthatorcommand.Thenexttimethesameorcommandisusedingetline,anotherrecordisreadfromit,andsoon.Thisimpliesthatifyouwanttostartreadingthesameagainfromthebeginning,orifyouwanttorerunashellcommand(ratherthanreadingmoreoutputfromthecommand),youmusttakespecialsteps.Whatyoumustdoisusetheclosefunction,asfollows:close()orclose(command)Theargumentorcommandcanbeanyexpression.Itsvaluemustexactlyequalthestringthatwasusedtoopentheorstartthecommand|forexample,ifyouopenapipewiththis:"sort-rnames"|getlinefoothenyoumustcloseitwiththis:close("sort-rnames")Oncethisfunctioncallisexecuted,thenextgetlinefromthatorcommandwillreopentheorrerunthecommand.closereturnsavalueofzeroiftheclosesucceeded.Otherwise,thevaluewillbenon-zero. 34TheAWKManual Chapter4:PrintingOutput354PrintingOutputOneofthemostcommonthingsthatactionsdoistooutputorprintsomeoralloftheinput.Forsimpleoutput,usetheprintstatement.Forfancierformattingusetheprintfstatement.Botharedescribedinthischapter.4.1TheprintStatementTheprintstatementdoesoutputwithsimple,standardizedformatting.Youspecifyonlythestringsornumberstobeprinted,inalistseparatedbycommas.Theyareoutput,separatedbysinglespaces,followedbyanewline.Thestatementlookslikethis:printitem1,item2,...Theentirelistofitemsmayoptionallybeenclosedinparentheses.Theparenthesesarenecessaryifanyoftheitemexpressionsusesarelationaloperator;otherwiseitcouldbeconfusedwitharedirection(seeSection4.6[RedirectingOutputofprintandprintf],page41).Therelationaloperatorsare`==',`!=',`<',`>',`>=',`<=',`~'and`!~'(seeSec-tion8.5[ComparisonExpressions],page61).Theitemsprintedcanbeconstantstringsornumbers,ofthecurrentrecord(suchas$1),variables,oranyawkexpressions.Theprintstatementiscompletelygeneralforcomputingwhatvaluestoprint.Withtwoexceptions,youcannotspecifyhowtoprintthem|howmanycolumns,whethertouseexponentialnotationornot,andsoon.(SeeSection4.3[OutputSeparators],page37,andSection4.4[ControllingNumericOutputwithprint],page37.)Forthat,youneedtheprintfstatement(seeSection4.5[UsingprintfStatementsforFancierPrinting],page38).Thesimplestatement`print'withnoitemsisequivalentto`print$0':itprintstheentirecurrentrecord.Toprintablankline,use`print""',where""isthenull,orempty,string.Toprintapieceoftext,useastringconstantsuchas"Hellothere"asoneitem.Ifyouforgettousethedouble-quotecharacters,yourtextwillbetakenasanawkexpression,andyouwillprobablygetanerror.Keepinmindthataspaceisprintedbetweenanytwoitems.Mostoften,eachprintstatementmakesonelineofoutput.Butitisn'tlimitedtooneline.Ifanitemvalueisastringthatcontainsanewline,thenewlineisoutputalongwiththerestofthestring.Asingleprintcanmakeanynumberoflinesthisway.4.2ExamplesofprintStatementsHereisanexampleofprintingastringthatcontainsembeddednewlines:awk'BEGIN{print"lineone\nlinetwo\nlinethree"}'producesoutputlikethis: 36TheAWKManuallineonelinetwolinethreeHereisanexamplethatprintsthetwoofeachinputrecord,withaspacebetweenthem:awk'{print$1,$2}'inventory-shippedItsoutputlookslikethis:Jan13Feb15Mar15...Acommonmistakeinusingtheprintstatementistoomitthecommabetweentwoitems.Thisoftenhastheofmakingtheitemsruntogetherintheoutput,withnospace.Thereasonforthisisthatjuxtaposingtwostringexpressionsinawkmeanstoconcatenatethem.Forexample,withoutthecomma:awk'{print$1$2}'inventory-shippedprints:Jan13Feb15Mar15...Neitherexample'soutputmakesmuchsensetosomeoneunfamiliarwiththe`inventory-shipped'.Aheadinglineatthebeginningwouldmakeitclearer.Let'saddsomeheadingstoourtableofmonths($1)andgreencratesshipped($2).WedothisusingtheBEGINpattern(seeSection6.7[BEGINandENDSpecialPatterns],page53)toforcetheheadingstobeprintedonlyonce:awk'BEGIN{print"MonthCrates"print"-----------"}{print$1,$2}'inventory-shippedDidyoualreadyguesswhathappens?Thisprogramprintsthefollowing:MonthCrates-----------Jan13Feb15Mar15...Theheadingsandthetabledatadon'tlineup!Wecanthisbyprintingsomespacesbetweenthetwoawk'BEGIN{print"MonthCrates"print"-----------"}{print$1,"",$2}'inventory-shippedYoucanimaginethatthiswayofliningupcolumnscangetprettycomplicatedwhenyouhavemanycolumnstoCountingspacesfortwoorthreecolumnscanbesimple,butmorethanthisandyoucanget\lost"quiteeasily.Thisiswhytheprintfstatementwascreated(seeSection4.5[UsingprintfStatementsforFancierPrinting],page38);oneofitsspecialtiesisliningupcolumnsofdata. Chapter4:PrintingOutput374.3OutputSeparatorsAsmentionedpreviously,aprintstatementcontainsalistofitems,separatedbycom-mas.Intheoutput,theitemsarenormallyseparatedbysinglespaces.Buttheydonothavetobespaces;asinglespaceisonlythedefault.Youcanspecifyanystringofcharacterstouseastheoutputseparatorbysettingthebuilt-invariableOFS.Theinitialvalueofthisvariableisthestring"",thatis,justasinglespace.Theoutputfromanentireprintstatementiscalledanoutputrecord.Eachprintstatementoutputsoneoutputrecordandthenoutputsastringcalledtheoutputrecordseparator.Thebuilt-invariableORSspthisstring.Theinitialvalueofthevariableisthestring"\n"containinganewlinecharacter;thus,normallyeachprintstatementmakesaseparateline.YoucanchangehowoutputandrecordsareseparatedbyassigningnewvaluestothevariablesOFSand/orORS.TheusualplacetodothisisintheBEGINrule(seeSection6.7[BEGINandENDSpecialPatterns],page53),sothatithappensbeforeanyinputisprocessed.Youmayalsodothiswithassignmentsonthecommandline,beforethenamesofyourinputThefollowingexampleprintstheandsecondofeachinputrecordseparatedbyasemicolon,withablanklineaddedaftereachline:awk'BEGIN{OFS=";";ORS="\n\n"}{print$1,$2}'BBS-listIfthevalueofORSdoesnotcontainanewline,allyouroutputwillberuntogetheronasingleline,unlessyououtputnewlinessomeotherway.4.4ControllingNumericOutputwithprintWhenyouusetheprintstatementtoprintnumericvalues,awkinternallyconvertsthenumbertoastringofcharacters,andprintsthatstring.awkusesthesprintffunctiontodothisconversion.Fornow,ittosaythatthesprintffunctionacceptsaformatspthattellsithowtoformatnumbers(orstrings),andthatthereareanumberoftwaysthatnumberscanbeformatted.ThetformatsparediscussedmorefullyinSection4.5[UsingprintfStatementsforFancierPrinting],page38.Thebuilt-invariableOFMTcontainsthedefaultformatspthatprintuseswithsprintfwhenitwantstoconvertanumbertoastringforprinting.BysupplyingtformatspasthevalueofOFMT,youcanchangehowprintwillprintyournumbers.Asabriefexample:awk'BEGIN{OFMT="%d"#printnumbersasintegersprint17.23}'willprint`17'. 38TheAWKManual4.5UsingprintfStatementsforFancierPrintingIfyouwantmoreprecisecontrolovertheoutputformatthanprintgivesyou,useprintf.Withprintfyoucanspecifythewidthtouseforeachitem,andyoucanspecifyvariousstylisticchoicesfornumbers(suchaswhatradixtouse,whethertoprintanexpo-nent,whethertoprintasign,andhowmanydigitstoprintafterthedecimalpoint).Youdothisbyspecifyingastring,calledtheformatstring,whichcontrolshowandwheretoprinttheotherarguments.4.5.1IntroductiontotheprintfStatementTheprintfstatementlookslikethis:printfformat,item1,item2,...Theentirelistofargumentsmayoptionallybeenclosedinparentheses.Theparenthesesarenecessaryifanyoftheitemexpressionsusesarelationaloperator;otherwiseitcouldbeconfusedwitharedirection(seeSection4.6[RedirectingOutputofprintandprintf],page41).Therelationaloperatorsare`==',`!=',`<',`>',`>=',`<=',`~'and`!~'(seeSec-tion8.5[ComparisonExpressions],page61).Thebetweenprintfandprintistheargumentformat.Thisisanexpressionwhosevalueistakenasastring;itsphowtooutputeachoftheotherarguments.Itiscalledtheformatstring.TheformatstringisthesameasintheansiClibraryfunctionprintf.Mostofformatistexttobeoutputverbatim.Scatteredamongthistextareformatsp,oneperitem.Eachformatspsaystooutputthenextitematthatplaceintheformat.Theprintfstatementdoesnotautomaticallyappendanewlinetoitsoutput.ItoutputsonlywhattheformatspSoifyouwantanewline,youmustincludeoneintheformat.TheoutputseparatorvariablesOFSandORShavenoonprintfstatements.4.5.2Format-ControlLettersAformatspstartswiththecharacter`%'andendswithaformat-controlletter;ittellstheprintfstatementhowtooutputoneitem.(Ifyouactuallywanttooutputa`%',write`%%'.)Theformat-controlletterspwhatkindofvaluetoprint.Therestoftheformatspismadeupofoptionalmowhichareparameterssuchasthewidthtouse.Hereisalistoftheformat-controlletters:`c'ThisprintsanumberasanASCIIcharacter.Thus,`printf"%c",65'outputstheletter`A'.Theoutputforastringvalueisthecharacterofthestring.`d'Thisprintsadecimalinteger.`i'Thisalsoprintsadecimalinteger.`e'Thisprintsanumberinscien(exponential)notation.Forexample, Chapter4:PrintingOutput39printf"%4.3e",1950prints`1.950e+03',withatotaloffourtofwhichthreefollowthedecimalpoint.The`4.3'aremo,discussedbelow.`f'Thisprintsanumberinpointnotation.`g'Thisprintsanumberineithersciennotationorpointnotation,whicheverusesfewercharacters.`o'Thisprintsanunsignedoctalinteger.`s'Thisprintsastring.`x'Thisprintsanunsignedhexadecimalinteger.`X'Thisprintsanunsignedhexadecimalinteger.However,forthevalues10through15,itusestheletters`A'through`F'insteadof`a'through`f'.`%'Thisisn'treallyaformat-controlletter,butitdoeshaveameaningwhenusedaftera`%':thesequence`%%'outputsone`%'.Itdoesnotconsumeanargument.4.5.3MoforprintfFormatsAformatspcanalsoincludemothatcancontrolhowmuchoftheitem'svalueisprintedandhowmuchspaceitgets.Themocomebetweenthe`%'andtheformat-controlletter.Herearethepossiblemointheorderinwhichtheymayappear:`-'Theminussign,usedbeforethewidthmosaystoleft-justifytheargumentwithinitsspwidth.Normallytheargumentisprintedrighinthespwidth.Thus,printf"%-4s","foo"prints`foo'.`width'ThisisanumberrepresentingthedesiredwidthofaInsertinganynumberbetweenthe`%'signandtheformatcontrolcharacterforcesthetobeexpandedtothiswidth.Thedefaultwaytodothisistopadwithspacesontheleft.Forexample,printf"%4s","foo"prints`foo'.Thevalueofwidthisaminimumwidth,notamaximum.Iftheitemvaluerequiresmorethanwidthcharacters,itcanbeaswideasnecessary.Thus,printf"%4s","foobar"prints`foobar'.Precedingthewidthwithaminussigncausestheoutputtobepaddedwithspacesontheright,insteadofontheleft.`.prec'Thisisanumberthatsptheprecisiontousewhenprinting.Thisspthenumberofdigitsyouwantprintedtotherightofthedecimalpoint.Forastring,itspthemaximumnumberofcharactersfromthestringthatshouldbeprinted. 40TheAWKManualTheClibraryprintf'sdynamicwidthandpreccapability(forexample,"%*.*s")issupported.Insteadofsupplyingexplicitwidthand/orprecvaluesintheformatstring,youpassthemintheargumentlist.Forexample:w=5p=3s="abcdefg"printf"<%*.*s>\n",w,p,sisexactlyequivalenttos="abcdefg"printf"<%5.3s>\n",sBothprogramsoutput`<abc>'.(Wehaveusedthebulletsymbol\"torepresentaspace,toclearlyshowyouthattherearetwospacesintheoutput.)Earlierversionsofawkdidnotsupportthiscapability.Youmaysimulateitbyusingconcatenationtobuilduptheformatstring,likeso:w=5p=3s="abcdefg"printf"<%"w"."p"s>\n",sThisisnotparticularlyeasytoread,however.4.5.4ExamplesofUsingprintfHereishowtouseprintftomakeanalignedtable:awk'{printf"%-10s%s\n",$1,$2}'BBS-listprintsthenamesofbulletinboards($1)ofthe`BBS-list'asastringof10characters,leftItalsoprintsthephonenumbers($2)afterwardontheline.Thisproducesanalignedtwo-columntableofnamesandphonenumbers:aardvark555-5553alpo-net555-3412barfly555-7685bites555-1675camelot555-0542core555-2912fooey555-1234foot555-6699macfoo555-6480sdace555-3430sabafoo555-2127Didyounoticethatwedidnotspecifythatthephonenumbersbeprintedasnumbers?Theyhadtobeprintedasstringsbecausethenumbersareseparatedbyadash.Thisdashwouldbeinterpretedasaminussignifwehadtriedtoprintthephonenumbersasnumbers.Thiswouldhaveledtosomeprettyconfusingresults.Wedidnotspecifyawidthforthephonenumbersbecausetheyarethelastthingsontheirlines.Wedon'tneedtoputspacesafterthem. Chapter4:PrintingOutput41Wecouldmakeourtablelookevennicerbyaddingheadingstothetopsofthecolumns.Todothis,usetheBEGINpattern(seeSection6.7[BEGINandENDSpecialPatterns],page53)toforcetheheadertobeprintedonlyonce,atthebeginningoftheawkprogram:awk'BEGIN{print"NameNumber"print"----------"}{printf"%-10s%s\n",$1,$2}'BBS-listDidyounoticethatwemixedprintandprintfstatementsintheaboveexample?Wecouldhaveusedjustprintfstatementstogetthesameresults:awk'BEGIN{printf"%-10s%s\n","Name","Number"printf"%-10s%s\n","----","------"}{printf"%-10s%s\n",$1,$2}'BBS-listByoutputtingeachcolumnheadingwiththesameformatspusedfortheelementsofthecolumn,wehavemadesurethattheheadingsarealignedjustlikethecolumns.Thefactthatthesameformatspisusedthreetimescanbeemphasizedbystoringitinavariable,likethis:awk'BEGIN{format="%-10s%s\n"printfformat,"Name","Number"printfformat,"----","------"}{printfformat,$1,$2}'BBS-listSeeifyoucanusetheprintfstatementtolineuptheheadingsandtabledataforour`inventory-shipped'examplecoveredearlierinthesectionontheprintstatement(seeSection4.1[TheprintStatement],page35).4.6RedirectingOutputofprintandprintfSofarwehavebeendealingonlywithoutputthatprintstothestandardoutput,usuallyyourterminal.Bothprintandprintfcanalsosendtheiroutputtootherplaces.Thisiscalledredirection.Aredirectionappearsaftertheprintorprintfstatement.Redirectionsinawkarewrittenjustlikeredirectionsinshellcommands,exceptthattheyarewritteninsidetheawkprogram.4.6.1RedirectingOutputtoFilesandPipesHerearethethreeformsofoutputredirection.Theyareallshownfortheprintstate-ment,buttheyworkidenticallyforprintfalso.printitems>Thistypeofredirectionprintstheitemsontotheoutput.Thenamecanbeanyexpression.Itsvalueischangedtoastringandthenusedasaname(seeChapter8[ExpressionsasActionStatements],page57). 42TheAWKManualWhenthistypeofredirectionisused,theiserasedbeforetheoutputiswrittentoit.Subsequentwritesdonoterase,butappendtoit.Ifdoesnotexist,thenitiscreated.Forexample,hereishowoneawkprogramcanwritealistofBBSnamestoa`name-list'andalistofphonenumberstoa`phone-list'.Eachoutputcontainsonenameornumberperline.awk'{print$2>"phone-list"print$1>"name-list"}'BBS-listprintitems>>Thistypeofredirectionprintstheitemsontotheoutput.Thebetweenthisandthesingle-`>'redirectionisthattheoldcontents(ifany)ofarenoterased.Instead,theawkoutputisappendedtotheprintitems|commandItisalsopossibletosendoutputthroughapipeinsteadofintoaThistypeofredirectionopensapipetocommandandwritesthevaluesofitemsthroughthispipe,toanotherprocesscreatedtoexecutecommand.Theredirectionargumentcommandisactuallyanawkexpression.Itsvalueisconvertedtoastring,whosecontentsgivetheshellcommandtoberun.Forexample,thisproducestwooneunsortedlistofBBSnamesandonelistsortedinreversealphabeticalorder:awk'{print$1>"names.unsorted"print$1|"sort-r>names.sorted"}'BBS-listHeretheunsortedlistiswrittenwithanordinaryredirectionwhilethesortedlistiswrittenbypipingthroughthesortutility.Hereisanexamplethatusesredirectiontomailamessagetoamailinglist`bug-system'.Thismightbeusefulwhentroubleisencounteredinanawkscriptrunperiodicallyforsystemmaintenance.report="mailbug-system"print"Awkscriptfailed:",$0|reportprint"atrecordnumber",FNR,"of",FILENAME|reportclose(report)Wecalltheclosefunctionherebecauseit'sagoodideatoclosethepipeassoonasalltheintendedoutputhasbeensenttoit.SeeSection4.6.2[ClosingOutputFilesandPipes],page43,formoreinformationonthis.Thisexamplealsoillustratestheuseofavariabletorepresentaorcommand:itisnotnecessarytoalwaysuseastringconstant.Usingavariableisgenerallyagoodidea,sinceawkrequiresyoutospellthestringvalueidenticallyeverytime.Redirectingoutputusing`>',`>>',or`|'asksthesystemtoopenaorpipeonlyiftheparticularorcommandyou'vesphasnotalreadybeenwrittentobyyourprogram,orifithasbeenclosedsinceitwaslastwrittento.4.6.2ClosingOutputFilesandPipes Chapter4:PrintingOutput43Whenaorpipeisopened,thenameorcommandassociatedwithitisrememberedbyawkandsubsequentwritestothesameorcommandareappendedtothepreviouswrites.Theorpipestaysopenuntilawkexits.Thisisusuallyconvenient.Sometimesthereisareasontocloseanoutputorpipeearlierthanthat.Todothis,usetheclosefunction,asfollows:close()orclose(command)Theargumentorcommandcanbeanyexpression.Itsvaluemustexactlyequalthestringusedtoopentheorpipetobeginwith|forexample,ifyouopenapipewiththis:print$1|"sort-r>names.sorted"thenyoumustcloseitwiththis:close("sort-r>names.sorted")HerearesomereasonswhyyoumightneedtocloseanoutputTowriteaandreaditbacklateroninthesameawkprogram.Closethewhenyouarewritingit;thenyoucanstartreadingitwithgetline(seeSection3.7[ExplicitInputwithgetline],page29).Towritenumeroussuccessively,inthesameawkprogram.Ifyoudon'tclosetheeventuallyyoumayexceedasystemlimitonthenumberofopeninoneprocess.Socloseeachonewhenyouarewritingit.TomakeacommandWhenyouredirectoutputthroughapipe,thecommandreadingthepipenormallycontinuestotrytoreadinputaslongasthepipeisopen.Oftenthismeansthecommandcannotreallydoitsworkuntilthepipeisclosed.Forexample,ifyouredirectoutputtothemailprogram,themessageisnotactuallysentuntilthepipeisclosed.Torunthesameprogramasecondtime,withthesamearguments.Thisisnotthesamethingasgivingmoreinputtotherun!Forexample,supposeyoupipeoutputtothemailprogram.Ifyououtputseverallinesredirectedtothispipewithoutclosingit,theymakeasinglemessageofseverallines.Bycontrast,ifyouclosethepipeaftereachlineofoutput,theneachlinemakesaseparatemessage.closereturnsavalueofzeroiftheclosesucceeded.Otherwise,thevaluewillbenon-zero.4.7StandardI/OStreamsRunningprogramsconventionallyhavethreeinputandoutputstreamsalreadyavailabletothemforreadingandwriting.Theseareknownasthestandardinput,standardoutput,andstandarderroroutput.Thesestreamsare,bydefault,terminalinputandoutput,buttheyareoftenredirectedwiththeshell,viathe`<',`<<',`>',`>>',`>&'and`|'operators. 44TheAWKManualStandarderrorisusedonlyforwritingerrormessages;thereasonwehavetwoseparatestreams,standardoutputandstandarderror,issothattheycanberedirectedseparately.Inotherimplementationsofawk,theonlywaytowriteanerrormessagetostandarderrorinanawkprogramisasfollows:print"Seriouserrordetected!\n"|"cat1>&2"Thisworksbyopeningapipelinetoashellcommandwhichcanaccessthestandarderrorstreamwhichitinheritsfromtheawkprocess.Thisisfarfromelegant,andisalsot,sinceitrequiresaseparateprocess.Sopeoplewritingawkprogramshaveoftenneglectedtodothis.Instead,theyhavesenttheerrormessagestotheterminal,likethis:NF!=4{printf("line%dskipped:doesn'thave4fields\n",FNR)>"/dev/tty"}Thishasthesamemostofthetime,butnotalways:althoughthestandarderrorstreamisusuallytheterminal,itcanberedirected,andwhenthathappens,writingtotheterminalisnotcorrect.Infact,ifawkisrunfromabackgroundjob,itmaynothaveaterminalatall.Thenopening`/dev/tty'willfail. Chapter5:Useful\One-liners"455Useful\One-liners"Usefulawkprogramsareoftenshort,justalineortwo.Hereisacollectionofuseful,shortprogramstogetyoustarted.Someoftheseprogramscontainconstructsthathaven'tbeencoveredyet.Thedescriptionoftheprogramwillgiveyouagoodideaofwhatisgoingon,butpleasereadtherestofthemanualtobecomeanawkexpert!awk'{if(NF>max)max=NF}END{printmax}'Thisprogramprintsthemaximumnumberofonanyinputline.awk'length($0)>80'Thisprogramprintseverylinelongerthan80characters.Thesolerulehasarelationalexpressionasitspattern,andhasnoaction(sothedefaultaction,printingtherecord,isused).awk'NF>0'ThisprogramprintseverylinethathasatleastoneThisisaneasywaytodeleteblanklinesfroma(orrather,tocreateanewsimilartotheoldbutfromwhichtheblanklineshavebeendeleted).awk'{if(NF>0)print}'ThisprogramalsoprintseverylinethathasatleastoneHereweallowtheruletomatcheveryline,thendecideintheactionwhethertoprint.awk'BEGIN{for(i=1;i<=7;i++)printint(101*rand())}'Thisprogramprints7randomnumbersfrom0to100,inclusive.ls-l|awk'{x+=$4};END{print"totalbytes:"x}'Thisprogramprintsthetotalnumberofbytesusedby.expand|awk'{if(x<length())x=length()}END{print"maximumlinelengthis"x}'Thisprogramprintsthemaximumlinelengthof.Theinputispipedthroughtheexpandprogramtochangetabsintospaces,sothewidthscomparedareactuallytheright-margincolumns.awk'BEGIN{FS=":"}{print$1|"sort"}'/etc/passwdThisprogramprintsasortedlistoftheloginnamesofallusers.awk'{nlines++}END{printnlines}'Thisprogramscountslinesinaawk'END{printNR}'Thisprogramalsocountslinesinabutletsawkdothework.awk'{printNR,$0}'Thisprogramaddslinenumberstoallitsinputsimilarto`cat-n'. 46TheAWKManual Chapter6:Patterns476PatternsPatternsinawkcontroltheexecutionofrules:aruleisexecutedwhenitspatternmatchesthecurrentinputrecord.Thischaptertellsallabouthowtowritepatterns.6.1KindsofPatternsHereisasummaryofthetypesofpatternssupportedinawk./regularexpression/Aregularexpressionasapattern.Itmatcheswhenthetextoftheinputrecordtheregularexpression.(SeeSection6.2[RegularExpressionsasPatterns],page47.)expressionAsingleexpression.Itmatcheswhenitsvalue,convertedtoanumber,isnonzero(ifanumber)ornonnull(ifastring).(SeeSection6.5[ExpressionsasPatterns],page52.)pat1,pat2Apairofpatternsseparatedbyacomma,specifyingarangeofrecords.(SeeSection6.6[SpecifyingRecordRangeswithPatterns],page53.)BEGINENDSpecialpatternstosupplystart-uporclean-upinformationtoawk.(SeeSec-tion6.7[BEGINandENDSpecialPatterns],page53.)nullTheemptypatternmatcheseveryinputrecord.(SeeSection6.8[TheEmptyPattern],page54.)6.2RegularExpressionsasPatternsAregularexpression,orregexp,isawayofdescribingaclassofstrings.Aregularexpressionenclosedinslashes(`/')isanawkpatternthatmatcheseveryinputrecordwhosetextbelongstothatclass.Thesimplestregularexpressionisasequenceofletters,numbers,orboth.Sucharegexpmatchesanystringthatcontainsthatsequence.Thus,theregexp`foo'matchesanystringcontaining`foo'.Therefore,thepattern/foo/matchesanyinputrecordcontaining`foo'.Otherkindsofregexpsletyouspecifymorecomplicatedclassesofstrings.6.2.1HowtoUseRegularExpressionsAregularexpressioncanbeusedasapatternbyenclosingitinslashes.Thentheregularexpressionismatchedagainsttheentiretextofeachrecord.(Normally,itonlyneedstomatchsomepartofthetextinordertosucceed.)Forexample,thisprintsthesecondofeachrecordthatcontains`foo'anywhere: 48TheAWKManualawk'/foo/{print$2}'BBS-listRegularexpressionscanalsobeusedincomparisonexpressions.Thenyoucanspecifythestringtomatchagainst;itneednotbetheentirecurrentinputrecord.Thesecomparisonexpressionscanbeusedaspatternsorinif,while,for,anddostatements.exp~/regexp/Thisistrueiftheexpressionexp(takenasacharacterstring)ismatchedbyregexp.Thefollowingexamplematches,orselects,allinputrecordswiththeupper-caseletter`J'somewhereintheawk'$1~/J/'inventory-shippedSodoesthis:awk'{if($1~/J/)print}'inventory-shippedexp!~/regexp/Thisistrueiftheexpressionexp(takenasacharacterstring)isnotmatchedbyregexp.Thefollowingexamplematches,orselects,allinputrecordswhosedoesnotcontaintheupper-caseletter`J':awk'$1!~/J/'inventory-shippedTherighthandsideofa`~'or`!~'operatorneednotbeaconstantregexp(i.e.,astringofcharactersbetweenslashes).Itmaybeanyexpression.Theexpressionisevaluated,andconvertedifnecessarytoastring;thecontentsofthestringareusedastheregexp.Aregexpthatiscomputedinthiswayiscalledadynamicregexp.Forexample:identifier_regexp="[A-Za-z_][A-Za-z_0-9]+"$0~identifier_regexpsetsidentifier_regexptoaregexpthatdescribesawkvariablenames,andtestsiftheinputrecordmatchesthisregexp.6.2.2RegularExpressionOperatorsYoucancombineregularexpressionswiththefollowingcharacters,calledregularex-pressionoperators,ormetacharacters,toincreasethepowerandversatilityofregularex-pressions.Hereisatableofmetacharacters.Allcharactersnotlistedinthetablestandforthem-selves.^Thismatchesthebeginningofthestringorthebeginningofalinewithinthestring.Forexample:^@chaptermatchesthe`@chapter'atthebeginningofastring,andcanbeusedtoidentifychapterbeginningsinTexinfosource$Thisissimilarto`^',butitmatchesonlyattheendofastringortheendofalinewithinthestring.Forexample:p$matchesarecordthatendswitha`p'. Chapter6:Patterns49.Thismatchesanysinglecharacterexceptanewline.Forexample:.Pmatchesanysinglecharacterfollowedbya`P'inastring.Usingconcatenationwecanmakeregularexpressionslike`U.A',whichmatchesanythree-charactersequencethatbeginswith`U'andendswith`A'.[...]Thisiscalledacharacterset.Itmatchesanyoneofthecharactersthatareenclosedinthesquarebrackets.Forexample:[MVX]matchesanyoneofthecharacters`M',`V',or`X'inastring.Rangesofcharactersareindicatedbyusingahyphenbetweenthebeginningandendingcharacters,andenclosingthewholethinginbrackets.Forexample:[0-9]matchesanydigit.Toincludethecharacter`\',`]',`-'or`^'inacharacterset,puta`\'infrontofit.Forexample:[d\]]matcheseither`d',or`]'.Thistreatmentof`\'iscompatiblewithotherawkimplementations,andisalsomandatedbytheposixCommandLanguageandUtilitiesstandard.TheregularexpressionsinawkareasupersetoftheposixspforExtendedRegularExpressions(EREs).posixEREsarebasedontheregularexpressionsacceptedbythetraditionalegreputility.Inegrepsyntax,backslashisnotsyntacticallyspecialwithinsquarebrackets.Thismeansthatspecialtrickshavetobeusedtorepresentthecharacters`]',`-'and`^'asmembersofacharacterset.Inegrepsyntax,tomatch`-',writeitas`---',whichisarangecontainingonly`-'.Youmayalsogive`-'astheorlastcharacterintheset.Tomatch`^',putitanywhereexceptasthecharacterofaset.Tomatcha`]',makeitthecharacterintheset.Forexample:[]d^]matcheseither`]',`d'or`^'.[^...]Thisisacomplementedcharacterset.Thecharacterafterthe`['mustbea`^'.Itmatchesanycharactersexceptthoseinthesquarebrackets(ornewline).Forexample:[^0-9]matchesanycharacterthatisnotadigit.|Thisisthealternationoperatoranditisusedtospecifyalternatives.Forexample:^P|[0-9]matchesanystringthatmatcheseither`^P'or`[0-9]'.Thismeansitmatchesanystringthatcontainsadigitorstartswith`P'.Thealternationappliestothelargestpossibleregexpsoneitherside. 50TheAWKManual(...)Parenthesesareusedforgroupinginregularexpressionsasinarithmetic.Theycanbeusedtoconcatenateregularexpressionscontainingthealternationop-erator,`|'.*Thissymbolmeansthattheprecedingregularexpressionistoberepeatedasmanytimesaspossibletoamatch.Forexample:ph*appliesthe`*'symboltothepreceding`h'andlooksformatchestoone`p'followedbyanynumberof`h's.Thiswillalsomatchjust`p'ifno`h'sarepresent.The`*'repeatsthesmallestpossibleprecedingexpression.(Useparenthesesifyouwishtorepeatalargerexpression.)Itasmanyrepetitionsaspossible.Forexample:awk'/\(c[ad][ad]*rx\)/{print}'sampleprintseveryrecordintheinputcontainingastringoftheform`(carx)',`(cdrx)',`(cadrx)',andsoon.+Thissymbolissimilarto`*',buttheprecedingexpressionmustbematchedatleastonce.Thismeansthat:wh+ywouldmatch`why'and`whhy'butnot`wy',whereas`wh*y'wouldmatchallthreeofthesestrings.Thisisasimplerwayofwritingthelast`*'example:awk'/\(c[ad]+rx\)/{print}'sample?Thissymbolissimilarto`*',buttheprecedingexpressioncanbematchedonceornotatall.Forexample:fe?dwillmatch`fed'and`fd',butnothingelse.\Thisisusedtosuppressthespecialmeaningofacharacterwhenmatching.Forexample:\$matchesthecharacter`$'.Theescapesequencesusedforstringconstants(seeSection8.1[ConstantEx-pressions],page57)arevalidinregularexpressionsaswell;theyarealsointro-ducedbya`\'.Inregularexpressions,the`*',`+',and`?'operatorshavethehighestprecedence,followedbyconcatenation,andby`|'.Asinarithmetic,parenthesescanchangehowoperatorsaregrouped.6.2.3Case-sensitivityinMatchingCaseisnormallytinregularexpressions,bothwhenmatchingordinarycharac-ters(i.e.,notmetacharacters),andinsidecharactersets.Thusa`w'inaregularexpressionmatchesonlyalowercase`w'andnotanuppercase`W'. Chapter6:Patterns51Thesimplestwaytodoacase-independentmatchistouseacharacterset:`[Ww]'.However,thiscanbecumbersomeifyouneedtouseitoften;anditcanmaketheregularexpressionsharderforhumanstoread.Therearetwootheralternativesthatyoumightprefer.Onewaytodoacase-insensitivematchataparticularpointintheprogramistoconvertthedatatoasinglecase,usingthetolowerortoupperbuilt-instringfunctions(whichwehaven'tdiscussedyet;seeSection11.3[Built-inFunctionsforStringManipulation],page91).Forexample:tolower($1)~/foo/{...}convertsthetolowercasebeforematchingagainstit.x="aB"if(x~/ab/)...#thistestwillfail6.3ComparisonExpressionsasPatternsComparisonpatternstestrelationshipssuchasequalitybetweentwostringsornumbers.Theyareaspecialcaseofexpressionpatterns(seeSection6.5[ExpressionsasPatterns],page52).Theyarewrittenwithrelationaloperators,whichareasupersetofthoseinC.Hereisatableofthem:x<yTrueifxislessthany.x<=yTrueifxislessthanorequaltoy.x>yTrueifxisgreaterthany.x>=yTrueifxisgreaterthanorequaltoy.x==yTrueifxisequaltoy.x!=yTrueifxisnotequaltoy.x~yTrueifxmatchestheregularexpressiondescribedbyy.x!~yTrueifxdoesnotmatchtheregularexpressiondescribedbyy.Theoperandsofarelationaloperatorarecomparedasnumbersiftheyarebothnumbers.Otherwisetheyareconvertedto,andcomparedas,strings(seeSection8.9[ConversionofStringsandNumbers],page66,forthedetailedrules).Stringsarecomparedbycomparingthecharacterofeach,thenthesecondcharacterofeach,andsoon,untilthereisaIfthetwostringsareequaluntiltheshorteronerunsout,theshorteroneisconsideredtobelessthanthelongerone.Thus,"10"islessthan"9",and"abc"islessthan"abcd".Theleftoperandofthe`~'and`!~'operatorsisastring.Therightoperandisei-theraconstantregularexpressionenclosedinslashes(/regexp/),oranyexpression,whosestringvalueisusedasadynamicregularexpression(seeSection6.2.1[HowtoUseRegularExpressions],page47).Thefollowingexampleprintsthesecondofeachinputrecordwhoseisprecisely`foo'. 52TheAWKManualawk'$1=="foo"{print$2}'BBS-listContrastthiswiththefollowingregularexpressionmatch,whichwouldacceptanyrecordwithathatcontains`foo':awk'$1~"foo"{print$2}'BBS-listor,equivalently,thisone:awk'$1~/foo/{print$2}'BBS-list6.4BooleanOperatorsandPatternsAbooleanpatternisanexpressionwhichcombinesotherpatternsusingthebooleanoperators\or"(`||'),\and"(`&&'),and\not"(`!').Whetherthebooleanpatternmatchesaninputrecorddependsonwhetheritssubpatternsmatch.Forexample,thefollowingcommandprintsallrecordsintheinput`BBS-list'thatcontainboth`2400'and`foo'.awk'/2400/&&/foo/'BBS-listThefollowingcommandprintsallrecordsintheinput`BBS-list'thatcontaineither`2400'or`foo',orboth.awk'/2400/||/foo/'BBS-listThefollowingcommandprintsallrecordsintheinput`BBS-list'thatdonotcontainthestring`foo'.awk'!/foo/'BBS-listNotethatbooleanpatternsareaspecialcaseofexpressionpatterns(seeSection6.5[ExpressionsasPatterns],page52);theyareexpressionsthatusethebooleanoperators.SeeSection8.6[BooleanExpressions],page63,forcompleteinformationonthebooleanoperators.Thesubpatternsofabooleanpatterncanbeconstantregularexpressions,comparisons,oranyotherawkexpressions.Rangepatternsarenotexpressions,sotheycannotappearinsidebooleanpatterns.Likewise,thespecialpatternsBEGINandEND,whichnevermatchanyinputrecord,arenotexpressionsandcannotappearinsidebooleanpatterns.6.5ExpressionsasPatternsAnyawkexpressionisalsovalidasanawkpattern.Thenthepattern\matches"iftheexpression'svalueisnonzero(ifanumber)ornonnull(ifastring).Theexpressionisreevaluatedeachtimetheruleistestedagainstanewinputrecord.Iftheexpressionusessuchas$1,thevaluedependsdirectlyonthenewinputrecord'stext;otherwise,itdependsonlyonwhathashappenedsofarintheexecutionoftheawkprogram,butthatmaystillbeuseful.Comparisonpatternsareactuallyaspecialcaseofthis.Forexample,theexpression$5=="foo"hasthevalue1whenthevalueof$5equals"foo",and0otherwise;therefore,thisexpressionasapatternmatcheswhenthetwovaluesareequal. Chapter6:Patterns53Booleanpatternsarealsospecialcasesofexpressionpatterns.Aconstantregexpasapatternisalsoaspecialcaseofanexpressionpattern./foo/asanexpressionhasthevalue1if`foo'appearsinthecurrentinputrecord;thus,asapattern,/foo/matchesanyrecordcontaining`foo'.Otherimplementationsofawkthatarenotyetposixcompliantarelessgeneralthangawk:theyallowcomparisonexpressions,andbooleancombinationsthereof(optionallywithparentheses),butnotnecessarilyotherkindsofexpressions.6.6SpecifyingRecordRangeswithPatternsArangepatternismadeoftwopatternsseparatedbyacomma,oftheformbegpat,endpat.Itmatchesrangesofconsecutiveinputrecords.Thepatternbegpatcontrolswheretherangebegins,andthesecondoneendpatcontrolswhereitends.Forexample,awk'$1=="on",$1=="off"'printseveryrecordbetween`on'/`off'pairs,inclusive.Arangepatternstartsoutbymatchingbegpatagainsteveryinputrecord;whenarecordmatchesbegpat,therangepatternbecomesturnedon.Therangepatternmatchesthisrecord.Aslongasitstaysturnedon,itautomaticallymatcheseveryinputrecordread.Italsomatchesendpatagainsteveryinputrecord;whenthatsucceeds,therangepatternisturnedagainforthefollowingrecord.Nowitgoesbacktocheckingbegpatagainsteachrecord.Therecordthatturnsontherangepatternandtheonethatturnsitbothmatchtherangepattern.Ifyoudon'twanttooperateontheserecords,youcanwriteifstatementsintherule'sactiontodistinguishthem.Itispossibleforapatterntobeturnedbothonandbythesamerecord,ifbothconditionsarebythatrecord.Thentheactionisexecutedforjustthatrecord.6.7BEGINandENDSpecialPatternsBEGINandENDarespecialpatterns.Theyarenotusedtomatchinputrecords.Rather,theyareusedforsupplyingstart-uporclean-upinformationtoyourawkscript.ABEGINruleisexecuted,once,beforetheinputrecordhasbeenread.AnENDruleisexecuted,once,afteralltheinputhasbeenread.Forexample:awk'BEGIN{print"Analysisof`foo'"}/foo/{++foobar}END{print"`foo'appears"foobar"times."}'BBS-listThisprogramthenumberofrecordsintheinput`BBS-list'thatcontainthestring`foo'.TheBEGINruleprintsatitleforthereport.ThereisnoneedtousetheBEGINruletoinitializethecounterfoobartozero,asawkdoesthisforusautomatically(seeSection8.2[Variables],page59).Thesecondruleincrementsthevariablefoobareverytimearecordcontainingthepattern`foo'isread.TheENDruleprintsthevalueoffoobarattheendoftherun. 54TheAWKManualThespecialpatternsBEGINandENDcannotbeusedinrangesorwithbooleanoperators(indeed,theycannotbeusedwithanyoperators).AnawkprogrammayhavemultipleBEGINand/orENDrules.Theyareexecutedintheordertheyappear,alltheBEGINrulesatstart-upandalltheENDrulesattermination.MultipleBEGINandENDsectionsareusefulforwritinglibraryfunctions,sinceeachlibrarycanhaveitsownBEGINorENDruletodoitsowninitializationand/orcleanup.NotethattheorderinwhichlibraryfunctionsarenamedonthecommandlinecontrolstheorderinwhichtheirBEGINandENDrulesareexecuted.Thereforeyouhavetobecarefultowritesuchrulesinlibrarysothattheorderinwhichtheyareexecuteddoesn'tmatter.SeeChapter14[Invokingawk],page107,formoreinformationonusinglibraryfunctions.IfanawkprogramonlyhasaBEGINrule,andnootherrules,thentheprogramexitsaftertheBEGINrulehasbeenrun.(Olderversionsofawkusedtokeepreadingandignoringinputuntilendofwasseen.)However,ifanENDruleexistsaswell,thentheinputwillberead,eveniftherearenootherrulesintheprogram.ThisisnecessaryincasetheENDrulecheckstheNRvariable.BEGINandENDrulesmusthaveactions;thereisnodefaultactionfortheserulessincethereisnocurrentrecordwhentheyrun.6.8TheEmptyPatternAnemptypatternisconsideredtomatcheveryinputrecord.Forexample,theprogram:awk'{print$1}'BBS-listprintstheofeveryrecord. Chapter7:OverviewofActions557OverviewofActionsAnawkprogramorscriptconsistsofaseriesofrulesandfunctioninter-spersed.(Functionsaredescribedlater.SeeChapter12Functions],page97.)Arulecontainsapatternandanaction,eitherofwhichmaybeomitted.Thepurposeoftheactionistotellawkwhattodoonceamatchforthepatternisfound.Thus,theentireprogramlookssomewhatlikethis:[pattern][{action}][pattern][{action}]...functionname(args){...}...Anactionconsistsofoneormoreawkstatements,enclosedincurlybraces(`{'and`}').Eachstatementsponethingtobedone.Thestatementsareseparatedbynewlinesorsemicolons.Thecurlybracesaroundanactionmustbeusedeveniftheactioncontainsonlyonestatement,orevenifitcontainsnostatementsatall.However,ifyouomittheactionentirely,omitthecurlybracesaswell.(Anomittedactionisequivalentto`{print$0}'.)Herearethekindsofstatementssupportedinawk:Expressions,whichcancallfunctionsorassignvaluestovariables(seeChapter8[Ex-pressionsasActionStatements],page57).Executingthiskindofstatementsimplycomputesthevalueoftheexpressionandthenignoresit.Thisisusefulwhentheexpressionhasside(seeSection8.7[AssignmentExpressions],page64).Controlstatements,whichspecifythecontrolwofawkprograms.TheawklanguagegivesyouC-likeconstructs(if,for,while,andsoon)aswellasafewspecialones(seeChapter9[ControlStatementsinActions],page73).Compoundstatements,whichconsistofoneormorestatementsenclosedincurlybraces.Acompoundstatementisusedinordertoputseveralstatementstogetherinthebodyofanif,while,doorforstatement.Inputcontrol,usingthegetlinecommand(seeSection3.7[ExplicitInputwithgetline],page29),andthenextstatement(seeSection9.7[ThenextStatement],page78).Outputstatements,printandprintf.SeeChapter4[PrintingOutput],page35.Deletionstatements,fordeletingarrayelements.SeeSection10.6[ThedeleteState-ment],page85.Thenexttwochapterscoverindetailexpressionsandcontrolstatements,respectively.Wegoontotreatarraysandbuilt-infunctions,bothofwhichareusedinexpressions.Thenweproceedtodiscusshowtoyourownfunctions. 56TheAWKManual Chapter8:ExpressionsasActionStatements578ExpressionsasActionStatementsExpressionsarethebasicbuildingblockofawkactions.Anexpressionevaluatestoavalue,whichyoucanprint,test,storeinavariableorpasstoafunction.Butbeyondthat,anexpressioncanassignanewvaluetoavariableorawithanassignmentoperator.Anexpressioncanserveasastatementonitsown.Mostotherkindsofstatementscontainoneormoreexpressionswhichspecifydatatobeoperatedon.Asinotherlanguages,expressionsinawkincludevariables,arrayreferences,constants,andfunctioncalls,aswellascombinationsofthesewithvariousoperators.8.1ConstantExpressionsThesimplesttypeofexpressionistheconstant,whichalwayshasthesamevalue.Therearethreetypesofconstants:numericconstants,stringconstants,andregularexpressionconstants.Anumericconstantstandsforanumber.Thisnumbercanbeaninteger,adecimalfraction,oranumberinscien(exponential)notation.Notethatallnumericvaluesarerepresentedwithinawkindouble-precisionpoint.Herearesomeexamplesofnumericconstants,whichallhavethesamevalue:1051.05e+21050e-1Astringconstantconsistsofasequenceofcharactersenclosedindouble-quotemarks.Forexample:"parrot"representsthestringwhosecontentsare`parrot'.Stringsingawkcanbeofanylengthandtheycancontainallthepossible8-bitASCIIcharactersincludingASCIINUL.Otherawkimplementationsmayhaveywithsomecharactercodes.Somecharacterscannotbeincludedliterallyinastringconstant.Yourepresenttheminsteadwithescapesequences,whicharecharactersequencesbeginningwithabackslash(`\').Oneuseofanescapesequenceistoincludeadouble-quotecharacterinastringconstant.Sinceaplaindouble-quotewouldendthestring,youmustuse`\"'torepresentasingledouble-quotecharacterasapartofthestring.Thebackslashcharacteritselfisanothercharacterthatcannotbeincludednormally;youwrite`\\'toputonebackslashinthestring.Thus,thestringwhosecontentsarethetwocharacters`"\'mustbewritten"\"\\".Anotheruseofbackslashistorepresentunprintablecharacterssuchasnewline.Whilethereisnothingtostopyoufromwritingmostofthesecharactersdirectlyinastringconstant,theymaylookugly.Hereisatableofalltheescapesequencesusedinawk:\\Representsaliteralbackslash,`\'. 58TheAWKManual\aRepresentsthe\alert"character,control-g,ASCIIcode7.\bRepresentsabackspace,control-h,ASCIIcode8.\fRepresentsaformfeed,control-l,ASCIIcode12.\nRepresentsanewline,control-j,ASCIIcode10.\rRepresentsacarriagereturn,control-m,ASCIIcode13.\tRepresentsahorizontaltab,control-i,ASCIIcode9.\vRepresentsaverticaltab,control-k,ASCIIcode11.\nnnRepresentstheoctalvaluennn,wherennnareonetothreedigitsbetween0and7.Forexample,thecodefortheASCIIESC(escape)characteris`\033'.\xhh...Representsthehexadecimalvaluehh,wherehharehexadecimaldigits(`0'through`9'andeither`A'through`F'or`a'through`f').LikethesameconstructinansiC,theescapesequencecontinuesuntilthenon-hexadecimaldigitisseen.However,usingmorethantwohexadecimaldigitsproducesresults.(The`\x'escapesequenceisnotallowedinposixawk.)Aconstantregexpisaregularexpressiondescriptionenclosedinslashes,suchas/^beginningandend$/.Mostregexpsusedinawkprogramsareconstant,butthe`~'and`!~'operatorscanalsomatchcomputedor\dynamic"regexps(seeSection6.2.1[HowtoUseRegularExpressions],page47).Constantregexpsmaybeusedlikesimpleexpressions.Whenaconstantregexpisnotontherighthandsideofthe`~'or`!~'operators,ithasthesamemeaningasifitappearedinapattern,i.e.`($0~/foo/)'(seeSection6.5[ExpressionsasPatterns],page52).Thismeansthatthetwocodesegments,if($0~/barfly/||$0~/camelot/)print"found"andif(/barfly/||/camelot/)print"found"areexactlyequivalent.Oneratherbizarreconsequenceofthisruleisthatthefollowingbooleanexpressionislegal,butdoesnotdowhattheuserintended:if(/foo/~$1)print"foundfoo"Thiscodeis\obviously"testing$1foramatchagainsttheregexp/foo/.Butinfact,theexpression(/foo/~$1)actuallymeans(($0~/foo/)~$1).Inotherwords,matchtheinputrecordagainsttheregexp/foo/.Theresultwillbeeithera0ora1,dependinguponthesuccessorfailureofthematch.Thenmatchthatresultagainsttheintherecord.Anotherconsequenceofthisruleisthattheassignmentstatementmatches=/foo/willassigneither0or1tothevariablematches,dependinguponthecontentsofthecurrentinputrecord.Constantregularexpressionsarealsousedastheargumentforthesubandgsubfunctions(seeSection11.3[Built-inFunctionsforStringManipulation],page91). Chapter8:ExpressionsasActionStatements59ThisfeatureofthelanguagewasneverwelldocumenteduntiltheposixspYoumaybewondering,whenis$1~/foo/{...}preferableto$1~"foo"{...}Sincetheright-handsidesofboth`~'operatorsareconstants,itismorettousethe`/foo/'form:awkcannotethatyouhavesuppliedaregexpandstoreitinternallyinaformthatmakespatternmatchingmoret.Inthesecondform,awkmustconvertthestringintothisinternalform,andthenperformthepatternmatching.Theformisalsobetterstyle;itshowsclearlythatyouintendaregexpmatch.8.2VariablesVariablesletyougivenamestovaluesandrefertothemlater.Youhavealreadyseenvariablesinmanyoftheexamples.Thenameofavariablemustbeasequenceofletters,digitsandunderscores,butitmaynotbeginwithadigit.Caseistinvariablenames;aandAaredistinctvariables.Avariablenameisavalidexpressionbyitself;itrepresentsthevariable'scurrentvalue.Variablesaregivennewvalueswithassignmentoperatorsandincrementoperators.SeeSection8.7[AssignmentExpressions],page64.Afewvariableshavespecialbuilt-inmeanings,suchasFS,theseparator,andNF,thenumberofinthecurrentinputrecord.SeeChapter13[Built-inVariables],page103,foralistofthem.Thesebuilt-invariablescanbeusedandassignedjustlikeallothervariables,buttheirvaluesarealsousedorchangedautomaticallybyawk.Eachbuilt-invariable'snameismadeentirelyofuppercaseletters.Variablesinawkcanbeassignedeithernumericorstringvalues.Bydefault,variablesareinitializedtothenullstring,whichiselyzeroifconvertedtoanumber.Thereisnoneedto\initialize"eachvariableexplicitlyinawk,thewayyouwouldinCormostothertraditionallanguages.8.2.1AssigningVariablesontheCommandLineYoucansetanyawkvariablebyincludingavariableassignmentamongtheargumentsonthecommandlinewhenyouinvokeawk(seeChapter14[Invokingawk],page107).Suchanassignmenthasthisform:variable=textWithit,youcansetavariableeitheratthebeginningoftheawkrunorinbetweeninputIfyouprecedetheassignmentwiththe`-v'option,likethis:-vvariable=textthenthevariableissetattheverybeginning,beforeeventheBEGINrulesarerun.The`-v'optionanditsassignmentmustprecedeallthenamearguments,aswellastheprogramtext. 60TheAWKManualOtherwise,thevariableassignmentisperformedatatimedeterminedbyitspositionamongtheinputarguments:aftertheprocessingoftheprecedinginputargument.Forexample:awk'{print$n}'n=4inventory-shippedn=2BBS-listprintsthevalueofnumbernforallinputrecords.Beforetheisread,thecommandlinesetsthevariablenequalto4.Thiscausesthefourthtobeprintedinlinesfromthe`inventory-shipped'.Afterthehasbutbeforethesecondisstarted,nissetto2,sothatthesecondisprintedinlinesfrom`BBS-list'.CommandlineargumentsaremadeavailableforexplicitexaminationbytheawkprograminanarraynamedARGV(seeChapter13[Built-inVariables],page103).awkprocessesthevaluesofcommandlineassignmentsforescapesequences(seeSec-tion8.1[ConstantExpressions],page57).8.3ArithmeticOperatorsTheawklanguageusesthecommonarithmeticoperatorswhenevaluatingexpressions.Allofthesearithmeticoperatorsfollownormalprecedencerules,andworkasyouwouldexpectthemto.Thisexampledividesthreebyfour,addstwo,storestheresultintoone,andprintstheresultingalteredinputrecord:awk'{$1=$2+$3/$4;print}'inventory-shippedThearithmeticoperatorsinawkare:x+yAddition.x-ySubtraction.-xNegation.+xUnaryplus.Norealontheexpression.x*yMultiplication.x/yDivision.Sinceallnumbersinawkaredouble-precisionpoint,theresultisnotroundedtoaninteger:3/4hasthevalue0.75.x%yRemainder.Thequotientisroundedtowardzerotoaninteger,multipliedbyyandthisresultissubtractedfromx.Thisoperationissometimesknownas\trunc-mod."Thefollowingrelationalwaysholds:b*int(a/b)+(a%b)==aOnepossiblyundesirableofthisofremainderisthatx%yisnegativeifxisnegative.Thus,-17%8=-1Inotherawkimplementations,thesignednessoftheremaindermaybemachinedependent.x^yx**yExponentiation:xraisedtotheypower.2^3hasthevalue8.Thecharactersequence`**'isequivalentto`^'.(Theposixstandardonlysptheuseof`^'forexponentiation.) Chapter8:ExpressionsasActionStatements618.4StringConcatenationThereisonlyonestringoperation:concatenation.Itdoesnothaveaspoperatortorepresentit.Instead,concatenationisperformedbywritingexpressionsnexttooneanother,withnooperator.Forexample:awk'{print"Fieldnumberone:"$1}'BBS-listproduces,fortherecordin`BBS-list':Fieldnumberone:aardvarkWithoutthespaceinthestringconstantafterthe`:',thelinewouldruntogether.Forexample:awk'{print"Fieldnumberone:"$1}'BBS-listproduces,fortherecordin`BBS-list':Fieldnumberone:aardvarkSincestringconcatenationdoesnothaveanexplicitoperator,itisoftennecessarytoinsurethatithappenswhereyouwantittobyenclosingtheitemstobeconcatenatedinparentheses.Forexample,thefollowingcodefragmentdoesnotconcatenatefileandnameasyoumightexpect:file="file"name="name"print"somethingmeaningful">filenameItisnecessarytousethefollowing:print"somethingmeaningful">(filename)Werecommendyouuseparenthesesaroundconcatenationinallbutthemostcommoncontexts(suchasintheright-handoperandof`=').8.5ComparisonExpressionsComparisonexpressionscomparestringsornumbersforrelationshipssuchasequality.Theyarewrittenusingrelationaloperators,whichareasupersetofthoseinC.Hereisatableofthem:x<yTrueifxislessthany.x<=yTrueifxislessthanorequaltoy.x>yTrueifxisgreaterthany.x>=yTrueifxisgreaterthanorequaltoy.x==yTrueifxisequaltoy.x!=yTrueifxisnotequaltoy.x~yTrueifthestringxmatchestheregexpdenotedbyy.x!~yTrueifthestringxdoesnotmatchtheregexpdenotedbyy. 62TheAWKManualsubscriptinarrayTrueifarrayarrayhasanelementwiththesubscriptsubscript.Comparisonexpressionshavethevalue1iftrueand0iffalse.Therulesgawkusesforperformingcomparisonsarebasedonthoseindraft11.2oftheposixstandard.Theposixstandardintroducedtheconceptofanumericstring,whichissimplyastringthatlookslikeanumber,forexample,"+2".Whenperformingarelationaloperation,gawkconsidersthetypeofanoperandtobethetypeitreceivedonitslastassignment,ratherthanthetypeofitslastuse(seeSection8.10[NumericandStringValues],page67).Thistypeisunknownwhentheoperandisfroman\external"source:variables,commandlinearguments,arrayelementsresultingfromasplitoperation,andthevalueofanENVIRONelement.Inthiscaseonly,iftheoperandisanumericstring,thenitisconsideredtobeofbothstringtypeandnumerictype.Ifatleastoneoperandofacomparisonisofstringtypeonly,thenastringcomparisonisperformed.AnynumericoperandwillbeconvertedtoastringusingthevalueofCONVFMT(seeSection8.9[ConversionofStringsandNumbers],page66).Ifoneoperandofacomparisonisnumeric,andtheotheroperandiseithernumericorbothnumericandstring,thenawkdoesanumericcomparison.Ifbothoperandshavebothtypes,thenthecomparisonisnumeric.Stringsarecomparedbycomparingthecharacterofeach,thenthesecondcharacterofeach,andsoon.Thus"10"islessthan"9".Iftherearetwostringswhereoneisaoftheother,theshorterstringislessthanthelongerone.Thus"abc"islessthan"abcd".Herearesomesampleexpressions,howawkcomparesthem,andwhattheresultofthecomparisonis.1.5<=2.0numericcomparison(true)"abc">="xyz"stringcomparison(false)1.5!="+2"stringcomparison(true)"1e2"<"3"stringcomparison(true)a=2;b="2"a==bstringcomparison(true)echo1e23|awk'{print($1<$2)?"true":"false"}'prints`false'sinceboth$1and$2arenumericstringsandthushavebothstringandnumerictypes,thusdictatinganumericcomparison.Thepurposeofthecomparisonrulesandtheuseofnumericstringsistoattempttoproducethebehaviorthatis\leastsurprising,"whilestill\doingtherightthing."Stringcomparisonsandregularexpressioncomparisonsareveryt.Forexample,$1=="foo"hasthevalueof1,oristrue,iftheofthecurrentinputrecordisprecisely`foo'.Bycontrast, Chapter8:ExpressionsasActionStatements63$1~/foo/hasthevalue1ifthecontains`foo',suchas`foobar'.Therighthandoperandofthe`~'and`!~'operatorsmaybeeitheraconstantregexp(/.../),oritmaybeanordinaryexpression,inwhichcasethevalueoftheexpressionasastringisadynamicregexp(seeSection6.2.1[HowtoUseRegularExpressions],page47).Inveryrecentimplementationsofawk,aconstantregularexpressioninslashesbyitselfisalsoanexpression.Theregexp/regexp/isanabbreviationforthiscomparisonexpression:$0~/regexp/Insomecontextsitmaybenecessarytowriteparenthesesaroundtheregexptoavoidconfusingtheawkparser.Forexample,(/x/-/y/)>thresholdisnotallowed,but((/x/)-(/y/))>thresholdparsesproperly.Onespecialplacewhere/foo/isnotanabbreviationfor$0~/foo/iswhenitistheright-handoperandof`~'or`!~'!SeeSection8.1[ConstantExpressions],page57,wherethisisdiscussedinmoredetail.8.6BooleanExpressionsAbooleanexpressionisacombinationofcomparisonexpressionsormatchingexpres-sions,usingthebooleanoperators\or"(`||'),\and"(`&&'),and\not"(`!'),alongwithparenthesestocontrolnesting.Thetruthofthebooleanexpressioniscomputedbycom-biningthetruthvaluesofthecomponentexpressions.Booleanexpressionscanbeusedwherevercomparisonandmatchingexpressionscanbeused.Theycanbeusedinif,whiledoandforstatements.Theyhavenumericvalues(1iftrue,0iffalse),whichcomeintoplayiftheresultofthebooleanexpressionisstoredinavariable,orusedinarithmetic.Inaddition,everybooleanexpressionisalsoavalidbooleanpattern,soyoucanuseitasapatterntocontroltheexecutionofrules.Herearedescriptionsofthethreebooleanoperators,withanexampleofeach.Itmaybeinstructivetocomparetheseexampleswiththeanalogousexamplesofbooleanpatterns(seeSection6.4[BooleanOperatorsandPatterns],page52),whichusethesamebooleanoperatorsinpatternsinsteadofexpressions.boolean1&&boolean2Trueifbothboolean1andboolean2aretrue.Forexample,thefollowingstate-mentprintsthecurrentinputrecordifitcontainsboth`2400'and`foo'.if($0~/2400/&&$0~/foo/)printThesubexpressionboolean2isevaluatedonlyifboolean1istrue.Thiscanmakeawhenboolean2containsexpressionsthathavesideinthecaseof$0~/foo/&&($2==bar++),thevariablebarisnotincrementedifthereisno`foo'intherecord.boolean1||boolean2Trueifatleastoneofboolean1orboolean2istrue.Forexample,thefollowingcommandprintsallrecordsintheinput`BBS-list'thatcontaineither`2400'or`foo',orboth. 64TheAWKManualawk'{if($0~/2400/||$0~/foo/)print}'BBS-listThesubexpressionboolean2isevaluatedonlyifboolean1isfalse.Thiscanmakeawhenboolean2containsexpressionsthathaveside!booleanTrueifbooleanisfalse.Forexample,thefollowingprogramprintsallrecordsintheinput`BBS-list'thatdonotcontainthestring`foo'.awk'{if(!($0~/foo/))print}'BBS-list8.7AssignmentExpressionsAnassignmentisanexpressionthatstoresanewvalueintoavariable.Forexample,let'sassignthevalue1tothevariablez:z=1Afterthisexpressionisexecuted,thevariablezhasthevalue1.Whateveroldvaluezhadbeforetheassignmentisforgotten.Assignmentscanstorestringvaluesalso.Forexample,thiswouldstorethevalue"thisfoodisgood"inthevariablemessage:thing="food"predicate="good"message="this"thing"is"predicate(Thisalsoillustratesconcatenationofstrings.)The`='signiscalledanassignmentoperator.Itisthesimplestassignmentoperatorbecausethevalueoftheright-handoperandisstoredunchanged.Mostoperators(addition,concatenation,andsoon)havenoexcepttocomputeavalue.Ifyouignorethevalue,youmightaswellnotusetheoperator.Anassignmentoperatorist;itdoesproduceavalue,butevenifyouignorethevalue,theassignmentstillmakesitselffeltthroughthealterationofthevariable.Wecallthisaside.Theleft-handoperandofanassignmentneednotbeavariable(seeSection8.2[Vari-ables],page59);itcanalsobea(seeSection3.4[ChangingtheContentsofaField],page23)oranarrayelement(seeChapter10[Arraysinawk],page81).Theseareallcalledlvalues,whichmeanstheycanappearontheleft-handsideofanassignmentoperator.Theright-handoperandmaybeanyexpression;itproducesthenewvaluewhichtheassignmentstoresinthespvariable,orarrayelement.Itisimportanttonotethatvariablesdonothavepermanenttypes.Thetypeofavariableissimplythetypeofwhatevervalueithappenstoholdatthemoment.Inthefollowingprogramfragment,thevariablefoohasanumericvalueatandastringvaluelateron:foo=1printfoofoo="bar"printfooWhenthesecondassignmentgivesfooastringvalue,thefactthatitpreviouslyhadanumericvalueisforgotten. Chapter8:ExpressionsasActionStatements65Anassignmentisanexpression,soithasavalue:thesamevaluethatisassigned.Thus,z=1asanexpressionhasthevalue1.Oneconsequenceofthisisthatyoucanwritemultipleassignmentstogether:x=y=z=0storesthevalue0inallthreevariables.Itdoesthisbecausethevalueofz=0,whichis0,isstoredintoy,andthenthevalueofy=z=0,whichis0,isstoredintox.Youcanuseanassignmentanywhereanexpressioniscalledfor.Forexample,itisvalidtowritex!=(y=1)tosetyto1andthentestwhetherxequals1.Butthisstyletendstomakeprogramshardtoread;exceptinaone-shotprogram,youshouldrewriteittogetridofsuchnestingofassignments.Thisisneververyhard.Asidefrom`=',thereareseveralotherassignmentoperatorsthatdoarithmeticwiththeoldvalueofthevariable.Forexample,theoperator`+='computesanewvaluebyaddingtheright-handvaluetotheoldvalueofthevariable.Thus,thefollowingassignmentadds5tothevalueoffoo:foo+=5Thisispreciselyequivalenttothefollowing:foo=foo+5Usewhicheveronemakesthemeaningofyourprogramclearer.Hereisatableofthearithmeticassignmentoperators.Ineachcase,theright-handoperandisanexpressionwhosevalueisconvertedtoanumber.lvalue+=incrementAddsincrementtothevalueoflvaluetomakethenewvalueoflvalue.lvalue-=decrementSubtractsdecrementfromthevalueoflvalue.lvalue*=cotMultipliesthevalueoflvaluebycot.lvalue/=quotientDividesthevalueoflvaluebyquotient.lvalue%=modulusSetslvaluetoitsremainderbymodulus.lvalue^=powerlvalue**=powerRaiseslvaluetothepowerpower.(Onlythe^=operatorisspbyposix.)8.8IncrementOperatorsIncrementoperatorsincreaseordecreasethevalueofavariableby1.Youcoulddothesamethingwithanassignmentoperator,sotheincrementoperatorsaddnopowertotheawklanguage;buttheyareconvenientabbreviationsforsomethingverycommon.Theoperatortoadd1iswritten`++'.Itcanbeusedtoincrementavariableeitherbeforeoraftertakingitsvalue. 66TheAWKManualTopre-incrementavariablev,write++v.Thisadds1tothevalueofvandthatnewvalueisalsothevalueofthisexpression.Theassignmentexpressionv+=1iscompletelyequivalent.Writingthe`++'afterthevariablesppost-increment.Thisincrementsthevariablevaluejustthesame;theisthatthevalueoftheincrementexpressionitselfisthevariable'soldvalue.Thus,iffoohasthevalue4,thentheexpressionfoo++hasthevalue4,butitchangesthevalueoffooto5.Thepost-incrementfoo++isnearlyequivalenttowriting(foo+=1)-1.Itisnotperfectlyequivalentbecauseallnumbersinawkarepoint:inpoint,foo+1-1doesnotnecessarilyequalfoo.Buttheisminuteaslongasyousticktonumbersthatarefairlysmall(lessthanatrillion).Anylvaluecanbeincremented.Fieldsandarrayelementsareincrementedjustlikevariables.(Use`$(i++)'whenyouwishtodoareferenceandavariableincrementatthesametime.Theparenthesesarenecessarybecauseoftheprecedenceofthereferenceoperator,`$'.)Thedecrementoperator`--'worksjustlike`++'exceptthatitsubtracts1insteadofadding.Like`++',itcanbeusedbeforethelvaluetopre-decrementorafterittopost-decrement.Hereisasummaryofincrementanddecrementexpressions.++lvalueThisexpressionincrementslvalueandthenewvaluebecomesthevalueofthisexpression.lvalue++Thisexpressioncausesthecontentsoflvaluetobeincremented.Thevalueoftheexpressionistheoldvalueoflvalue.--lvalueLike++lvalue,butinsteadofadding,itsubtracts.Itdecrementslvalueanddeliversthevaluethatresults.lvalue--Likelvalue++,butinsteadofadding,itsubtracts.Itdecrementslvalue.Thevalueoftheexpressionistheoldvalueoflvalue.8.9ConversionofStringsandNumbersStringsareconvertedtonumbers,andnumberstostrings,ifthecontextoftheawkprogramdemandsit.Forexample,ifthevalueofeitherfooorbarintheexpressionfoo+barhappenstobeastring,itisconvertedtoanumberbeforetheadditionisperformed.Ifnumericvaluesappearinstringconcatenation,theyareconvertedtostrings.Considerthis:two=2;three=3print(twothree)+4Thiseventuallyprintsthe(numeric)value27.Thenumericvaluesofthevariablestwoandthreeareconvertedtostringsandconcatenatedtogether,andtheresultingstringisconvertedbacktothenumber23,towhich4isthenadded.If,forsomereason,youneedtoforceanumbertobeconvertedtoastring,concatenatethenullstringwiththatnumber.Toforceastringtobeconvertedtoanumber,addzerotothatstring. Chapter8:ExpressionsasActionStatements67Astringisconvertedtoanumberbyinterpretinganumericofthestringasnumerals:"2.5"convertsto2.5,"1e3"convertsto1000,and"25fix"hasanumericvalueof25.Stringsthatcan'tbeinterpretedasvalidnumbersareconvertedtozero.Theexactmannerinwhichnumbersareconvertedintostringsiscontrolledbytheawkbuilt-invariableCONVFMT(seeChapter13[Built-inVariables],page103).Numbersareconvertedusingaspecialversionofthesprintffunction(seeChapter11[Built-inFunctions],page89)withCONVFMTastheformatspCONVFMT'sdefaultvalueis"%.6g",whichprintsavaluewithatleastsixtdigits.Forsomeapplicationsyouwillwanttochangeittospecifymoreprecision.Doubleprecisiononmostmodernmachinesgivesyou16or17decimaldigitsofprecision.StrangeresultscanhappenifyousetCONVFMTtoastringthatdoesn'ttellsprintfhowtoformatpointnumbersinausefulway.Forexample,ifyouforgetthe`%'intheformat,allnumberswillbeconvertedtothesameconstantstring.Asaspecialcase,ifanumberisaninteger,thentheresultofconvertingittoastringisalwaysaninteger,nomatterwhatthevalueofCONVFMTmaybe.Giventhefollowingcodefragment:CONVFMT="%2.2f"a=12b=a""bhasthevalue"12",not"12.00".Priortotheposixstandard,awkspthatthevalueofOFMTwasusedforconvertingnumberstostrings.OFMTsptheoutputformattousewhenprintingnumberswithprint.CONVFMTwasintroducedinordertoseparatethesemanticsofconversionsfromthesemanticsofprinting.BothCONVFMTandOFMThavethesamedefaultvalue:"%.6g".Inthevastmajorityofcases,oldawkprogramswillnotchangetheirbehavior.However,thisuseofOFMTissomethingtokeepinmindifyoumustportyourprogramtootherimplementationsofawk;werecommendthatinsteadofchangingyourprograms,youjustportgawkitself!8.10NumericandStringValuesThroughmostofthismanual,wepresentawkvalues(suchasconstants,orvari-ables)aseithernumbersorstrings.Thisisaconvenientwaytothinkaboutthem,sincetypicallytheyareusedinonlyoneway,ortheother.Intruththough,awkvaluescanbebothstringandnumeric,atthesametime.Internally,awkrepresentsvalueswithastring,apoint)number,andanindicationthatone,theother,orbothrepresentationsofthevaluearevalid.Keepingtrackofbothkindsofvaluesisimportantforexecutionavariablecanacquireastringvaluethetimeitisusedasastring,andthenthatstringvaluecanbeuseduntilthevariableisassignedanewvalue.Thus,ifavariablewithonlyanumericvalueisusedinseveralconcatenationsinarow,itonlyhastobegivenastringrepresentationonce.Thenumericvalueremainsvalid,sothatnoconversionbacktoanumberisnecessaryifthevariableislaterusedinanarithmeticexpression.Trackingbothkindsofvaluesisalsoimportantforprecisenumericalcalculations.Con-siderthefollowing: 68TheAWKManuala=123.321CONVFMT="%3.1f"b=a"isanumber"c=a+1.654Thevariableareceivesastringvalueintheconcatenationandassignmenttob.Thestringvalueofais"123.3".Ifthenumericvaluewaslostwhenitwasconvertedtoastring,thenthenumericuseofainthelaststatementwouldloseinformation.cwouldbeassignedthevalue124.954insteadof124.975.Sucherrorsaccumulaterapidly,andveryadverselynumericcomputations.Onceanumericvalueacquiresacorrespondingstringvalue,itstaysvaliduntilanewassignmentismade.IfCONVFMT(seeSection8.9[ConversionofStringsandNumbers],page66)changesinthemeantime,theoldstringvaluewillstillbeused.Forexample:BEGIN{CONVFMT="%2.2f"a=123.456b=a""#force`a'tohavestringvaluetooprintf"a=%s\n",aCONVFMT="%.6g"printf"a=%s\n",aa+=0#make`a'numericonlyagainprintf"a=%s\n",a#use`a'asstring}Thisprogramprints`a=123.46'twice,andthenprints`a=123.456'.SeeSection8.9[ConversionofStringsandNumbers],page66,fortherulesthatspecifyhowstringvaluesaremadefromnumericvalues.8.11ConditionalExpressionsAconditionalexpressionisaspecialkindofexpressionwiththreeoperands.Itallowsyoutouseoneexpression'svaluetoselectoneoftwootherexpressions.TheconditionalexpressionlooksthesameasintheClanguage:selector?if-true-exp:if-false-expTherearethreesubexpressions.Theselector,isalwayscomputedIfitis\true"(notzeroandnotnull)thenif-true-expiscomputednextanditsvaluebecomesthevalueofthewholeexpression.Otherwise,if-false-expiscomputednextanditsvaluebecomesthevalueofthewholeexpression.Forexample,thisexpressionproducestheabsolutevalueofx:x>0?x:-xEachtimetheconditionalexpressioniscomputed,exactlyoneofif-true-expandif-false-expiscomputed;theotherisignored.ThisisimportantwhentheexpressionscontainsideForexample,thisconditionalexpressionexamineselementiofeitherarrayaorarrayb,andincrementsi.x==y?a[i++]:b[i++] Chapter8:ExpressionsasActionStatements69Thisisguaranteedtoincrementiexactlyonce,becauseeachtimeoneortheotherofthetwoincrementexpressionsisexecuted,andtheotherisnot.8.12FunctionCallsAfunctionisanameforaparticularcalculation.Becauseithasaname,youcanaskforitbynameatanypointintheprogram.Forexample,thefunctionsqrtcomputesthesquarerootofanumber.Asetoffunctionsarebuilt-in,whichmeanstheyareavailableineveryawkprogram.Thesqrtfunctionisoneofthese.SeeChapter11[Built-inFunctions],page89,foralistofbuilt-infunctionsandtheirdescriptions.Inaddition,youcanyourownfunctionsintheprogramforuseelsewhereinthesameprogram.SeeChapter12Functions],page97,forhowtodothis.Thewaytouseafunctioniswithafunctioncallexpression,whichconsistsofthefunctionnamefollowedbyalistofargumentsinparentheses.Theargumentsareexpressionswhichgivetherawmaterialsforthecalculationthatthefunctionwilldo.Whenthereismorethanoneargument,theyareseparatedbycommas.Iftherearenoarguments,writejust`()'afterthefunctionname.Herearesomeexamples:sqrt(x^2+y^2)#Oneargumentatan2(y,x)#Twoargumentsrand()#NoargumentsDonotputanyspacebetweenthefunctionnameandtheopen-parenthesis!Auser-functionnamelooksjustlikethenameofavariable,andspacewouldmaketheexpressionlooklikeconcatenationofavariablewithanexpressioninsideparentheses.Spacebeforetheparenthesisisharmlesswithbuilt-infunctions,butitisbestnottogetintothehabitofusingspacetoavoidmistakeswithfunctions.Eachfunctionexpectsaparticularnumberofarguments.Forexample,thesqrtfunctionmustbecalledwithasingleargument,thenumbertotakethesquarerootof:sqrt(argument)Someofthebuilt-infunctionsallowyoutoomittheargument.Ifyoudoso,theyuseareasonabledefault.SeeChapter11[Built-inFunctions],page89,forfulldetails.Ifargumentsareomittedincallstofunctions,thenthoseargumentsaretreatedaslocalvariables,initializedtothenullstring(seeChapter12Functions],page97).Likeeveryotherexpression,thefunctioncallhasavalue,whichiscomputedbythefunctionbasedontheargumentsyougiveit.Inthisexample,thevalueofsqrt(argument)isthesquarerootoftheargument.AfunctioncanalsohavesidesuchasassigningthevaluesofcertainvariablesordoingI/O.Hereisacommandtoreadnumbers,onenumberperline,andprintthesquarerootofeachone:awk'{print"Thesquarerootof",$1,"is",sqrt($1)}' 70TheAWKManual8.13OperatorPrecedence(HowOperatorsNest)Operatorprecedencedetermineshowoperatorsaregrouped,whentoperatorsappearclosebyinoneexpression.Forexample,`*'hashigherprecedencethan`+';thus,a+b*cmeanstomultiplybandc,andthenaddatotheproduct(i.e.,a+(b*c)).Youcanoverruletheprecedenceoftheoperatorsbyusingparentheses.Youcanthinkoftheprecedencerulesassayingwheretheparenthesesareassumedifyoudonotwriteparenthesesyourself.Infact,itiswisetoalwaysuseparentheseswheneveryouhaveanunusualcombinationofoperators,becauseotherpeoplewhoreadtheprogrammaynotrememberwhattheprecedenceisinthiscase.Youmightforget,too;thenyoucouldmakeamistake.Explicitparentheseswillhelppreventanysuchmistake.Whenoperatorsofequalprecedenceareusedtogether,theleftmostoperatorgroupsexceptfortheassignment,conditionalandexponentiationoperators,whichgroupintheoppositeorder.Thus,a-b+cgroupsas(a-b)+c;a=b=cgroupsasa=(b=c).Theprecedenceofunaryoperatorsdoesnotmatteraslongasonlyunaryoper-atorsareinvolved,becausethereisonlyonewaytoparsethem|innermostThus,$++imeans$(++i)and++$xmeans++($x).However,whenanotheroperatorfollowstheoperand,thentheprecedenceoftheunaryoperatorscanmatter.Thus,$x^2means($x)^2,but-x^2means-(x^2),because`-'haslowerprecedencethan`^'while`$'hashigherprecedence.Hereisatableoftheoperatorsofawk,inorderofincreasingprecedence:assignment`=',`+=',`-=',`*=',`/=',`%=',`^=',`**='.Theseoperatorsgroupright-to-left.(The`**='operatorisnotspbyposix.)conditional`?:'.Thisoperatorgroupsright-to-left.logical\or".`||'.logical\and".`&&'.arraymembership`in'.matching`~',`!~'.relational,andredirectionTherelationaloperatorsandtheredirectionshavethesameprecedencelevel.Characterssuchas`>'servebothasrelationalsandasredirections;thecontextdistinguishesbetweenthetwomeanings.Therelationaloperatorsare`<',`<=',`==',`!=',`>='and`>'.TheI/Oredirectionoperatorsare`<',`>',`>>'and`|'.NotethatI/Oredirectionoperatorsinprintandprintfstatementsbelongtothestatementlevel,nottoexpressions.Theredirectiondoesnotproducean Chapter8:ExpressionsasActionStatements71expressionwhichcouldbetheoperandofanotheroperator.Asaresult,itdoesnotmakesensetousearedirectionoperatornearanotheroperatoroflowerprecedence,withoutparentheses.Suchcombinations,forexample`printfoo>a?b:c',resultinsyntaxerrors.concatenationNospecialtokenisusedtoindicateconcatenation.Theoperandsaresimplywrittensidebyside.add,subtract`+',`-'.multiply,divide,mod`*',`/',`%'.unaryplus,minus,\not"`+',`-',`!'.exponentiation`^',`**'.Theseoperatorsgroupright-to-left.(The`**'operatorisnotspbyposix.)increment,decrement`++',`--'.`$'. 72TheAWKManual Chapter9:ControlStatementsinActions739ControlStatementsinActionsControlstatementssuchasif,while,andsooncontrolthewofexecutioninawkprograms.MostofthecontrolstatementsinawkarepatternedonsimilarstatementsinC.Allthecontrolstatementsstartwithspecialkeywordssuchasifandwhile,todistin-guishthemfromsimpleexpressions.Manycontrolstatementscontainotherstatements;forexample,theifstatementcon-tainsanotherstatementwhichmayormaynotbeexecuted.Thecontainedstatementiscalledthebody.Ifyouwanttoincludemorethanonestatementinthebody,groupthemintoasinglecompoundstatementwithcurlybraces,separatingthemwithnewlinesorsemicolons.9.1TheifStatementTheif-elsestatementisawk'sdecision-makingstatement.Itlookslikethis:if(condition)then-body[elseelse-body]conditionisanexpressionthatcontrolswhattherestofthestatementwilldo.Ifconditionistrue,then-bodyisexecuted;otherwise,else-bodyisexecuted(assumingthattheelseclauseispresent).Theelsepartofthestatementisoptional.Theconditionisconsideredfalseifitsvalueiszeroorthenullstring,andtrueotherwise.Hereisanexample:if(x%2==0)print"xiseven"elseprint"xisodd"Inthisexample,iftheexpressionx%2==0istrue(thatis,thevalueofxisdivisibleby2),thentheprintstatementisexecuted,otherwisethesecondprintstatementisperformed.Iftheelseappearsonthesamelineasthen-body,andthen-bodyisnotacompoundstatement(i.e.,notsurroundedbycurlybraces),thenasemicolonmustseparatethen-bodyfromelse.Toillustratethis,let'srewritethepreviousexample:awk'{if(x%2==0)print"xiseven";elseprint"xisodd"}'Ifyouforgetthe`;',awkwon'tbeabletoparsethestatement,andyouwillgetasyntaxerror.Wewouldnotactuallywritethisexamplethisway,becauseahumanreadermightfailtoseetheelseifitwerenotthethingonitsline. 74TheAWKManual9.2ThewhileStatementInprogramming,aloopmeansapartofaprogramthatis(oratleastcanbe)executedtwoormoretimesinsuccession.Thewhilestatementisthesimplestloopingstatementinawk.Itrepeatedlyexecutesastatementaslongasaconditionistrue.Itlookslikethis:while(condition)bodyHerebodyisastatementthatwecallthebodyoftheloop,andconditionisanexpressionthatcontrolshowlongtheloopkeepsrunning.Thethingthewhilestatementdoesistestcondition.Ifconditionistrue,itexecutesthestatementbody.(conditionistruewhenthevalueisnotzeroandnotanullstring.)Afterbodyhasbeenexecuted,conditionistestedagain,andifitisstilltrue,bodyisexecutedagain.Thisprocessrepeatsuntilconditionisnolongertrue.Ifconditionisinitiallyfalse,thebodyoftheloopisneverexecuted.Thisexampleprintsthethreeofeachrecord,oneperline.awk'{i=1while(i<=3){print$ii++}}'Herethebodyoftheloopisacompoundstatementenclosedinbraces,containingtwostatements.Theloopworkslikethis:thevalueofiissetto1.Then,thewhiletestswhetheriislessthanorequaltothree.Thisisthecasewheniequalsone,sothei-thisprinted.Thenthei++incrementsthevalueofiandthelooprepeats.Theloopterminateswhenireaches4.Asyoucansee,anewlineisnotrequiredbetweentheconditionandthebody;butusingonemakestheprogramclearerunlessthebodyisacompoundstatementorisverysimple.Thenewlineaftertheopen-bracethatbeginsthecompoundstatementisnotrequiredeither,buttheprogramwouldbehardtoreadwithoutit.9.3Thedo-whileStatementThedoloopisavariationofthewhileloopingstatement.Thedoloopexecutesthebodyonce,thenrepeatsbodyaslongasconditionistrue.Itlookslikethis:dobodywhile(condition)Evenifconditionisfalseatthestart,bodyisexecutedatleastonce(andonlyonce,unlessexecutingbodymakesconditiontrue).Contrastthiswiththecorrespondingwhilestatement: Chapter9:ControlStatementsinActions75while(condition)bodyThisstatementdoesnotexecutebodyevenonceifconditionisfalsetobeginwith.Hereisanexampleofadostatement:awk'{i=1do{print$0i++}while(i<=10)}'printseachinputrecordtentimes.Itisn'taveryrealisticexample,sinceinthiscaseanordinarywhilewoulddojustaswell.Butthisactualexperience;thereisonlyoccasionallyarealuseforadostatement.9.4TheforStatementTheforstatementmakesitmoreconvenienttocountiterationsofaloop.Thegeneralformoftheforstatementlookslikethis:for(initialization;condition;increment)bodyThisstatementstartsbyexecutinginitialization.Then,aslongasconditionistrue,itrepeatedlyexecutesbodyandthenincrement.Typicallyinitializationsetsavariabletoeitherzeroorone,incrementadds1toit,andconditioncomparesitagainstthedesirednumberofiterations.Hereisanexampleofaforstatement:awk'{for(i=1;i<=3;i++)print$i}'Thisprintsthethreeofeachinputrecord,oneperline.Intheforstatement,bodystandsforanystatement,butinitialization,conditionandincrementarejustexpressions.Youcannotsetmorethanonevariableintheinitializationpartunlessyouuseamultipleassignmentstatementsuchasx=y=0,whichispossibleonlyifalltheinitialvaluesareequal.(Butyoucaninitializeadditionalvariablesbywritingtheirassignmentsasseparatestatementsprecedingtheforloop.)Thesameistrueoftheincrementpart;toincrementadditionalvariables,youmustwriteseparatestatementsattheendoftheloop.TheCcompoundexpression,usingC'scommaoperator,wouldbeusefulinthiscontext,butitisnotsupportedinawk.Mostoften,incrementisanincrementexpression,asintheexampleabove.Butthisisnotrequired;itcanbeanyexpressionwhatever.Forexample,thisstatementprintsallthepowersof2between1and100:for(i=1;i<=100;i*=2)printiAnyofthethreeexpressionsintheparenthesesfollowingtheformaybeomittedifthereisnothingtobedonethere.Thus,`for(;x>0;)'isequivalentto`while(x>0)'.Ifthe 76TheAWKManualconditionisomitted,itistreatedastrue,elyyieldinganloop(i.e.,aloopthatwillneverterminate).Inmostcases,aforloopisanabbreviationforawhileloop,asshownhere:initializationwhile(condition){bodyincrement}Theonlyexceptioniswhenthecontinuestatement(seeSection9.6[ThecontinueState-ment],page77)isusedinsidetheloop;changingaforstatementtoawhilestatementinthiswaycanchangetheofthecontinuestatementinsidetheloop.Thereisanalternateversionoftheforloop,foriteratingoveralltheindicesofanarray:for(iinarray)dosomethingwitharray[i]SeeChapter10[Arraysinawk],page81,formoreinformationonthisversionoftheforloop.Theawklanguagehasaforstatementinadditiontoawhilestatementbecauseoftenaforloopisbothlessworktotypeandmorenaturaltothinkof.Countingthenumberofiterationsisverycommoninloops.Itcanbeeasiertothinkofthiscountingaspartofloopingratherthanassomethingtodoinsidetheloop.Thenextsectionhasmorecomplicatedexamplesofforloops.9.5ThebreakStatementThebreakstatementjumpsoutoftheinnermostfor,while,ordo-whileloopthatenclosesit.Thefollowingexamplethesmallestdivisorofanyinteger,andalsoidenprimenumbers:awk'#findsmallestdivisorofnum{num=$1for(div=2;div*div<=num;div++)if(num%div==0)breakif(num%div==0)printf"Smallestdivisorof%dis%d\n",num,divelseprintf"%disprime\n",num}'Whentheremainderiszerointheifstatement,awkimmediatelybreaksoutofthecontainingforloop.Thismeansthatawkproceedsimmediatelytothestatementfollowingtheloopandcontinuesprocessing.(Thisisverytfromtheexitstatementwhichstopstheentireawkprogram.SeeSection9.8[TheexitStatement],page79.)Hereisanotherprogramequivalenttothepreviousone.Itillustrateshowtheconditionofafororwhilecouldjustaswellbereplacedwithabreakinsideanif: Chapter9:ControlStatementsinActions77awk'#findsmallestdivisorofnum{num=$1for(div=2;;div++){if(num%div==0){printf"Smallestdivisorof%dis%d\n",num,divbreak}if(div*div>num){printf"%disprime\n",numbreak}}}'9.6ThecontinueStatementThecontinuestatement,likebreak,isusedonlyinsidefor,while,anddo-whileloops.Itskipsovertherestoftheloopbody,causingthenextcyclearoundthelooptobeginimmediately.Contrastthiswithbreak,whichjumpsoutoftheloopaltogether.Hereisanexample:#printnamesthatdon'tcontainthestring"ignore"#first,savethetextofeachline{names[NR]=$0}#printwhatwe'reinterestedinEND{for(xinnames){if(names[x]~/ignore/)continueprintnames[x]}}Ifoneoftheinputrecordscontainsthestring`ignore',thisexampleskipstheprintstatementforthatrecord,andcontinuesbacktothestatementintheloop.Thisisnotapracticalexampleofcontinue,sinceitwouldbejustaseasytowritethelooplikethis:for(xinnames)if(names[x]!~/ignore/)printnames[x]Thecontinuestatementinaforloopdirectsawktoskiptherestofthebodyoftheloop,andresumeexecutionwiththeincrement-expressionoftheforstatement.Thefollowingprogramillustratesthisfact:awk'BEGIN{for(x=0;x<=20;x++){if(x==5) 78TheAWKManualcontinueprintf("%d",x)}print""}'Thisprogramprintsallthenumbersfrom0to20,exceptfor5,forwhichtheprintfisskipped.Sincetheincrementx++isnotskipped,xdoesnotremainstuckat5.Contrasttheforloopabovewiththewhileloop:awk'BEGIN{x=0while(x<=20){if(x==5)continueprintf("%d",x)x++}print""}'Thisprogramloopsforeveroncexgetsto5.Asdescribedabove,thecontinuestatementhasnomeaningwhenusedoutsidethebodyofaloop.9.7ThenextStatementThenextstatementforcesawktoimmediatelystopprocessingthecurrentrecordandgoontothenextrecord.Thismeansthatnofurtherrulesareexecutedforthecurrentrecord.Therestofthecurrentrule'sactionisnotexecutedeither.Contrastthiswiththeofthegetlinefunction(seeSection3.7[ExplicitInputwithgetline],page29).Thattoocausesawktoreadthenextrecordimmediately,butitdoesnotalterthewofcontrolinanyway.Sotherestofthecurrentactionexecuteswithanewinputrecord.Atthehighestlevel,awkprogramexecutionisaloopthatreadsaninputrecordandthentestseachrule'spatternagainstit.Ifyouthinkofthisloopasaforstatementwhosebodycontainstherules,thenthenextstatementisanalogoustoacontinuestatement:itskipstotheendofthebodyofthisimplicitloop,andexecutestheincrement(whichreadsanotherrecord).Forexample,ifyourawkprogramworksonlyonrecordswithfourandyoudon'twantittofailwhengivenbadinput,youmightusethisrulenearthebeginningoftheprogram:NF!=4{printf("line%dskipped:doesn'thave4fields",FNR)>"/dev/stderr"next} Chapter9:ControlStatementsinActions79sothatthefollowingruleswillnotseethebadrecord.Theerrormessageisredirectedtothestandarderroroutputstream,aserrormessagesshouldbe.SeeSection4.7[StandardI/OStreams],page43.Accordingtotheposixstandard,thebehaviorisifthenextstatementisusedinaBEGINorENDrule.gawkwilltreatitasasyntaxerror.Ifthenextstatementcausestheendoftheinputtobereached,thenthecodeintheENDrules,ifany,willbeexecuted.SeeSection6.7[BEGINandENDSpecialPatterns],page53.9.8TheexitStatementTheexitstatementcausesawktoimmediatelystopexecutingthecurrentruleandtostopprocessinginput;anyremaininginputisignored.IfanexitstatementisexecutedfromaBEGINruletheprogramstopsprocessingev-erythingimmediately.Noinputrecordsareread.However,ifanENDruleispresent,itisexecuted(seeSection6.7[BEGINandENDSpecialPatterns],page53).IfexitisusedaspartofanENDrule,itcausestheprogramtostopimmediately.Anexitstatementthatispartofanordinaryrule(thatis,notpartofaBEGINorENDrule)stopstheexecutionofanyfurtherautomaticrules,buttheENDruleisexecutedifthereisone.IfyoudonotwanttheENDruletodoitsjobinthiscase,youcansetavariabletononzerobeforetheexitstatement,andcheckthatvariableintheENDrule.Ifanargumentissuppliedtoexit,itsvalueisusedastheexitstatuscodefortheawkprocess.Ifnoargumentissupplied,exitreturnsstatuszero(success).Forexample,let'ssayyou'vediscoveredanerrorconditionyoureallydon'tknowhowtohandle.Conventionally,programsreportthisbyexitingwithanonzerostatus.Yourawkprogramcandothisusinganexitstatementwithanonzeroargument.Here'sanexampleofthis:BEGIN{if(("date"|getlinedate_now)<0){print"Can'tgetsystemdate">"/dev/stderr"exit4}} 80TheAWKManual Chapter10:Arraysinawk8110ArraysinawkAnarrayisatableofvalues,calledelements.Theelementsofanarrayaredistinguishedbytheirindices.Indicesmaybeeithernumbersorstrings.Eacharrayhasaname,whichlookslikeavariablename,butmustnotbeinuseasavariablenameinthesameawkprogram.10.1IntroductiontoArraysTheawklanguagehasone-dimensionalarraysforstoringgroupsofrelatedstringsornumbers.Everyawkarraymusthaveaname.Arraynameshavethesamesyntaxasvariablenames;anyvalidvariablenamewouldalsobeavalidarrayname.Butyoucannotuseonenameinbothways(asanarrayandasavariable)inoneawkprogram.Arraysinawksupresemblearraysinotherprogramminglanguages;buttherearefundamentalInawk,youdon'tneedtospecifythesizeofanarraybeforeyoustarttouseit.Additionally,anynumberorstringinawkmaybeusedasanarrayindex.Inmostotherlanguages,youhavetodeclareanarrayandspecifyhowmanyelementsorcomponentsitcontains.Insuchlanguages,thedeclarationcausesacontiguousblockofmemorytobeallocatedforthatmanyelements.Anindexinthearraymustbeapositiveinteger;forexample,theindex0sptheelementinthearray,whichisactuallystoredatthebeginningoftheblockofmemory.Index1spthesecondelement,whichisstoredinmemoryrightaftertheelement,andsoon.Itisimpossibletoaddmoreelementstothearray,becauseithasroomforonlyasmanyelementsasyoudeclared.Acontiguousarrayoffourelementsmightlooklikethis,conceptually,iftheelementvaluesare8,"foo",""and30:+---------+---------+--------+---------+|8|"foo"|""|30|value+---------+---------+--------+---------+0123indexOnlythevaluesarestored;theindicesareimplicitfromtheorderofthevalues.8isthevalueatindex0,because8appearsinthepositionwith0elementsbeforeit.Arraysinawkaret:theyareassociative.Thismeansthateacharrayisacollectionofpairs:anindex,anditscorrespondingarrayelementvalue:Element4Value30Element2Value"foo"Element1Value8Element3Value""Wehaveshownthepairsinjumbledorderbecausetheirorderisirrelevant.Oneadvantageofanassociativearrayisthatnewpairscanbeaddedatanytime.Forexample,supposeweaddtotheabovearrayatenthelementwhosevalueis"numberten".Theresultisthis: 82TheAWKManualElement10Value"numberten"Element4Value30Element2Value"foo"Element1Value8Element3Value""Nowthearrayissparse(i.e.,someindicesaremissing):ithaselements1{4and10,butdoesn'thaveelements5,6,7,8,or9.Anotherconsequenceofassociativearraysisthattheindicesdon'thavetobepositiveintegers.Anynumber,orevenastring,canbeanindex.Forexample,hereisanarraywhichtranslateswordsfromEnglishintoFrench:Element"dog"Value"chien"Element"cat"Value"chat"Element"one"Value"un"Element1Value"un"Herewedecidedtotranslatethenumber1inbothspelled-outandnumericform|thusillustratingthatasinglearraycanhavebothnumbersandstringsasindices.Whenawkcreatesanarrayforyou,e.g.,withthesplitbuilt-infunction,thatarray'sindicesareconsecutiveintegersstartingat1.(SeeSection11.3[Built-inFunctionsforStringManipulation],page91.)10.2ReferringtoanArrayElementTheprincipalwayofusinganarrayistorefertooneofitselements.Anarrayreferenceisanexpressionwhichlookslikethis:array[index]Here,arrayisthenameofanarray.Theexpressionindexistheindexoftheelementofthearraythatyouwant.Thevalueofthearrayreferenceisthecurrentvalueofthatarrayelement.Forexample,foo[4.3]isanexpressionfortheelementofarrayfooatindex4.3.Ifyourefertoanarrayelementthathasnorecordedvalue,thevalueofthereferenceis"",thenullstring.Thisincludeselementstowhichyouhavenotassignedanyvalue,andelementsthathavebeendeleted(seeSection10.6[ThedeleteStatement],page85).Suchareferenceautomaticallycreatesthatarrayelement,withthenullstringasitsvalue.(Insomecases,thisisunfortunate,becauseitmightwastememoryinsideawk).Youcanoutifanelementexistsinanarrayatacertainindexwiththeexpression:indexinarrayThisexpressiontestswhetherornottheparticularindexexists,withoutthesideofcreatingthatelementifitisnotpresent.Theexpressionhasthevalue1(true)ifarray[index]exists,and0(false)ifitdoesnotexist.Forexample,totestwhetherthearrayfrequenciescontainstheindex"2",youcouldwritethisstatement:if("2"infrequencies)print"Subscript\"2\"ispresent." Chapter10:Arraysinawk83Notethatthisisnotatestofwhetherornotthearrayfrequenciescontainsanelementwhosevalueis"2".(Thereisnowaytodothatexcepttoscanalltheelements.)Also,thisdoesnotcreatefrequencies["2"],whilethefollowing(incorrect)alternativewoulddoso:if(frequencies["2"]!="")print"Subscript\"2\"ispresent."10.3AssigningArrayElementsArrayelementsarelvalues:theycanbeassignedvaluesjustlikeawkvariables:array[subscript]=valueHerearrayisthenameofyourarray.Theexpressionsubscriptistheindexoftheelementofthearraythatyouwanttoassignavalue.Theexpressionvalueisthevalueyouareassigningtothatelementofthearray.10.4BasicExampleofanArrayThefollowingprogramtakesalistoflines,eachbeginningwithalinenumber,andprintsthemoutinorderoflinenumber.Thelinenumbersarenotinorder,however,whentheyareread:theyarescrambled.Thisprogramsortsthelinesbymakinganarrayusingthelinenumbersassubscripts.Itthenprintsoutthelinesinsortedorderoftheirnumbers.Itisaverysimpleprogram,andgetsconfusedifitencountersrepeatednumbers,gaps,orlinesthatdon'tbeginwithanumber.{if($1>max)max=$1arr[$1]=$0}END{for(x=1;x<=max;x++)printarr[x]}Therulekeepstrackofthelargestlinenumberseensofar;italsostoreseachlineintothearrayarr,atanindexthatistheline'snumber.Thesecondrulerunsafteralltheinputhasbeenread,toprintoutallthelines.Whenthisprogramisrunwiththefollowinginput:5IamtheFiveman2Whoareyou?Thenewnumbertwo!4...Andfouronthefloor1Whoisnumberone?3Ithreeyou.itsoutputisthis:1Whoisnumberone?2Whoareyou?Thenewnumbertwo! 84TheAWKManual3Ithreeyou.4...Andfouronthefloor5IamtheFivemanIfalinenumberisrepeated,thelastlinewithagivennumberoverridestheothers.Gapsinthelinenumberscanbehandledwithaneasyimprovementtotheprogram'sENDrule:END{for(x=1;x<=max;x++)if(xinarr)printarr[x]}10.5ScanningallElementsofanArrayInprogramsthatusearrays,oftenyouneedaloopthatexecutesonceforeachelementofanarray.Inotherlanguages,wherearraysarecontiguousandindicesarelimitedtopositiveintegers,thisiseasy:thelargestindexisonelessthanthelengthofthearray,andyoucanallthevalidindicesbycountingfromzerouptothatvalue.Thistechniquewon'tdothejobinawk,sinceanynumberorstringmaybeanarrayindex.Soawkhasaspecialkindofforstatementforscanninganarray:for(varinarray)bodyThisloopexecutesbodyonceforeachtvaluethatyourprogramhaspreviouslyusedasanindexinarray,withthevariablevarsettothatindex.Hereisaprogramthatusesthisformoftheforstatement.Therulescanstheinputrecordsandnoteswhichwordsappear(atleastonce)intheinput,bystoringa1intothearrayusedwiththewordasindex.Thesecondrulescanstheelementsofusedtoallthedistinctwordsthatappearintheinput.Itprintseachwordthatismorethan10characterslong,andalsoprintsthenumberofsuchwords.SeeChapter11[Built-inFunctions],page89,formoreinformationonthebuilt-infunctionlength.#Recorda1foreachwordthatisusedatleastonce.{for(i=1;i<=NF;i++)used[$i]=1}#Findnumberofdistinctwordsmorethan10characterslong.END{for(xinused)if(length(x)>10){++num_long_wordsprintx}printnum_long_words,"wordslongerthan10characters"} Chapter10:Arraysinawk85SeeAppendixB[SampleProgram],page121,foramoredetailedexampleofthistype.Theorderinwhichelementsofthearrayareaccessedbythisstatementisdeterminedbytheinternalarrangementofthearrayelementswithinawkandcannotbecontrolledorchanged.Thiscanleadtoproblemsifnewelementsareaddedtoarraybystatementsinbody;youcannotpredictwhetherornottheforloopwillreachthem.Similarly,changingvarinsidetheloopcanproducestrangeresults.Itisbesttoavoidsuchthings.10.6ThedeleteStatementYoucanremoveanindividualelementofanarrayusingthedeletestatement:deletearray[index]Youcannotrefertoanarrayelementafterithasbeendeleted;itisasifyouhadneverreferredtoitandhadnevergivenitanyvalue.Youcannolongerobtainanyvaluetheelementoncehad.Hereisanexampleofdeletingelementsinanarray:for(iinfrequencies)deletefrequencies[i]Thisexampleremovesalltheelementsfromthearrayfrequencies.Ifyoudeleteanelement,asubsequentforstatementtoscanthearraywillnotreportthatelement,andtheinoperatortocheckforthepresenceofthatelementwillreturn0:deletefoo[4]if(4infoo)print"Thiswillneverbeprinted"Itisnotanerrortodeleteanelementwhichdoesnotexist.10.7UsingNumberstoSubscriptArraysAnimportantaspectofarraystorememberisthatarraysubscriptsarealwaysstrings.Ifyouuseanumericvalueasasubscript,itwillbeconvertedtoastringvaluebeforeitisusedforsubscripting(seeSection8.9[ConversionofStringsandNumbers],page66).ThismeansthatthevalueoftheCONVFMTcanpotentiallyhowyourprogramaccesseselementsofanarray.Forexample:a=b=12.153data[a]=1CONVFMT="%2.2f"if(bindata)printf"%sisindata",belseprintf"%sisnotindata",bshouldprint`12.15isnotindata'.Thestatementgivesbothaandbthesamenumericvalue.Assigningtodata[a]givesathestringvalue"12.153"(usingthedefaultconversionvalueofCONVFMT,"%.6g"),andthenassigns1todata["12.153"].The 86TheAWKManualprogramthenchangesthevalueofCONVFMT.Thetest`(bindata)'forcesbtobeconvertedtoastring,thistime"12.15",sincethevalueofCONVFMTonlyallowstwotdigits.Thistestfails,since"12.15"isatstringfrom"12.153".Accordingtotherulesforconversions(seeSection8.9[ConversionofStringsandNum-bers],page66),integervaluesarealwaysconvertedtostringsasintegers,nomatterwhatthevalueofCONVFMTmayhappentobe.Sotheusualcaseoffor(i=1;i<=maxsub;i++)dosomethingwitharray[i]willwork,nomatterwhatthevalueofCONVFMT.Likemanythingsinawk,themajorityofthetimethingsworkasyouwouldexpectthemtowork.Butitisusefultohaveapreciseknowledgeoftheactualrules,sincesometimestheycanhaveasubtleonyourprograms.10.8Multi-dimensionalArraysAmulti-dimensionalarrayisanarrayinwhichanelementisidenbyasequenceofindices,notasingleindex.Forexample,atwo-dimensionalarrayrequirestwoindices.Theusualway(inmostlanguages,includingawk)torefertoanelementofatwo-dimensionalarraynamedgridiswithgrid[x,y].Multi-dimensionalarraysaresupportedinawkthroughconcatenationofindicesintoonestring.Whathappensisthatawkconvertstheindicesintostrings(seeSection8.9[ConversionofStringsandNumbers],page66)andconcatenatesthemtogether,withaseparatorbetweenthem.Thiscreatesasinglestringthatdescribesthevaluesoftheseparateindices.Thecombinedstringisusedasasingleindexintoanordinary,one-dimensionalarray.Theseparatorusedisthevalueofthebuilt-invariableSUBSEP.Forexample,supposeweevaluatetheexpressionfoo[5,12]="value"whenthevalueofSUBSEPis"@".Thenumbers5and12areconvertedtostringsandconcatenatedwithan`@'betweenthem,yielding"5@12";thus,thearrayelementfoo["5@12"]issetto"value".Oncetheelement'svalueisstored,awkhasnorecordofwhetheritwasstoredwithasingleindexorasequenceofindices.Thetwoexpressionsfoo[5,12]andfoo[5SUBSEP12]alwayshavethesamevalue.ThedefaultvalueofSUBSEPisthestring"\034",whichcontainsanonprintingcharacterthatisunlikelytoappearinanawkprogramorintheinputdata.Theusefulnessofchoosinganunlikelycharactercomesfromthefactthatindexval-uesthatcontainastringmatchingSUBSEPleadtocombinedstringsthatareambiguous.SupposethatSUBSEPwere"@";thenfoo["a@b","c"]andfoo["a","b@c"]wouldbein-distinguishablebecausebothwouldactuallybestoredasfoo["a@b@c"].BecauseSUBSEPis"\034",suchconfusioncanariseonlywhenanindexcontainsthecharacterwithASCIIcode034,whichisarareevent.Youcantestwhetheraparticularindex-sequenceexistsina\multi-dimensional"arraywiththesameoperatorinusedforsingledimensionalarrays.Insteadofasingleindexastheleft-handoperand,writethewholesequenceofindices,separatedbycommas,inparentheses: Chapter10:Arraysinawk87(subscript1,subscript2,...)inarrayThefollowingexampletreatsitsinputasatwo-dimensionalarrayofitrotatesthisarray90degreesclockwiseandprintstheresult.Itassumesthatalllineshavethesamenumberofelements.awk'{if(max_nf<NF)max_nf=NFmax_nr=NRfor(x=1;x<=NF;x++)vector[x,NR]=$x}END{for(x=1;x<=max_nf;x++){for(y=max_nr;y>=1;--y)printf("%s",vector[x,y])printf("\n")}}'Whengiventheinput:123456234561345612456123itproduces:43215432654316542165321610.9ScanningMulti-dimensionalArraysThereisnospecialforstatementforscanninga\multi-dimensional"array;therecannotbeone,becauseintruththerearenomulti-dimensionalarraysorelements;thereisonlyamulti-dimensionalwayofaccessinganarray.However,ifyourprogramhasanarraythatisalwaysaccessedasmulti-dimensional,youcangettheofscanningitbycombiningthescanningforstatement(seeSec-tion10.5[ScanningallElementsofanArray],page84)withthesplitbuilt-infunction(seeSection11.3[Built-inFunctionsforStringManipulation],page91).Itworkslikethis:for(combinedinarray){split(combined,separate,SUBSEP)...} 88TheAWKManualThiseachconcatenated,combinedindexinthearray,andsplitsitintotheindividualindicesbybreakingitapartwherethevalueofSUBSEPappears.Thesplit-outindicesbecometheelementsofthearrayseparate.Thus,supposeyouhavepreviouslystoredinarray[1,"foo"];thenanelementwithindex"1\034foo"existsinarray.(RecallthatthedefaultvalueofSUBSEPcontainsthecharacterwithcode034.)Soonerorlatertheforstatementwillthatindexanddoaniterationwithcombinedsetto"1\034foo".Thenthesplitfunctioniscalledasfollows:split("1\034foo",separate,"\034")Theresultofthisistosetseparate[1]to1andseparate[2]to"foo".Presto,theoriginalsequenceofseparateindiceshasbeenrecovered. Chapter11:Built-inFunctions8911Built-inFunctionsBuilt-infunctionsarefunctionsthatarealwaysavailableforyourawkprogramtocall.Thischapterallthebuilt-infunctionsinawk;someofthemarementionedinothersections,buttheyaresummarizedhereforyourconvenience.(Youcanalsonewfunctionsyourself.SeeChapter12Functions],page97.)11.1CallingBuilt-inFunctionsTocallabuilt-infunction,writethenameofthefunctionfollowedbyargumentsinparentheses.Forexample,atan2(y+z,1)isacalltothefunctionatan2,withtwoargu-ments.Whitespaceisignoredbetweenthebuilt-infunctionnameandtheopen-parenthesis,butwerecommendthatyouavoidusingwhitespacethere.functionsdonotpermitwhitespaceinthisway,andyouwilliteasiertoavoidmistakesbyfollowingasimpleconventionwhichalwaysworks:nowhitespaceafterafunctionname.Eachbuilt-infunctionacceptsacertainnumberofarguments.Inmostcases,anyextraargumentsgiventobuilt-infunctionsareignored.Thedefaultsforomittedargumentsvaryfromfunctiontofunctionandaredescribedundertheindividualfunctions.Whenafunctioniscalled,expressionsthatcreatethefunction'sactualparametersareevaluatedcompletelybeforethefunctioncallisperformed.Forexample,inthecodefrag-ment:i=4j=sqrt(i++)thevariableiissetto5beforesqrtiscalledwithavalueof4foritsactualparameter.11.2NumericBuilt-inFunctionsHereisafulllistofbuilt-infunctionsthatworkwithnumbers:int(x)Thisgivesyoutheintegerpartofx,truncatedtoward0.Thisproducesthenearestintegertox,locatedbetweenxand0.Forexample,int(3)is3,int(3.9)is3,int(-3.9)is3,andint(-3)is3aswell.sqrt(x)Thisgivesyouthepositivesquarerootofx.Itreportsanerrorifxisnegative.Thus,sqrt(4)is2.exp(x)Thisgivesyoutheexponentialofx,orreportsanerrorifxisoutofrange.Therangeofvaluesxcanhavedependsonyourmachine'spointrepresen-tation.log(x)Thisgivesyouthenaturallogarithmofx,ifxispositive;otherwise,itreportsanerror. 90TheAWKManualsin(x)Thisgivesyouthesineofx,withxinradians.cos(x)Thisgivesyouthecosineofx,withxinradians.atan2(y,x)Thisgivesyouthearctangentofy/xinradians.rand()Thisgivesyouarandomnumber.Thevaluesofrandareuniformly-distributedbetween0and1.Thevalueisnever0andnever1.Oftenyouwantrandomintegersinstead.Hereisafunctionyoucanusetoobtainarandomnonnegativeintegerlessthann:functionrandint(n){returnint(n*rand())}Themultiplicationproducesarandomrealnumbergreaterthan0andlessthann.Wethenmakeitaninteger(usingint)between0andn1.Hereisanexamplewhereasimilarfunctionisusedtoproducerandomintegersbetween1andn.Notethatthisprogramwillprintanewrandomnumberforeachinputrecord.awk'#Functiontorollasimulateddie.functionroll(n){return1+int(rand()*n)}#Roll3six-sideddiceandprinttotalnumberofpoints.{printf("%dpoints\n",roll(6)+roll(6)+roll(6))}'Note:randstartsgeneratingnumbersfromthesamepoint,orseed,eachtimeyourunawk.Thismeansthataprogramwillproducethesameresultseachtimeyourunit.Thenumbersarerandomwithinoneawkrun,butpredictablefromruntorun.Thisisconvenientfordebugging,butifyouwantaprogramtodotthingseachtimeitisused,youmustchangetheseedtoavaluethatwillbetineachrun.Todothis,usesrand.srand(x)Thefunctionsrandsetsthestartingpoint,orseed,forgeneratingrandomnumberstothevaluex.Eachseedvalueleadstoaparticularsequenceof\random"numbers.Thus,ifyousettheseedtothesamevalueasecondtime,youwillgetthesamesequenceof\random"numbersagain.Ifyouomittheargumentx,asinsrand(),thenthecurrentdateandtimeofdayareusedforaseed.Thisisthewaytogetrandomnumbersthataretrulyunpredictable.Thereturnvalueofsrandisthepreviousseed.Thismakesiteasytokeeptrackoftheseedsforuseinconsistentlyreproducingsequencesofrandomnumbers.11.3Built-inFunctionsforStringManipulation Chapter11:Built-inFunctions91Thefunctionsinthissectionlookatorchangethetextofoneormorestrings.index(in,)Thissearchesthestringinfortheoccurrenceofthestring,andreturnsthepositionincharacterswherethatoccurrencebeginsinthestringin.Forexample:awk'BEGIN{printindex("peanut","an")}'prints`3'.Ifisnotfound,indexreturns0.(Rememberthatstringindicesinawkstartat1.)length(string)Thisgivesyouthenumberofcharactersinstring.Ifstringisanumber,thelengthofthedigitstringrepresentingthatnumberisreturned.Forexample,length("abcde")is5.Bycontrast,length(15*35)worksoutto3.How?Well,15*35=525,and525isthenconvertedtothestring`"525"',whichhasthreecharacters.Ifnoargumentissupplied,lengthreturnsthelengthof$0.Inolderversionsofawk,youcouldcallthelengthfunctionwithoutanyparen-theses.Doingsoismarkedas\deprecated"intheposixstandard.Thismeansthatwhileyoucandothisinyourprograms,itisafeaturethatcaneventu-allyberemovedfromafutureversionofthestandard.Therefore,formaximalportabilityofyourawkprogramsyoushouldalwayssupplytheparentheses.match(string,regexp)Thematchfunctionsearchesthestring,string,forthelongest,leftmostsub-stringmatchedbytheregularexpression,regexp.Itreturnsthecharacterpo-sition,orindex,ofwherethatsubstringbegins(1,ifitstartsatthebeginningofstring).Ifnomatchiffound,itreturns0.Thematchfunctionsetsthebuilt-invariableRSTARTtotheindex.Italsosetsthebuilt-invariableRLENGTHtothelengthincharactersofthematchedsubstring.Ifnomatchisfound,RSTARTissetto0,andRLENGTHto1.Forexample:awk'{if($1=="FIND")regex=$2else{where=match($0,regex)if(where)print"Matchof",regex,"foundat",where,"in",$0}}'Thisprogramlooksforlinesthatmatchtheregularexpressionstoredinthevariableregex.Thisregularexpressioncanbechanged.Ifthewordonalineis`FIND',regexischangedtobethesecondwordonthatline.Therefore,given:FINDfo*bar 92TheAWKManualMyprogramwasafoobarButnoneofitwoulddoobarFINDMelvinJF+KMThislineispropertyofTheRealityEngineeringCo.ThisfilecreatedbyMelvin.awkprints:Matchoffo*barfoundat18inMyprogramwasafoobarMatchofMelvinfoundat26inThisfilecreatedbyMelvin.split(string,array,)Thisdividesstringintopiecesseparatedby,andstoresthepiecesinarray.Thepieceisstoredinarray[1],thesecondpieceinarray[2],andsoforth.Thestringvalueofthethirdargument,,isaregexpdescribingwheretosplitstring(muchasFScanbearegexpdescribingwheretosplitinputrecords).Iftheisomitted,thevalueofFSisused.splitreturnsthenumberofelementscreated.Thesplitfunction,then,splitsstringsintopiecesinamannersimilartothewayinputlinesaresplitintoForexample:split("auto-da-fe",a,"-")splitsthestring`auto-da-fe'intothreeusing`-'astheseparator.Itsetsthecontentsofthearrayaasfollows:a[1]="auto"a[2]="da"a[3]="fe"Thevaluereturnedbythiscalltosplitis3.Aswithinputwhenthevalueofis"",leadingandtrail-ingwhitespaceisignored,andtheelementsareseparatedbyrunsofwhitespace.sprintf(format,expression1,...)Thisreturns(withoutprinting)thestringthatprintfwouldhaveprintedoutwiththesamearguments(seeSection4.5[UsingprintfStatementsforFancierPrinting],page38).Forexample:sprintf("pi=%.2f(approx.)",22/7)returnsthestring"pi=3.14(approx.)".sub(regexp,replacement,target)Thesubfunctionaltersthevalueoftarget.Itsearchesthisvalue,whichshouldbeastring,fortheleftmostsubstringmatchedbytheregularexpression,regexp,extendingthismatchasfaraspossible.Thentheentirestringischangedbyreplacingthematchedtextwithreplacement.Themostringbecomesthenewvalueoftarget.Thisfunctionispeculiarbecausetargetisnotsimplyusedtocomputeavalue,andnotjustanyexpressionwilldo:itmustbeavariable,orarrayrefer-ence,sothatsubcanstoreamovaluethere.Ifthisargumentisomitted,thenthedefaultistouseandalter$0.Forexample: Chapter11:Built-inFunctions93str="water,water,everywhere"sub(/at/,"ith",str)setsstrto"wither,water,everywhere",byreplacingtheleftmost,longestoccurrenceof`at'with`ith'.Thesubfunctionreturnsthenumberofsubstitutionsmade(eitheroneorzero).Ifthespecialcharacter`&'appearsinreplacement,itstandsfortheprecisesubstringthatwasmatchedbyregexp.(Iftheregexpcanmatchmorethanonestring,thenthisprecisesubstringmayvary.)Forexample:awk'{sub(/candidate/,"&andhiswife");print}'changestheoccurrenceof`candidate'to`candidateandhiswife'oneachinputline.Hereisanotherexample:awk'BEGIN{str="daabaaa"sub(/a*/,"c&c",str)printstr}'prints`dcaacbaaa'.Thisshowhow`&'canrepresentanon-constantstring,andalsoillustratesthe\leftmost,longest"rule.Theofthisspecialcharacter(`&')canbeturnedbyputtingabackslashbeforeitinthestring.Asusual,toinsertonebackslashinthestring,youmustwritetwobackslashes.Therefore,write`\\&'inastringconstanttoincludealiteral`&'inthereplacement.Forexample,hereishowtoreplacethe`|'oneachlinewithan`&':awk'{sub(/\|/,"\\&");print}'Note:asmentionedabove,thethirdargumenttosubmustbeanlvalue.Someversionsofawkallowthethirdargumenttobeanexpressionwhichisnotanlvalue.Insuchacase,subwouldstillsearchforthepatternandreturn0or1,buttheresultofthesubstitution(ifany)wouldbethrownawaybecausethereisnoplacetoputit.Suchversionsofawkacceptexpressionslikethis:sub(/USA/,"UnitedStates","theUSAandCanada")Butthatisconsiderederroneousingawk.gsub(regexp,replacement,target)Thisissimilartothesubfunction,exceptgsubreplacesallofthelongest,leftmost,nonoverlappingmatchingsubstringsitcanThe`g'ingsubstandsfor\global,"whichmeansreplaceeverywhere.Forexample:awk'{gsub(/Britain/,"UnitedKingdom");print}'replacesalloccurrencesofthestring`Britain'with`UnitedKingdom'forallinputrecords.Thegsubfunctionreturnsthenumberofsubstitutionsmade.Ifthevariabletobesearchedandaltered,target,isomitted,thentheentireinputrecord,$0,isused.Asinsub,thecharacters`&'and`\'arespecial,andthethirdargumentmustbeanlvalue. 94TheAWKManualsubstr(string,start,length)Thisreturnsalength-character-longsubstringofstring,startingatcharacternumberstart.Thecharacterofastringischaracternumberone.Forexample,substr("washington",5,3)returns"ing".Iflengthisnotpresent,thisfunctionreturnsthewholeofstringthatbeginsatcharacternumberstart.Forexample,substr("washington",5)returns"ington".Thisisalsothecaseiflengthisgreaterthanthenumberofcharactersremaininginthestring,countingfromcharacternumberstart.tolower(string)Thisreturnsacopyofstring,witheachupper-casecharacterinthestringreplacedwithitscorrespondinglower-casecharacter.Nonalphabeticcharactersareleftunchanged.Forexample,tolower("MiXeDcAsE123")returns"mixedcase123".toupper(string)Thisreturnsacopyofstring,witheachlower-casecharacterinthestringre-placedwithitscorrespondingupper-casecharacter.Nonalphabeticcharactersareleftunchanged.Forexample,toupper("MiXeDcAsE123")returns"MIXEDCASE123".11.4Built-inFunctionsforInput/Outputclose()Closethe,forinputoroutput.Theargumentmayalternativelybeashellcommandthatwasusedforredirectingtoorfromapipe;thenthepipeisclosed.SeeSection3.8[ClosingInputFilesandPipes],page33,regardingclosinginputandpipes.SeeSection4.6.2[ClosingOutputFilesandPipes],page43,regardingclosingoutputandpipes.system(command)Thesystemfunctionallowstheusertoexecuteoperatingsystemcommandsandthenreturntotheawkprogram.Thesystemfunctionexecutesthecommandgivenbythestringcommand.Itreturns,asitsvalue,thestatusreturnedbythecommandthatwasexecuted.Forexample,ifthefollowingfragmentofcodeisputinyourawkprogram:END{system("mail-s'awkrundone'operator</dev/null")}thesystemoperatorwillbesentmailwhentheawkprogramprocessinginputandbeginsitsend-of-inputprocessing.Notethatmuchthesameresultcanbeobtainedbyredirectingprintorprintfintoapipe.However,ifyourawkprogramisinteractive,systemisusefulforcrankinguplargeself-containedprograms,suchasashelloraneditor. Chapter11:Built-inFunctions95Someoperatingsystemscannotimplementthesystemfunction.systemcausesafatalerrorifitisnotsupported.ControllingOutputwithsystemManyutilityprogramswilltheiroutput;theysaveinformationtobewrittentoadiskorterminalinmemory,untilthereisenoughtobewritteninoneoperation.Thisisoftenmoretthanwritingeverylittlebitofinformationassoonasitisready.However,sometimesitisnecessarytoforceaprogramtoitsthatis,writetheinformationtoitsdestination,evenifaisnotfull.Youcandothisfromyourawkprogrambycallingsystemwithanullstringasitsargument:system("")#flushoutput 96TheAWKManual Chapter12:Functions9712FunctionsComplicatedawkprogramscanoftenbebyyourownfunctions.User-functionscanbecalledjustlikebuilt-inones(seeSection8.12[FunctionCalls],page69),butitisuptoyoutothem|totellawkwhattheyshoulddo.12.1SyntaxofFunctionoffunctionscanappearanywherebetweentherulesoftheawkprogram.Thus,thegeneralformofanawkprogramisextendedtoincludesequencesofrulesandfunctionTheofafunctionnamednamelookslikethis:functionname(parameter-list){body-of-function}nameisthenameofthefunctiontobeAvalidfunctionnameislikeavalidvariablename:asequenceofletters,digitsandunderscores,notstartingwithadigit.Functionssharethesamepoolofnamesasvariablesandarrays.parameter-listisalistofthefunction'sargumentsandlocalvariablenames,separatedbycommas.Whenthefunctioniscalled,theargumentnamesareusedtoholdtheargumentvaluesgiveninthecall.Thelocalvariablesareinitializedtothenullstring.Thebody-of-functionconsistsofawkstatements.Itisthemostimportantpartofthebecauseitsayswhatthefunctionshouldactuallydo.Theargumentnamesexisttogivethebodyawaytotalkaboutthearguments;localvariables,togivethebodyplacestokeeptemporaryvalues.Argumentnamesarenotdistinguishedsyntacticallyfromlocalvariablenames;instead,thenumberofargumentssuppliedwhenthefunctioniscalleddetermineshowmanyargu-mentvariablesthereare.Thus,ifthreeargumentvaluesaregiven,thethreenamesinparameter-listarearguments,andtherestarelocalvariables.Itfollowsthatifthenumberofargumentsisnotthesameinallcallstothefunction,someofthenamesinparameter-listmaybeargumentsonsomeoccasionsandlocalvariablesonothers.Anotherwaytothinkofthisisthatomittedargumentsdefaulttothenullstring.Usuallywhenyouwriteafunctionyouknowhowmanynamesyouintendtouseforargumentsandhowmanyyouintendtouseaslocals.Byconvention,youshouldwriteanextraspacebetweentheargumentsandthelocals,sootherpeoplecanfollowhowyourfunctionissupposedtobeused.Duringexecutionofthefunctionbody,theargumentsandlocalvariablevalueshideorshadowanyvariablesofthesamenamesusedintherestoftheprogram.Theshadowedvariablesarenotaccessibleinthefunctionbecausethereisnowaytonamethemwhiletheirnameshavebeentakenawayforthelocalvariables.AllothervariablesusedintheawkprogramcanbereferencedorsetnormallyinthefunctionTheargumentsandlocalvariableslastonlyaslongasthefunctionbodyisexecuting.Oncethebodytheshadowedvariablescomeback. 98TheAWKManualThefunctionbodycancontainexpressionswhichcallfunctions.Theycanevencallthisfunction,eitherdirectlyorbywayofanotherfunction.Whenthishappens,wesaythefunctionisrecursive.Thereisnoneedinawktoputtheofafunctionbeforeallusesofthefunction.Thisisbecauseawkreadstheentireprogrambeforestartingtoexecuteanyofit.12.2FunctionExampleHereisanexampleofafunction,calledmyprint,thattakesanumberandprintsitinaspformat.functionmyprint(num){printf"%6.3g\n",num}Toillustrate,hereisanawkrulewhichusesourmyprintfunction:$3>0{myprint($3)}Thisprogramprints,inourspecialformat,allthethirdthatcontainapositivenumberinourinput.Therefore,whengiven:1.23.45.67.89.1011.12-13.1415.1617.1819.2021.2223.24thisprogram,usingourfunctiontoformattheresults,prints:5.621.2Hereisarathercontrivedexampleofarecursivefunction.Itprintsastringbackwards:functionrev(str,len){if(len==0){printf"\n"return}printf"%c",substr(str,len,1)rev(str,len-1)}12.3CallingFunctionsCallingafunctionmeanscausingthefunctiontorunanddoitsjob.Afunctioncallisanexpression,anditsvalueisthevaluereturnedbythefunction.Afunctioncallconsistsofthefunctionnamefollowedbytheargumentsinparentheses.Whatyouwriteinthecallfortheargumentsareawkexpressions;eachtimethecallisexecuted,theseexpressionsareevaluated,andthevaluesaretheactualarguments.Forexample,hereisacalltofoowiththreearguments(thebeingastringconcatenation): Chapter12:Functions99foo(xy,"lose",4*z)Caution:whitespacecharacters(spacesandtabs)arenotallowedbetweenthefunctionnameandtheopen-parenthesisoftheargumentlist.Ifyouwritewhitespacebymistake,awkmightthinkthatyoumeantoconcatenateavariablewithanexpressioninparentheses.However,itnoticesthatyouusedafunctionnameandnotavariablename,andreportsanerror.Whenafunctioniscalled,itisgivenacopyofthevaluesofitsarguments.Thisiscalledcallbyvalue.Thecallermayuseavariableastheexpressionfortheargument,butthecalledfunctiondoesnotknowthis:itonlyknowswhatvaluetheargumenthad.Forexample,ifyouwritethiscode:foo="bar"z=myfunc(foo)thenyoushouldnotthinkoftheargumenttomyfuncasbeing\thevariablefoo."Instead,thinkoftheargumentasthestringvalue,"bar".Ifthefunctionmyfuncaltersthevaluesofitslocalvariables,thishasnoonanyothervariables.Inparticular,ifmyfuncdoesthis:functionmyfunc(win){printwinwin="zzz"printwin}tochangeitsargumentvariablewin,thisdoesnotchangethevalueoffoointhecaller.Theroleoffooincallingmyfuncendedwhenitsvalue,"bar",wascomputed.Ifwinalsoexistsoutsideofmyfunc,thefunctionbodycannotalterthisoutervalue,becauseitisshadowedduringtheexecutionofmyfuncandcannotbeseenorchangedfromthere.However,whenarraysaretheparameterstofunctions,theyarenotcopied.Instead,thearrayitselfismadeavailablefordirectmanipulationbythefunction.Thisisusuallycalledcallbyreference.Changesmadetoanarrayparameterinsidethebodyofafunctionarevisibleoutsidethatfunction.Thiscanbeverydangerousifyoudonotwatchwhatyouaredoing.Forexample:functionchangeit(array,ind,nvalue){array[ind]=nvalue}BEGIN{a[1]=1;a[2]=2;a[3]=3changeit(a,2,"two")printf"a[1]=%s,a[2]=%s,a[3]=%s\n",a[1],a[2],a[3]}prints`a[1]=1,a[2]=two,a[3]=3',becausecallingchangeitstores"two"inthesec-ondelementofa.12.4ThereturnStatement 100TheAWKManualThebodyofafunctioncancontainareturnstatement.Thisstatementreturnscontroltotherestoftheawkprogram.Itcanalsobeusedtoreturnavalueforuseintherestoftheawkprogram.Itlookslikethis:returnexpressionTheexpressionpartisoptional.Ifitisomitted,thenthereturnedvalueisand,therefore,unpredictable.AreturnstatementwithnovalueexpressionisassumedattheendofeveryfunctionSoifcontrolreachestheendofthefunctionbody,thenthefunctionreturnsanunpredictablevalue.awkwillnotwarnyouifyouusethereturnvalueofsuchafunction;youwillsimplygetunpredictableorunexpectedresults.Hereisanexampleofafunctionthatreturnsavalueforthelargestnumberamongtheelementsofanarray:functionmaxelt(vec,i,ret){for(iinvec){if(ret==""||vec[i]>ret)ret=vec[i]}returnret}Youcallmaxeltwithoneargument,whichisanarrayname.Thelocalvariablesiandretarenotintendedtobearguments;whilethereisnothingtostopyoufrompassingtwoorthreeargumentstomaxelt,theresultswouldbestrange.Theextraspacebeforeiinthefunctionparameterlististoindicatethatiandretarenotsupposedtobearguments.Thisisaconventionwhichyoushouldfollowwhenyoufunctions.Hereisaprogramthatusesourmaxeltfunction.Itloadsanarray,callsmaxelt,andthenreportsthemaximumnumberinthatarray:awk'functionmaxelt(vec,i,ret){for(iinvec){if(ret==""||vec[i]>ret)ret=vec[i]}returnret}#Loadallfieldsofeachrecordintonums.{for(i=1;i<=NF;i++)nums[NR,i]=$i}END{printmaxelt(nums)}'Giventhefollowinginput: Chapter12:Functions10115238164435282625629113962962100-6467998110199385110225ourprogramtellsus(predictably)that:99385isthelargestnumberinourarray. 102TheAWKManual Chapter13:Built-inVariables10313Built-inVariablesMostawkvariablesareavailableforyoutouseforyourownpurposes;theyneverchangeexceptwhenyourprogramassignsvaluestothem,andneveranythingexceptwhenyourprogramexaminesthem.Afewvariableshavespecialbuilt-inmeanings.Someofthemawkexaminesautomat-ically,sothattheyenableyoutotellawkhowtodocertainthings.Othersaresetauto-maticallybyawk,sothattheycarryinformationfromtheinternalworkingsofawktoyourprogram.Thischapterdocumentsallthebuilt-invariablesofawk.Mostofthemarealsodocu-mentedinthechapterswheretheirareasofactivityaredescribed.13.1Built-inVariablesthatControlawkThisisalistofthevariableswhichyoucanchangetocontrolhowawkdoescertainthings.CONVFMTThisstringisusedbyawktocontrolconversionofnumberstostrings(seeSection8.9[ConversionofStringsandNumbers],page66).Itworksbybeingpassed,inastheargumenttothesprintffunction.Itsdefaultvalueis"%.6g".CONVFMTwasintroducedbytheposixstandard.FSFSistheinputseparator(seeSection3.5[SpecifyinghowFieldsareSepa-rated],page25).Thevalueisasingle-characterstringoramulti-characterreg-ularexpressionthatmatchestheseparationsbetweeninaninputrecord.Thedefaultvalueis"",astringconsistingofasinglespace.Asaspecialexception,thisvalueactuallymeansthatanysequenceofspacesandtabsisasingleseparator.Italsocausesspacesandtabsatthebeginningorendofalinetobeignored.YoucansetthevalueofFSonthecommandlineusingthe`-F'option:awk-F,'program'OFMTThisstringisusedbyawktocontrolconversionofnumberstostrings(seeSection8.9[ConversionofStringsandNumbers],page66)forprintingwiththeprintstatement.Itworksbybeingpassed,inastheargumenttothesprintffunction.Itsdefaultvalueis"%.6g".EarlierversionsofawkalsousedOFMTtospecifytheformatforconvertingnumberstostringsingeneralexpressions;thishasbeentakenoverbyCONVFMT.OFSThisistheoutputseparator(seeSection4.3[OutputSeparators],page37).Itisoutputbetweentheoutputbyaprintstatement.Itsdefaultvalueis"",astringconsistingofasinglespace.ORSThisistheoutputrecordseparator.Itisoutputattheendofeveryprintstatement.Itsdefaultvalueisastringcontainingasinglenewlinecharacter,whichcouldbewrittenas"\n".(SeeSection4.3[OutputSeparators],page37.) 104TheAWKManualRSThisisawk'sinputrecordseparator.Itsdefaultvalueisastringcontainingasinglenewlinecharacter,whichmeansthataninputrecordconsistsofasinglelineoftext.(SeeSection3.1[HowInputisSplitintoRecords],page21.)SUBSEPSUBSEPisthesubscriptseparator.Ithasthedefaultvalueof"\034",andisusedtoseparatethepartsofthenameofamulti-dimensionalarray.Thus,ifyouaccessfoo[12,3],itreallyaccessesfoo["12\0343"](seeSection10.8[Multi-dimensionalArrays],page86).13.2Built-inVariablesthatConveyInformationThisisalistofthevariablesthataresetautomaticallybyawkoncertainoccasionssoastoprovideinformationtoyourprogram.ARGCARGVThecommand-lineargumentsavailabletoawkprogramsarestoredinanarraycalledARGV.ARGCisthenumberofcommand-lineargumentspresent.SeeChapter14[Invokingawk],page107.ARGVisindexedfromzerotoARGC-1.Forexample:awk'BEGIN{for(i=0;i<ARGC;i++)printARGV[i]}'inventory-shippedBBS-listInthisexample,ARGV[0]contains"awk",ARGV[1]contains"inventory-shipped",andARGV[2]contains"BBS-list".ThevalueofARGCis3,onemorethantheindexofthelastelementinARGVsincetheelementsarenum-beredfromzero.ThenamesARGCandARGV,aswelltheconventionofindexingthearrayfrom0toARGC-1,arederivedfromtheClanguage'smethodofaccessingcommandlinearguments.NoticethattheawkprogramisnotenteredinARGV.Theotherspecialcom-mandlineoptions,withtheirarguments,arealsonotentered.Butvariableassignmentsonthecommandlinearetreatedasarguments,anddoshowupintheARGVarray.YourprogramcanalterARGCandtheelementsofARGV.EachtimeawkreachestheendofaninputitusesthenextelementofARGVasthenameofthenextinputBystoringatstringthere,yourprogramcanchangewhichareread.Youcanuse"-"torepresentthestandardinput.BystoringadditionalelementsandincrementingARGCyoucancauseadditionaltoberead.IfyoudecreasethevalueofARGC,thateliminatesinputfromtheendofthelist.ByrecordingtheoldvalueofARGCelsewhere,yourprogramcantreattheeliminatedargumentsassomethingotherthannames.Toeliminateafromthemiddleofthelist,storethenullstring("")intoARGVinplaceofthename.Asaspecialfeature,awkignoresnamesthathavebeenreplacedwiththenullstring. Chapter13:Built-inVariables105ENVIRONThisisanarraythatcontainsthevaluesoftheenvironment.Thearrayindicesaretheenvironmentvariablenames;thevaluesarethevaluesoftheparticularenvironmentvariables.Forexample,ENVIRON["HOME"]mightbe`/u/close'.Changingthisarraydoesnottheenvironmentpassedontoanyprogramsthatawkmayspawnviaredirectionorthesystemfunction.Someoperatingsystemsmaynothaveenvironmentvariables.Onsuchsystems,thearrayENVIRONisempty.FILENAMEThisisthenameofthethatawkiscurrentlyreading.Ifawkisreadingfromthestandardinput(inotherwords,therearenolistedonthecommandline),FILENAMEissetto"-".FILENAMEischangedeachtimeanewisread(seeChapter3[ReadingInputFiles],page21).FNRFNRisthecurrentrecordnumberinthecurrentFNRisincrementedeachtimeanewrecordisread(seeSection3.7[ExplicitInputwithgetline],page29).Itisreinitializedto0eachtimeanewinputisstarted.NFNFisthenumberofinthecurrentinputrecord.NFisseteachtimeanewrecordisread,whenanewiscreated,orwhen$0changes(seeSection3.2[ExaminingFields],page22).NRThisisthenumberofinputrecordsawkhasprocessedsincethebeginningoftheprogram'sexecution.(seeSection3.1[HowInputisSplitintoRecords],page21).NRisseteachtimeanewrecordisread.RLENGTHRLENGTHisthelengthofthesubstringmatchedbythematchfunction(seeSection11.3[Built-inFunctionsforStringManipulation],page91).RLENGTHissetbyinvokingthematchfunction.Itsvalueisthelengthofthematchedstring,or1ifnomatchwasfound.RSTARTRSTARTisthestart-indexincharactersofthesubstringmatchedbythematchfunction(seeSection11.3[Built-inFunctionsforStringManipulation],page91).RSTARTissetbyinvokingthematchfunction.Itsvalueisthepositionofthestringwherethematchedsubstringstarts,or0ifnomatchwasfound. 106TheAWKManual Chapter14:Invokingawk10714InvokingawkTherearetwowaystorunawk:withanexplicitprogram,orwithoneormoreprogramHerearetemplatesforbothofthem;itemsenclosedin`[...]'inthesetemplatesareoptional.14.1CommandLineOptionsOptionsbeginwithaminussign,andconsistofasinglecharacter.Iftheoptiontakesanargument,thenthekeywordisimmediatelyfollowedbyanequalssign(`=')andtheargument'svalue.Forbrevity,thediscussionbelowonlyreferstothetraditionalshortoptions;howeverthelongandshortoptionsareinterchangeableinallcontexts.-FfsSetstheFSvariabletofs(seeSection3.5[SpecifyinghowFieldsareSeparated],page25).-fIndicatesthattheawkprogramistobefoundininsteadofinthenon-optionargument.-vvar=valSetsthevariablevartothevaluevalbeforeexecutionoftheprogrambegins.SuchvariablevaluesareavailableinsidetheBEGINrule(seebelowforafullerexplanation).The`-v'optioncanonlysetonevariable,butyoucanuseitmorethanonce,settinganothervariableeachtime,likethis:`-vfoo=1-vbar=2'.Anyotheroptionsareasinvalidwithawarningmessage,butareotherwiseignored.Ifthe`-f'optionisnotused,thenthenon-optioncommandlineargumentisexpectedtobetheprogramtext.The`-f'optionmaybeusedmorethanonceonthecommandline.Ifitis,awkreadsitsprogramsourcefromallofthenamedasiftheyhadbeenconcatenatedtogetherintoonebigThisisusefulforcreatinglibrariesofawkfunctions.Usefulfunctionscanbewrittenonce,andthenretrievedfromastandardplace,insteadofhavingtobeincludedintoeachindividualprogram.Youcanstilltypeinaprogramattheterminalanduselibraryfunctions,byspecifying`-f/dev/tty'.awkwillreadafromtheterminaltouseaspartoftheawkprogram.Aftertypingyourprogram,typeControl-d(thecharacter)toterminateit.(Youmayalsouse`-f-'toreadprogramsourcefromthestandardinput,butthenyouwillnotbeabletoalsousethestandardinputasasourceofdata.)14.2OtherCommandLineArgumentsAnyadditionalargumentsonthecommandlinearenormallytreatedasinputtobeprocessedintheorderspHowever,anargumentthathastheformvar=value,meanstoassignthevaluevaluetothevariablevar|itdoesnotspecifyaatall. 108TheAWKManualAlltheseargumentsaremadeavailabletoyourawkprogramintheARGVarray(seeChapter13[Built-inVariables],page103).Commandlineoptionsandtheprogramtext(ifpresent)areomittedfromtheARGVarray.Allotherarguments,includingvariableassign-ments,areincluded.Thedistinctionbetweennameargumentsandvariable-assignmentargumentsismadewhenawkisabouttoopenthenextinputAtthatpointinexecution,itchecksthename"toseewhetheritisreallyavariableassignment;ifso,awksetsthevariableinsteadofreadingaTherefore,thevariablesactuallyreceivethespvaluesafterallpreviouslysphavebeenread.Inparticular,thevaluesofvariablesassignedinthisfashionarenotavailableinsideaBEGINrule(seeSection6.7[BEGINandENDSpecialPatterns],page53),sincesuchrulesarerunbeforeawkbeginsscanningtheargumentlist.Thevaluesgivenonthecommandlineareprocessedforescapesequences(seeSection8.1[ConstantExpressions],page57).Insomeearlierimplementationsofawk,whenavariableassignmentoccurredbeforeanynames,theassignmentwouldhappenbeforetheBEGINrulewasexecuted.Someapplicationscametodependuponthis\feature."Whenawkwaschangedtobemoreconsistent,the`-v'optionwasaddedtoaccommodateapplicationsthatdependeduponthisoldbehavior.ThevariableassignmentfeatureismostusefulforassigningtovariablessuchasRS,OFS,andORS,whichcontrolinputandoutputformats,beforescanningthedataItisalsousefulforcontrollingstateifmultiplepassesareneededoveradataForexample:awk'pass==1{pass1}pass==2{pass2}'pass=1datafilepass=2datafileGiventhevariableassignmentfeature,the`-F'optionisnotstrictlynecessary.Itremainsforhistoricalcompatibility. AppendixA:awkSummary109AppendixAawkSummaryThisappendixprovidesabriefsummaryoftheawkcommandlineandtheawklanguage.Itisdesignedtoserveas\quickreference."Itisthereforeterse,butcomplete.A.1CommandLineOptionsSummaryThecommandlineconsistsofoptionstoawkitself,theawkprogramtext(ifnotsuppliedviathe`-f'option),andvaluestobemadeavailableintheARGCandARGVawkvariables:awk[options]-fsource-file[--]...awk[options][--]'program'...Theoptionsthatawkacceptsare:-FfsUsefsfortheinputseparator(thevalueoftheFSvariable).-fReadtheawkprogramsourcefromthe,insteadoffromthecommandlineargument.-vvar=valAssignthevariablevarthevaluevalbeforeprogramexecutionbegins.--Signaltheendofoptions.Thisisusefultoallowfurtherargumentstotheawkprogramitselftostartwitha`-'.Thisismainlyforconsistencywiththeargumentparsingconventionsofposix.Anyotheroptionsareasinvalid,butareotherwiseignored.SeeChapter14[Invokingawk],page107,formoredetails.A.2LanguageSummaryAnawkprogramconsistsofasequenceofpattern-actionstatementsandoptionalfunctionpattern{actionstatements}functionname(parameterlist){actionstatements}awkreadstheprogramsourcefromthe(s)ifsporfromthenon-optionargumentonthecommandline.The`-f'optionmaybeusedmultipletimesonthecommandline.awkreadstheprogramtextfromalltheelyconcatenatingthemintheordertheyarespThisisusefulforbuildinglibrariesofawkfunctions,withouthavingtoincludethemineachnewawkprogramthatusesthem.Tousealibraryfunctioninafromaprogramtypedinonthecommandline,specify`-f/dev/tty';thentypeyourprogram,andenditwithaControl-d.SeeChapter14[Invokingawk],page107. 110TheAWKManualawkcompilestheprogramintoaninternalform,andthenproceedstoreadeachnamedintheARGVarray.Iftherearenonamedonthecommandline,awkreadsthestandardinput.Ifanamedonthecommandlinehastheform`var=val',itistreatedasavariableassignment:thevariablevarisassignedthevalueval.Ifanyofthehaveavaluethatisthenullstring,thatelementinthelistisskipped.Foreachlineintheinput,awkteststoseeifitmatchesanypatternintheawkprogram.Foreachpatternthatthelinematches,theassociatedactionisexecuted.A.3VariablesandFieldsawkvariablesaredynamic;theycomeintoexistencewhentheyareused.Theirvaluesareeitherointnumbersorstrings.awkalsohasone-dimensionarrays;multiple-dimensionalarraysmaybesimulated.Thereareseveralvariablesthatawksetsasaprogramruns;thesearesummarizedbelow.A.3.1FieldsAseachinputlineisread,awksplitsthelineinto,usingthevalueoftheFSvariableastheseparator.IfFSisasinglecharacter,areseparatedbythatcharacter.Otherwise,FSisexpectedtobeafullregularexpression.InthespecialcasethatFSisasingleblank,areseparatedbyrunsofblanksand/ortabs.Eachintheinputlinemaybereferencedbyitsposition,$1,$2,andsoon.$0isthewholeline.Thevalueofamaybeassignedtoaswell.Fieldnumbersneednotbeconstants:n=5print$nprintstheintheinputline.ThevariableNFissettothetotalnumberofintheinputline.Referencestononexistent(i.e.,after$NF)returnthenull-string.However,assigningtoanonexistent(e.g.,$(NF+2)=5)increasesthevalueofNF,createsanyinterveningwiththenullstringastheirvalue,andcausesthevalueof$0toberecomputed,withthebeingseparatedbythevalueofOFS.SeeChapter3[ReadingInputFiles],page21,forafulldescriptionofthewayawkandusesA.3.2Built-inVariablesawk'sbuilt-invariablesare:ARGCThenumberofcommandlinearguments(notincludingoptionsortheawkprogramitself). AppendixA:awkSummary111ARGVThearrayofcommandlinearguments.Thearrayisindexedfrom0toARGC1.DynamicallychangingthecontentsofARGVcancontroltheusedfordata.CONVFMTTheconversionformattousewhenconvertingnumberstostrings.ENVIRONAnarraycontainingthevaluesoftheenvironmentvariables.Thearrayisindexedbyvariablename,eachelementbeingthevalueofthatvariable.Thus,theenvironmentvariableHOMEwouldbeinENVIRON["HOME"].Itsvaluemightbe`/u/close'.Changingthisarraydoesnottheenvironmentseenbyprogramswhichawkspawnsviaredirectionorthesystemfunction.Someoperatingsystemsdonothaveenvironmentvariables.ThearrayENVIRONisemptywhenrunningonthesesystems.FILENAMEThenameofthecurrentinputIfnoaresponthecommandline,thevalueofFILENAMEis`-'.FNRTheinputrecordnumberinthecurrentinputFSTheinputseparator,ablankbydefault.NFThenumberofinthecurrentinputrecord.NRThetotalnumberofinputrecordsseensofar.OFMTTheoutputformatfornumbersfortheprintstatement,"%.6g"bydefault.OFSTheoutputseparator,ablankbydefault.ORSTheoutputrecordseparator,bydefaultanewline.RSTheinputrecordseparator,bydefaultanewline.RSisexceptionalinthatonlythecharacterofitsstringvalueisusedforseparatingrecords.IfRSissettothenullstring,thenrecordsareseparatedbyblanklines.WhenRSissettothenullstring,thenthenewlinecharacteralwaysactsasaseparator,inadditiontowhatevervalueFSmayhave.RSTARTTheindexofthecharactermatchedbymatch;0ifnomatch.RLENGTHThelengthofthestringmatchedbymatch;1ifnomatch.SUBSEPThestringusedtoseparatemultiplesubscriptsinarrayelements,bydefault"\034".SeeChapter13[Built-inVariables],page103,formoreinformation.A.3.3ArraysArraysaresubscriptedwithanexpressionbetweensquarebrackets(`['and`]').Arraysubscriptsarealwaysstrings;numbersareconvertedtostringsasnecessary,followingthestandardconversionrules(seeSection8.9[ConversionofStringsandNumbers],page66). 112TheAWKManualIfyouusemultipleexpressionsseparatedbycommasinsidethesquarebrackets,thenthearraysubscriptisastringconsistingoftheconcatenationoftheindividualsubscriptvalues,convertedtostrings,separatedbythesubscriptseparator(thevalueofSUBSEP).Thespecialoperatorinmaybeusedinaniforwhilestatementtoseeifanarrayhasanindexconsistingofaparticularvalue.if(valinarray)printarray[val]Ifthearrayhasmultiplesubscripts,use(i,j,...)inarraytotestforexistenceofanelement.Theinconstructmayalsobeusedinaforlooptoiterateoveralltheelementsofanarray.SeeSection10.5[ScanningallElementsofanArray],page84.Anelementmaybedeletedfromanarrayusingthedeletestatement.SeeChapter10[Arraysinawk],page81,formoredetailedinformation.A.3.4DataTypesThevalueofanawkexpressionisalwayseitheranumberorastring.Certaincontexts(suchasarithmeticoperators)requirenumericvalues.Theyconvertstringstonumbersbyinterpretingthetextofthestringasanumeral.Ifthestringdoesnotlooklikeanumeral,itconvertsto0.Certaincontexts(suchasconcatenation)requirestringvalues.Theyconvertnumberstostringsbyelyprintingthemwithsprintf.SeeSection8.9[ConversionofStringsandNumbers],page66,forthedetails.Toforceconversionofastringvaluetoanumber,simplyadd0toit.Ifthevalueyoustartwithisalreadyanumber,thisdoesnotchangeit.Toforceconversionofanumericvaluetoastring,concatenateitwiththenullstring.Theawklanguagecomparisonsasbeingdonenumericallyifbothoperandsarenumeric,orifoneisnumericandtheotherisanumericstring.Otherwiseoneorbothoperandsareconvertedtostringsandastringcomparisonisperformed.Uninitializedvariableshavethestringvalue""(thenull,orempty,string).Incontextswhereanumberisrequired,thisisequivalentto0.SeeSection8.2[Variables],page59,formoreinformationonvariablenamingandinitial-ization;seeSection8.9[ConversionofStringsandNumbers],page66,formoreinformationonhowvariablevaluesareinterpreted.A.4PatternsandActionsAnawkprogramismostlycomposedofrules,eachconsistingofapatternfollowedbyanaction.Theactionisenclosedin`{'and`}'.Eitherthepatternmaybemissing,ortheactionmaybemissing,but,ofcourse,notboth.Ifthepatternismissing,theactionisexecutedforeverysinglelineofinput.Amissingactionisequivalenttothisaction, AppendixA:awkSummary113{print}whichprintstheentireline.Commentsbeginwiththe`#'character,andcontinueuntiltheendoftheline.Blanklinesmaybeusedtoseparatestatements.Normally,astatementendswithanewline,however,thisisnotthecaseforlinesendingina`,',`{',`?',`:',`&&',or`||'.Linesendingindoorelsealsohavetheirstatementsautomaticallycontinuedonthefollowingline.Inothercases,alinecanbecontinuedbyendingitwitha`\',inwhichcasethenewlineisignored.Multiplestatementsmaybeputononelinebyseparatingthemwitha`;'.Thisappliestoboththestatementswithintheactionpartofarule(theusualcase),andtotherulestatements.SeeSection2.5[CommentsinawkPrograms],page18,forinformationonawk'scom-mentingconvention;seeSection2.6[awkStatementsversusLines],page18,foradescriptionofthelinecontinuationmechanisminawk.A.4.1Patternsawkpatternsmaybeoneofthefollowing:/regularexpression/relationalexpressionpattern&&patternpattern||patternpattern?pattern:pattern(pattern)!patternpattern1,pattern2BEGINENDBEGINandENDaretwospecialkindsofpatternsthatarenottestedagainsttheinput.TheactionpartsofallBEGINrulesaremergedasifallthestatementshadbeenwritteninasingleBEGINrule.Theyareexecutedbeforeanyoftheinputisread.Similarly,alltheENDrulesaremerged,andexecutedwhenalltheinputisexhausted(orwhenanexitstatementisexecuted).BEGINandENDpatternscannotbecombinedwithotherpatternsinpatternexpressions.BEGINandENDrulescannothavemissingactionparts.For`/regular-expression/'patterns,theassociatedstatementisexecutedforeachinputlinethatmatchestheregularexpression.Regularexpressionsareextensionsofthoseinegrep,andaresummarizedbelow.Arelationalexpressionmayuseanyoftheoperatorsbelowinthesectiononactions.Thesegenerallytestwhethercertainmatchcertainregularexpressions.The`&&',`||',and`!'operatorsarelogical\and,"logical\or,"andlogical\not,"respec-tively,asinC.Theydoshort-circuitevaluation,alsoasinC,andareusedforcombiningmoreprimitivepatternexpressions.Asinmostlanguages,parenthesesmaybeusedtochangetheorderofevaluation. 114TheAWKManualThe`?:'operatorislikethesameoperatorinC.Ifthepatternmatches,thenthesecondpatternismatchedagainsttheinputrecord;otherwise,thethirdismatched.Onlyoneofthesecondandthirdpatternsismatched.The`pattern1,pattern2'formofapatterniscalledarangepattern.Itmatchesallinputlinesstartingwithalinethatmatchespattern1,andcontinuinguntilalinethatmatchespattern2,inclusive.Arangepatterncannotbeusedasanoperandtoanyofthepatternoperators.SeeChapter6[Patterns],page47,forafulldescriptionofthepatternpartofawkrules.A.4.2RegularExpressionsRegularexpressionsaretheextendedkindfoundinegrep.Theyarecomposedofchar-actersasfollows:cmatchesthecharacterc(assumingcisacharacterwithnospecialmeaninginregexps).\cmatchestheliteralcharacterc..matchesanycharacterexceptnewline.^matchesthebeginningofalineorastring.$matchestheendofalineorastring.[abc...]matchesanyofthecharactersabc...(characterclass).[^abc...]matchesanycharacterexceptabc...andnewline(negatedcharacterclass).r1|r2matcheseitherr1orr2(alternation).r1r2matchesr1,andthenr2(concatenation).r+matchesoneormorer's.r*matcheszeroormorer's.r?matcheszerooroner's.(r)matchesr(grouping).SeeSection6.2[RegularExpressionsasPatterns],page47,foramoredetailedexplana-tionofregularexpressions.Theescapesequencesallowedinstringconstantsarealsovalidinregularexpressions(seeSection8.1[ConstantExpressions],page57).A.4.3ActionsActionstatementsareenclosedinbraces,`{'and`}'.Actionstatementsconsistoftheusualassignment,conditional,andloopingstatementsfoundinmostlanguages.Theoperators,controlstatements,andinput/outputstatementsavailablearepatternedafterthoseinC. AppendixA:awkSummary115A.4.3.1OperatorsTheoperatorsinawk,inorderofincreasingprecedence,are:=+=-=*=/=%=^=Assignment.Bothabsoluteassignment(var=value)andoperatorassignment(theotherforms)aresupported.?:Aconditionalexpression,asinC.Thishastheformexpr1?expr2:expr3.Ifexpr1istrue,thevalueoftheexpressionisexpr2;otherwiseitisexpr3.Onlyoneofexpr2andexpr3isevaluated.||Logical\or".&&Logical\and".~!~Regularexpressionmatch,negatedmatch.<<=>>=!===Theusualrelationaloperators.blankStringconcatenation.+-Additionandsubtraction.*/%Multiplication,division,andmodulus.+-!Unaryplus,unaryminus,andlogicalnegation.^Exponentiation(`**'mayalsobeused,and`**='fortheassignmentoperator,buttheyarenotspintheposixstandard).++--Incrementanddecrement,bothandp$Fieldreference.SeeChapter8[ExpressionsasActionStatements],page57,forafulldescriptionofalltheoperatorslistedabove.SeeSection3.2[ExaminingFields],page22,foradescriptionofthereferenceoperator.A.4.3.2ControlStatementsThecontrolstatementsareasfollows:if(condition)statement[elsestatement]while(condition)statementdostatementwhile(condition)for(expr1;expr2;expr3)statementfor(varinarray)statementbreakcontinuedeletearray[index]exit[expression]{statements}SeeChapter9[ControlStatementsinActions],page73,forafulldescriptionofallthecontrolstatementslistedabove. 116TheAWKManualA.4.3.3I/OStatementsTheinput/outputstatementsareasfollows:getlineSet$0fromnextinputrecord;setNF,NR,FNR.getline<Set$0fromnextrecordof;setNF.getlinevarSetvarfromnextinputrecord;setNF,FNR.getlinevar<Setvarfromnextrecordof.nextStopprocessingthecurrentinputrecord.Thenextinputrecordisreadandprocessingstartsoverwiththepatternintheawkprogram.Iftheendoftheinputdataisreached,theENDrule(s),ifany,areexecuted.printPrintsthecurrentrecord.printexpr-listPrintsexpressions.printexpr-list>Printsexpressionson.printffmt,expr-listFormatandprint.printffmt,expr-list>fileFormatandprinton.Otherinput/outputredirectionsarealsoallowed.Forprintandprintf,`>>'ap-pendsoutputtothe,and`|command'writesonapipe.Inasimilarfashion,`command|getline'pipesinputintogetline.getlinereturns0onendofand1onanerror.SeeSection3.7[ExplicitInputwithgetline],page29,forafulldescriptionofthegetlinestatement.SeeChapter4[PrintingOutput],page35,forafulldescriptionofprintandprintf.Finally,seeSection9.7[ThenextStatement],page78,foradescriptionofhowthenextstatementworks.A.4.3.4printfSummaryTheawkprintfstatementandsprintffunctionacceptthefollowingconversionspeci-formats:%cAnASCIIcharacter.Iftheargumentusedfor`%c'isnumeric,itistreatedasacharacterandprinted.Otherwise,theargumentisassumedtobeastring,andtheonlycharacterofthatstringisprinted.%d%iAdecimalnumber(theintegerpart). AppendixA:awkSummary117%eApointnumberoftheform`[-]d.ddddddE[+-]dd'.%fApointnumberoftheform[-]ddd.dddddd.%gUse`%e'or`%f'conversion,whicheverproducesashorterstring,withnonsignif-icantzerossuppressed.%oAnunsignedoctalnumber(again,aninteger).%sAcharacterstring.%xAnunsignedhexadecimalnumber(aninteger).%XLike`%x',exceptuse`A'through`F'insteadof`a'through`f'fordecimal10through15.%%Asingle`%'character;noargumentisconverted.Thereareoptional,additionalparametersthatmayliebetweenthe`%'andthecontrolletter:-TheexpressionshouldbewithinitswidthTheshouldbepaddedtothiswidth.Ifwidthhasaleadingzero,thentheispaddedwithzeros.Otherwiseitispaddedwithblanks..precAnumberindicatingthemaximumwidthofstringsordigitstotherightofthedecimalpoint.Eitherorbothofthewidthandprecvaluesmaybespas`*'.Inthatcase,theparticularvalueistakenfromtheargumentlist.SeeSection4.5[UsingprintfStatementsforFancierPrinting],page38,forexamplesandforamoredetaileddescription.A.4.3.5NumericFunctionsawkhasthefollowingarithmeticfunctions:atan2(y,x)returnsthearctangentofy/xinradians.cos(expr)returnsthecosineinradians.exp(expr)theexponentialfunction.int(expr)truncatestointeger.log(expr)thenaturallogarithmfunction.rand()returnsarandomnumberbetween0and1.sin(expr)returnsthesineinradians.sqrt(expr)thesquarerootfunction.srand(expr)useexprasanewseedfortherandomnumbergenerator.Ifnoexprisprovided,thetimeofdayisused.Thereturnvalueisthepreviousseedfortherandomnumbergenerator. 118TheAWKManualA.4.3.6StringFunctionsawkhasthefollowingstringfunctions:gsub(r,s,t)foreachsubstringmatchingtheregularexpressionrinthestringt,substitutethestrings,andreturnthenumberofsubstitutions.Iftisnotsupplied,use$0.index(s,t)returnstheindexofthestringtinthestrings,or0iftisnotpresent.length(s)returnsthelengthofthestrings.Thelengthof$0isreturnedifnoargumentissupplied.match(s,r)returnsthepositioninswheretheregularexpressionroccurs,or0ifrisnotpresent,andsetsthevaluesofRSTARTandRLENGTH.split(s,a,r)splitsthestringsintothearrayaontheregularexpressionr,andreturnsthenumberofIfrisomitted,FSisusedinstead.sprintf(fmt,expr-list)printsexpr-listaccordingtofmt,andreturnstheresultingstring.sub(r,s,t)thisisjustlikegsub,butonlythematchingsubstringisreplaced.substr(s,i,n)returnsthen-charactersubstringofsstartingati.Ifnisomitted,therestofsisused.tolower(str)returnsacopyofthestringstr,withalltheupper-casecharactersinstrtrans-latedtotheircorrespondinglower-casecounterparts.Nonalphabeticcharactersareleftunchanged.toupper(str)returnsacopyofthestringstr,withallthelower-casecharactersinstrtrans-latedtotheircorrespondingupper-casecounterparts.Nonalphabeticcharactersareleftunchanged.system(cmd-line)Executethecommandcmd-line,andreturntheexitstatus.A.4.3.7StringConstantsStringconstantsinawkaresequencesofcharactersenclosedbetweendoublequotes(").Withinstrings,certainescapesequencesarerecognized,asinC.Theseare: AppendixA:awkSummary119\\Aliteralbackslash.\aThe\alert"character;usuallytheASCIIBELcharacter.\bBackspace.\fFormfeed.\nNewline.\rCarriagereturn.\tHorizontaltab.\vVerticaltab.\xhexdigitsThecharacterrepresentedbythestringofhexadecimaldigitsfollowingthe`\x'.AsinansiC,allfollowinghexadecimaldigitsareconsideredpartoftheescapesequence.(Thisfeatureshouldtellussomethingaboutlanguagedesignbycommittee.)E.g.,"\x1B"isastringcontainingtheASCIIESC(escape)character.(The`\x'escapesequenceisnotinposixawk.)\dddThecharacterrepresentedbythe1-,2-,or3-digitsequenceofoctaldigits.Thus,"\033"isalsoastringcontainingtheASCIIESC(escape)character.\cTheliteralcharacterc.Theescapesequencesmayalsobeusedinsideconstantregularexpressions(e.g.,theregexp/[\t\f\n\r\v]/matcheswhitespacecharacters).SeeSection8.1[ConstantExpressions],page57.A.5FunctionsFunctionsinawkareasfollows:functionname(parameterlist){statements}Actualparameterssuppliedinthefunctioncallareusedtoinstantiatetheformalparam-etersdeclaredinthefunction.Arraysarepassedbyreference,othervariablesarepassedbyvalue.Iftherearefewerargumentspassedthantherearenamesinparameter-list,theextranamesaregiventhenullstringasvalue.Extranameshavetheoflocalvariables.Theopen-parenthesisinafunctioncallofafunctionmustimmediatelyfollowthefunctionname,withoutanyinterveningwhitespace.Thisistoavoidasyntacticambiguitywiththeconcatenationoperator.Thewordfuncmaybeusedinplaceoffunction(butnotinposixawk).Usethereturnstatementtoreturnavaluefromafunction.SeeChapter12Functions],page97,foramorecompletedescription. 120TheAWKManual AppendixB:SampleProgram121AppendixBSampleProgramThefollowingexampleisacompleteawkprogram,whichprintsthenumberofoccur-rencesofeachwordinitsinput.Itillustratestheassociativenatureofawkarraysbyusingstringsassubscripts.Italsodemonstratesthe`forxinarray'construction.Finally,itshowshowawkcanbeusedinconjunctionwithotherutilityprogramstodoausefultaskofsomecomplexitywithaminimumofSomeexplanationsfollowtheprogramlisting.awk'#Printlistofwordfrequencies{for(i=1;i<=NF;i++)freq[$i]++}END{for(wordinfreq)printf"%s\t%d\n",word,freq[word]}'Thethingtonoticeaboutthisprogramisthatithastworules.Therule,becauseithasanemptypattern,isexecutedoneverylineoftheinput.Itusesawk'smechanism(seeSection3.2[ExaminingFields],page22)topickouttheindividualwordsfromtheline,andthebuilt-invariableNF(seeChapter13[Built-inVari-ables],page103)toknowhowmanyareavailable.Foreachinputword,anelementofthearrayfreqisincrementedtothatthewordhasbeenseenanadditionaltime.Thesecondrule,becauseithasthepatternEND,isnotexecuteduntiltheinputhasbeenexhausted.Itprintsoutthecontentsofthefreqtablethathasbeenbuiltupinsidetheaction.NotethatthisprogramhasseveralproblemsthatwouldpreventitfrombeingusefulbyitselfonrealtextWordsaredetectedusingtheawkconventionthatareseparatedbywhitespaceandthatothercharactersintheinput(exceptnewlines)don'thaveanyspecialmeaningtoawk.Thismeansthatpunctuationcharacterscountaspartofwords.Theawklanguageconsidersupperandlowercasecharacterstobedistinct.Therefore,`foo'and`Foo'arenottreatedbythisprogramasthesameword.Thisisundesirablesinceinnormaltext,wordsarecapitalizediftheybeginsentences,andafrequencyanalyzershouldnotbesensitivetothat.Theoutputdoesnotcomeoutinanyusefulorder.You'remorelikelytobeinterestedinwhichwordsoccurmostfrequently,orhavinganalphabetizedtableofhowfrequentlyeachwordoccurs.Thewaytosolvetheseproblemsistousesomeofthemoreadvancedfeaturesoftheawklanguage.First,weusetolowertoremovecasedistinctions.Next,weusegsubtoremovepunctuationcharacters.Finally,weusethesystemsortutilitytoprocesstheoutputoftheawkscript.First,hereisthenewversionoftheprogram: 122TheAWKManualawk'#Printlistofwordfrequencies{$0=tolower($0)#removecasedistinctionsgsub(/[^a-z0-9_\t]/,"",$0)#removepunctuationfor(i=1;i<=NF;i++)freq[$i]++}END{for(wordinfreq)printf"%s\t%d\n",word,freq[word]}'Assumingwehavesavedthisprograminanamed`frequency.awk',andthatthedataisin`file1',thefollowingpipelineawk-ffrequency.awkfile1|sort+1-nrproducesatableofthewordsappearingin`file1'inorderofdecreasingfrequency.Theawkprogramsuitablymassagesthedataandproducesawordfrequencytable,whichisnotordered.Theawkscript'soutputisthensortedbythesortcommandandprintedontheterminal.Theoptionsgiventosortinthisexamplespecifytosortusingthesecondofeachinputline(skippingonethatthesortkeysshouldbetreatedasnumericquantities(otherwise`15'wouldcomebefore`5'),andthatthesortingshouldbedoneindescending(reverse)order.Wecouldhaveevendonethesortfromwithintheprogram,bychangingtheENDactionto:END{sort="sort+1-nr"for(wordinfreq)printf"%s\t%d\n",word,freq[word]|sortclose(sort)}'Seethegeneraloperatingsystemdocumentationformoreinformationonhowtousethesortcommand. AppendixC:Glossary123AppendixCGlossaryActionAseriesofawkstatementsattachedtoarule.Iftherule'spatternmatchesaninputrecord,theawklanguageexecutestherule'saction.Actionsarealwaysenclosedincurlybraces.SeeChapter7[OverviewofActions],page55.AmazingawkAssemblerHenrySpencerattheUniversityofTorontowrotearetargetableassemblercompletelyasawkscripts.Itisthousandsoflineslong,includingmachinedescriptionsforseveral8-bitmicrocomputers.Itisagoodexampleofaprogramthatwouldhavebeenbetterwritteninanotherlanguage.ansiTheAmericanNationalStandardsInstitute.Thisorganizationproducesmanystandards,amongthemthestandardfortheCprogramminglanguage.AssignmentAnawkexpressionthatchangesthevalueofsomeawkvariableordataobject.Anobjectthatyoucanassigntoiscalledanlvalue.SeeSection8.7[AssignmentExpressions],page64.awkLanguageThelanguageinwhichawkprogramsarewritten.awkProgramAnawkprogramconsistsofaseriesofpatternsandactions,collectivelyknownasrules.Foreachinputrecordgiventotheprogram,theprogram'srulesareallprocessedinturn.awkprogramsmayalsocontainfunctionawkScriptAnothernameforanawkprogram.Built-inFunctionTheawklanguageprovidesbuilt-infunctionsthatperformvariousnumerical,timestamprelated,andstringcomputations.Examplesaresqrt(forthesquarerootofanumber)andsubstr(forasubstringofastring).SeeChapter11[Built-inFunctions],page89.Built-inVariableARGC,ARGV,CONVFMT,ENVIRON,FILENAME,FNR,FS,NF,NR,OFMT,OFS,ORS,RLENGTH,RSTART,RS,andSUBSEP,arethevariablesthathavespecialmean-ingtoawk.Changingsomeofthemawk'srunningenvironment.SeeChapter13[Built-inVariables],page103.BracesSee\CurlyBraces."CThesystemprogramminglanguagethatmostGNUsoftwareiswrittenin.TheawkprogramminglanguagehasC-likesyntax,andthismanualpointsoutsim-ilaritiesbetweenawkandCwhenappropriate.CHEMApreprocessorforpicthatreadsdescriptionsofmoleculesandproducespicinputfordrawingthem.ItwaswrittenbyBrianKernighan,andisavailablefromnetlib@research.att.com. 124TheAWKManualCompoundStatementAseriesofawkstatements,enclosedincurlybraces.Compoundstatementsmaybenested.SeeChapter9[ControlStatementsinActions],page73.ConcatenationConcatenatingtwostringsmeansstickingthemtogether,oneafteranother,givinganewstring.Forexample,thestring`foo'concatenatedwiththestring`bar'givesthestring`foobar'.SeeSection8.4[StringConcatenation],page61.ConditionalExpressionAnexpressionusingthe`?:'ternaryoperator,suchasexpr1?expr2:expr3.Theexpressionexpr1isevaluated;iftheresultistrue,thevalueofthewholeexpressionisthevalueofexpr2otherwisethevalueisexpr3.Ineithercase,onlyoneofexpr2andexpr3isevaluated.SeeSection8.11[ConditionalExpressions],page68.ConstantRegularExpressionAconstantregularexpressionisaregularexpressionwrittenwithinslashes,suchas`/foo/'.Thisregularexpressionischosenwhenyouwritetheawkprogram,andcannotbechangeddoingitsexecution.SeeSection6.2.1[HowtoUseRegularExpressions],page47.ComparisonExpressionArelationthatiseithertrueorfalse,suchas(a<b).Comparisonexpressionsareusedinif,while,andforstatements,andinpatternstoselectwhichinputrecordstoprocess.SeeSection8.5[ComparisonExpressions],page61.CurlyBracesThecharacters`{'and`}'.Curlybracesareusedinawkfordelimitingactions,compoundstatements,andfunctionbodies.DataObjectsThesearenumbersandstringsofcharacters.Numbersareconvertedintostringsandviceversa,asneeded.SeeSection8.9[ConversionofStringsandNumbers],page66.DynamicRegularExpressionAdynamicregularexpressionisaregularexpressionwrittenasanordinaryexpression.Itcouldbeastringconstant,suchas"foo",butitmayalsobeanexpressionwhosevaluemayvary.SeeSection6.2.1[HowtoUseRegularExpressions],page47.EscapeSequencesAspecialsequenceofcharactersusedfordescribingnonprintingcharacters,suchas`\n'fornewline,or`\033'fortheASCIIESC(escape)character.SeeSection8.1[ConstantExpressions],page57.FieldWhenawkreadsaninputrecord,itsplitstherecordintopiecesseparatedbywhitespace(orbyaseparatorregexpwhichyoucanchangebysettingthebuilt-invariableFS).SuchpiecesarecalledSeeSection3.1[HowInputisSplitintoRecords],page21. AppendixC:Glossary125FormatFormatstringsareusedtocontroltheappearanceofoutputintheprintfstatement.Also,dataconversionsfromnumberstostringsarecontrolledbytheformatstringcontainedinthebuilt-invariableCONVFMT.SeeSection4.5.2[Format-ControlLetters],page38.FunctionAspecializedgroupofstatementsoftenusedtoencapsulategeneralorprogram-sptasks.awkhasanumberofbuilt-infunctions,andalsoallowsyoutoyourown.SeeChapter11[Built-inFunctions],page89.Also,seeChapter12Functions],page97.gawkTheGNUimplementationofawk.GNU\GNU'snotUnix".Anon-goingprojectoftheFreeSoftwareFoundationtocre-ateacomplete,freelydistributable,posix-compliantcomputingenvironment.InputRecordAsinglechunkofdatareadinbyawk.Usually,anawkinputrecordconsistsofonelineoftext.SeeSection3.1[HowInputisSplitintoRecords],page21.KeywordIntheawklanguage,akeywordisawordthathasspecialmeaning.Keywordsarereservedandmaynotbeusedasvariablenames.awk'skeywordsare:if,else,while,do...while,for,for...in,break,continue,delete,next,function,func,andexit.LvalueAnexpressionthatcanappearontheleftsideofanassignmentoperator.Inmostlanguages,lvaluescanbevariablesorarrayelements.Inawk,adesignatorcanalsobeusedasanlvalue.NumberAnumericvalueddataobject.Theawkimplementationusesdoubleprecisionpointtorepresentnumbers.PatternPatternstellawkwhichinputrecordsareinterestingtowhichrules.Apatternisanarbitraryconditionalexpressionagainstwhichinputistested.Iftheconditionisthepatternissaidtomatchtheinputrecord.Atypicalpatternmightcomparetheinputrecordagainstaregularexpression.SeeChapter6[Patterns],page47.posixThenameforaseriesofstandardsbeingdevelopedbytheieeethatspecifyaPortableOperatingSysteminterface.The\IX"denotestheUnixheritageofthesestandards.ThemainstandardofinterestforawkusersisP1003.2,theCommandLanguageandUtilitiesstandard.Range(ofinputlines)AsequenceofconsecutivelinesfromtheinputApatterncanspecifyrangesofinputlinesforawktoprocess,oritcanspecifysinglelines.SeeChapter6[Patterns],page47.RecursionWhenafunctioncallsitself,eitherdirectlyorindirectly.Ifthisisn'tclear,refertotheentryfor\recursion."RedirectionRedirectionmeansperforminginputfromotherthanthestandardinputstream,oroutputtootherthanthestandardoutputstream. 126TheAWKManualYoucanredirecttheoutputoftheprintandprintfstatementstoaorasystemcommand,usingthe`>',`>>',and`|'operators.Youcanredirectinputtothegetlinestatementusingthe`<'and`|'operators.SeeSection4.6[RedirectingOutputofprintandprintf],page41.RegularExpressionSee\regexp."RegexpShortforregularexpression.Aregexpisapatternthatdenotesasetofstrings,possiblyanset.Forexample,theregexp`R.*xp'matchesanystringstartingwiththeletter`R'andendingwiththeletters`xp'.Inawk,regexpsareusedinpatternsandinconditionalexpressions.Regexpsmaycontainescapesequences.SeeSection6.2[RegularExpressionsasPatterns],page47.RuleAsegmentofanawkprogram,thatsphowtoprocesssingleinputrecords.Aruleconsistsofapatternandanaction.awkreadsaninputrecord;then,foreachrule,iftheinputrecordtherule'spattern,awkexecutestherule'saction.Otherwise,theruledoesnothingforthatinputrecord.SideAsideoccurswhenanexpressionhasanasidefrommerelyproduc-ingavalue.Assignmentexpressions,incrementexpressionsandfunctioncallshavesideSeeSection8.7[AssignmentExpressions],page64.SpecialFileAnameinterpretedinternallybyawk,insteadofbeinghandeddirectlytotheunderlyingoperatingsystem.Forexample,`/dev/stdin'.SeeSection4.7[StandardI/OStreams],page43.StreamEditorAprogramthatreadsrecordsfromaninputstreamandprocessesthemoneormoreatatime.Thisisincontrastwithbatchprograms,whichmayexpecttoreadtheirinputinentiretybeforestartingtodoanything,andwithinteractiveprograms,whichrequireinputfromtheuser.StringAdatumconsistingofasequenceofcharacters,suchas`Iamastring'.Con-stantstringsarewrittenwithdouble-quotesintheawklanguage,andmaycontainescapesequences.SeeSection8.1[ConstantExpressions],page57.WhitespaceAsequenceofblankortabcharactersoccurringinsideaninputrecordorastring. Index127Index(Indexisnonexistent) 128TheAWKManual iShortContentsPreface.........................................1GNUGENERALPUBLICLICENSE....................31UsingthisManual..............................112GettingStartedwithawk........................133ReadingInputFiles.............................214PrintingOutput...............................355Useful\One-liners".............................456Patterns....................................477OverviewofActions............................558ExpressionsasActionStatements...................579ControlStatementsinActions.....................7310Arraysinawk................................8111Built-inFunctions..............................8912Functions...........................9713Built-inVariables.............................10314Invokingawk................................107AppendixAawkSummary.........................109AppendixBSampleProgram.......................121AppendixCGlossary.............................123Index.........................................127 iiTheAWKManual iiiTableofContentsPreface.......................................1Historyofawk...............................................1GNUGENERALPUBLICLICENSE..........3Preamble....................................................3TERMSANDCONDITIONSFORCOPYING,DISTRIBUTIONANDMODIFICATION..................................4HowtoApplyTheseTermstoYourNewPrograms.............81UsingthisManual........................111.1DataFilesfortheExamples.............................112GettingStartedwithawk..................132.1AVerySimpleExample................................132.2AnExamplewithTwoRules............................142.3AMoreComplexExample..............................152.4HowtoRunawkPrograms..............................152.4.1One-shotThrow-awayawkPrograms............162.4.2RunningawkwithoutInputFiles...............162.4.3RunningLongPrograms.......................172.4.4ExecutableawkPrograms......................172.5CommentsinawkPrograms.............................182.6awkStatementsversusLines............................182.7WhentoUseawk.......................................193ReadingInputFiles.......................213.1HowInputisSplitintoRecords.........................213.2ExaminingFields......................................223.3Non-constantFieldNumbers............................233.4ChangingtheContentsofaField........................233.5SpecifyinghowFieldsareSeparated.....................253.6Multiple-LineRecords..................................283.7ExplicitInputwithgetline............................293.8ClosingInputFilesandPipes...........................33 ivTheAWKManual4PrintingOutput..........................354.1TheprintStatement...................................354.2ExamplesofprintStatements..........................354.3OutputSeparators.....................................374.4ControllingNumericOutputwithprint.................374.5UsingprintfStatementsforFancierPrinting............384.5.1IntroductiontotheprintfStatement...........384.5.2Format-ControlLetters........................384.5.3MoforprintfFormats...................394.5.4ExamplesofUsingprintf.....................404.6RedirectingOutputofprintandprintf................414.6.1RedirectingOutputtoFilesandPipes..........414.6.2ClosingOutputFilesandPipes.................424.7StandardI/OStreams..................................435Useful\One-liners".......................456Patterns.................................476.1KindsofPatterns......................................476.2RegularExpressionsasPatterns.........................476.2.1HowtoUseRegularExpressions................476.2.2RegularExpressionOperators..................486.2.3Case-sensitivityinMatching....................506.3ComparisonExpressionsasPatterns.....................516.4BooleanOperatorsandPatterns.........................526.5ExpressionsasPatterns.................................526.6SpecifyingRecordRangeswithPatterns.................536.7BEGINandENDSpecialPatterns.........................536.8TheEmptyPattern....................................547OverviewofActions......................558ExpressionsasActionStatements..........578.1ConstantExpressions...................................578.2Variables..............................................598.2.1AssigningVariablesontheCommandLine......598.3ArithmeticOperators...................................608.4StringConcatenation...................................618.5ComparisonExpressions................................618.6BooleanExpressions....................................638.7AssignmentExpressions................................648.8IncrementOperators...................................658.9ConversionofStringsandNumbers......................668.10NumericandStringValues.............................678.11ConditionalExpressions...............................688.12FunctionCalls........................................698.13OperatorPrecedence(HowOperatorsNest).............70 v9ControlStatementsinActions.............739.1TheifStatement......................................739.2ThewhileStatement...................................749.3Thedo-whileStatement................................749.4TheforStatement.....................................759.5ThebreakStatement...................................769.6ThecontinueStatement...............................779.7ThenextStatement....................................789.8TheexitStatement....................................7910Arraysinawk............................8110.1IntroductiontoArrays.................................8110.2ReferringtoanArrayElement.........................8210.3AssigningArrayElements..............................8310.4BasicExampleofanArray.............................8310.5ScanningallElementsofanArray......................8410.6ThedeleteStatement................................8510.7UsingNumberstoSubscriptArrays....................8510.8Multi-dimensionalArrays..............................8610.9ScanningMulti-dimensionalArrays.....................8711Built-inFunctions.......................8911.1CallingBuilt-inFunctions..............................8911.2NumericBuilt-inFunctions............................8911.3Built-inFunctionsforStringManipulation..............9011.4Built-inFunctionsforInput/Output....................9412Functions...................9712.1SyntaxofFunction.........................9712.2FunctionExample...........................9812.3CallingFunctions.........................9812.4ThereturnStatement................................9913Built-inVariables.......................10313.1Built-inVariablesthatControlawk....................10313.2Built-inVariablesthatConveyInformation.............10414Invokingawk............................10714.1CommandLineOptions..............................10714.2OtherCommandLineArguments.....................107 viTheAWKManualAppendixAawkSummary.................109A.1CommandLineOptionsSummary.....................109A.2LanguageSummary...................................109A.3VariablesandFields..................................110A.3.1Fields.......................................110A.3.2Built-inVariables............................110A.3.3Arrays......................................111A.3.4DataTypes..................................112A.4PatternsandActions.................................112A.4.1Patterns.....................................113A.4.2RegularExpressions..........................114A.4.3Actions.....................................114A.4.3.1Operators...........................115A.4.3.2ControlStatements..................115A.4.3.3I/OStatements.....................116A.4.3.4printfSummary....................116A.4.3.5NumericFunctions..................117A.4.3.6StringFunctions.....................118A.4.3.7StringConstants....................118A.5Functions............................................119AppendixBSampleProgram..............121AppendixCGlossary......................123Index......................................127
50b44f285fa7351b70000118 ## Datos Generales **Nombre:** Manuel Isidro Martin Ortiz **Categoria:** Profesor Investigador Titular "B", Tiempo Completo, FCC-BUAP **Grado: ** Doctor en Ciencias - Fisica, Instituto de Fisica / UAP **Fecha de Ingreso BUAP: **Diciembre de 1978 ## Areas de Actividad Docente * Licenciatura en Ciencias de la Computacion * Ingenieria en Ciencias de la Computacion * Maestria en Ciencias de la Computacion * Diplomados de la F.C.C. ## Areas de Interes: * Procesamiento Digital de Imagenes * Graficado por Computadora * Aplicaciones de la Computacion en las Ciencias Medicas * Procesamiento Paralelo y Distribuido * Sistemas Especializados para Ciencias Naturales y Exactas ## Cargos Administrativos Actuales * Corresponsable del Area de Servicios de Red de la F.C.C. * Corresponsable de la Biblioteca Especializada "Alejandro Reyes Cristiani" de la F.C.C. * Responsable de la "Olimpiada Mexicana de Informatica" a Nivel Estatal (Puebla) * Responsable del Cuerpo Academico de "Sistemas Distribuidos" - F.C.C. * Miembro de la Comision de Tesis de la F.C.C. ## Resumen Curricular * Miembro de la American Computer Machinery (ACM) * Experiencia como profesor desde 1978 en la ensenanza superior * Diversas conferencias cientificas impartidas a nivel nacional e internacional * Diversas conferencias de divulgacion impartidas a nivel local * 37 publicaciones Nacionales y Locales * 15 publicaciones internacionales arbitradas ## Relacion de Articulos Internacionales Arbitrados y Libros 1. **'Squeezed States and the Franck-Condon Overlap'** _L. Sandoval, M. Martin, J. F. Rivas, A. Palma_ Physical Review A vol. 46, pag.6095, nov-1992. 2. **'OSMOSIS: A Microcomputer Laboratory Teacher'** _E. Soto, T. Castaneda, M. Martin_ International Journal of Biomedical Computing vol. 32. pag. 85, jun-1993. 3. **'Amplitude Squared Squeezed States in the Fock-Bargmann Space'** _M. Martin, L. Sandoval, A. Palma_ International Journal of Quantum Chemistry vol. 46, pag. 515, 1993. 4. **'Franck-Condon Factors and Squeezed States'** _A. Palma, L. Sandoval, M. Martin_ International Journal of Quantum Chemistry Vol. S28, pag. 261, 1994. 5. **'AnGeLa: A Smart tool for the Automatic Layout Generation of Analog Cells'** _H. Castillo, R.M.M. Diaz, M. Martin, G. Espinosa_ Memorias del V congreso Internacional de Electronica, Comunicaciones y Computadoras. IEEE-UDLA Vol. 5, pag. 142, 1995. 6. **'Experimental demonstration of tomographic slit thecnic for measurment of arbitrary intensity profiles of light beams'** _J. Soto, M. Rendon y M. Martin_ Applied Optics Vol. 36. No. 29,1997. 7. **'Nonadiabatic tunneling: an exactly soluble model'** _M.Martin, L.Sandoval, R. Lefebvre, O. Atabek._ J. Physics B, Atomic Molecular Optics Physics. Vol 33. pag. 3665-3675, 2000. 8. **'Floquet States and Operator Algebra'** _V. Leon, M.Martin, L.Sandoval, A. Palma._ Advances in Quantum Chemistry Vol. 39. pags. 357-366, 2001. 9. **'Nonadiabatic tunneling in the presence of an oscillating field'** _M. Martin, R. Lefebvre, and O. Atabek_ Physical Review A Vol. 65, Num. 6, Art. Num. 062714, 2002. 10. **'Collapse of Transmissivity in a Triple-Barrier'** _R. Lefebvre, M. Martin and O. Atabek_ Israel Journal of Chemistry Vol. 43, pags. 319-323, 2003. 11. **'Second Quantization and Floquet Quasienergies of the parabolic barrier'** _A.Palma, L. Sandoval, M. Martin, R. Lefebvre_ International Journal of Quantum Chemistry Vol. 99, Pags. 484-487, 2004. 12. **'Object Recognition and Sorting By Using a Virtual Cartesian Robot with Artificial Vision'** _S. Garcia, A. Ata, M. Martin, F. Amaro, F. Rodriguez_ 15th International Conference on Electronics, Communications and Computers (IEEE- CONIELECOMP'05) pag. 201-206, Febrero 2005. 13. **'H-Tree: A data structure for fast path-retrieval in rooted trees'** _Saynez, Akram Shehadi; Somodevilla, Maria Josefa; Ortiz, Manuel Martin; Pineda, Ivo H._ Current Trends in Computer Science, 2007. ENC 2007. Eight Mexican International Conference on Computer Science pags. 25 - 32, Sept. 2007. 14. **'Query an Image Database by Segmentation and Content'** _Enrique Castillo, Ivo Pineda, Maria Somodevilla y Manuel Martin_ Advances in Computer Science and Applications Research in Computing Science 43, 2009, pp. 111-123 ISSN 1870-4069, Mexico. 15. **'Image Classification by Texture Segmentation using GAF-SVM'** _Sergio Dorantes, Manuel Martin, Maria Somodevilla, Jesus Lavalle, Ivo Pineda_ Advances on Semantic Web and New Technologies CEUR Workshop Proceedings Volume 534, 6/11/2009, pp. 97-107 ISSN 1613-0073, Germany 16. **'MoCap para el Analisis de Movimiento Anormal de las Extremidades Inferiores del Cuerpo Humano'** J. Emmanuel Vazquez Valencia, Arturo Olvera L., Manuel Martin O. XXIV Congreso Nacional y X Congreso Internacional de Informatica y Computacion Universidad de Colima y ANIEI pp. 248-257 2011 ISBN 978-607-707-335-2 17. **'Solving time-independent one dimension Schroedinger equation for** **polynomial potentials with bond states in Fock Space'** _Manuel Martin Ortiz, Jose Luis Carballido, German Campoy Guerena_ Mathematical Models ant ITC: Theory ans Applications Vol. 1, Chap I Mathematical Models 11/11/2011, pp. 35-39 ISBN 978-607-487-353-5, Mexico 18. **'A general overview of data reduction algorithms'** _J. Arturo Olvera-Lopez, Manuel Martin-Ortiz, J. Fco. Martinez Trinidad, J. Ariel Carrasco-Ochoa_ Mathematical Models ant ITC: Theory ans Applications Vol. 1, Chap. II ITC 11/11/2011, pp. 57-64 ISBN 978-607-487-353-5, Mexico 19. **'Using RFID Identity Cards'** _Barbara Emma Sanchez-Rinza, Otto Hernandez-Gonzalez, Manuel Martin-Ortiz, Arturo Olvera-Lopez_ Mathematical Models ant ITC: Theory ans Applications Vol. 1, Chap. II ITC 11/11/2011, pp. 117-122 ISBN 978-607-487-353-5, Mexico 20. **'Computacion Aplicada a la Medicina: Trazados Cefalometricos'** **'Metodo de Ricketts'** _Ivo Humberto Pineda Torres, Heidi Espinosa Arcos y Manuel I Martin Ortiz_ Editorial Academica Espanola **Libro**, 2012 ISBN 978-3-8484-6182-0, Alemania 21. **'Localizacion 3D de objetos definidos en mama mediante Fusion de Imagenes'** _Beatriz A. Sabino Moxo, Manuel Martin Ortiz, Jose G. Vazquez Luna_ Editorial Academica Espanola **Libro**, 2012 ISBN 978-3-659-04605-6, Alemania ## Articulos en Revistas Nacionales y Memorias en Extenso 1. 'Graficando Parte I: Modos de Video y Puntos' M. Martin. GAUSS GAZETTE. vol. 1, num. 1, pag. 16, sep-1995 2. 'Graficando Parte II: Lineas' M. Martin. GAUSS GAZETTE. vol. 1, num. 2, pag. 11, oct-1995 3. 'Graficando Parte III: Escalas y Funciones' M. Martin. GAUSS GAZETTE. vol. 1, num. 3, pag. 21, nov-1995. 4. 'Graficando Parte IV: Traslacion y Rotacion' M. Martin. GAUSS GAZETTE. vol. 1, num. 4, pag. 30, dic-1995. 5. 'Graficando Parte V: La Paleta' M. Martin. GAUSS GAZETTE. vol. 2, num. 1, pag. xx, ene-1996. 6. 'Graficando Parte VI: Cuerpos y Proyeccion Simple' M. Martin. GAUSS GAZETTE. vol. 2, num. 3, pag. xx, abr-1996. 7. 'Metodo de Ordenamiento Comb-Sort' M. Martin. GAUSS GAZETTE. vol. 2, num. 1, pag. 22, ene-1996. 8. 'Vision Artificial de Don Cuco el g.UAP.o' H. Vargas, M. Martin, A. Pedroza, D. Vera. GAUSS GAZETTE. vol. 2, num. 2, pag. 16, feb-1996. 9. Simulacion de Robot Cartesiano con reconocimiento de caracteres D. S. Garcia, A. Ata, M. Martin. infoCYT (CECYT-Puebla) vol. 1, num. 4, pag. 19, Octubre 2003. 10. Sistema para visualizacion y analisis de imagenes medicas digitalizadas J. M. Carranza, M. Martin. Memorias Primer Congreso Nacional de Ciencias de la Computacion, Puebla Vol. 1, pag. 178, Noviembre 2003. 11. Implementacion del Metodo de la Matriz de Transferencia para hallar la transmisividad de un Sistema Multibarrera Cuantico' M. A. Vargas, M. Martin. Memorias Primer Congreso Nacional de Ciencias de la Computacion, Puebla Vol. 1, pag. 226, Noviembre 2003. 12. Sistema de apoyo a la Microscopia de Fuerza Atomica (SAMFA) M. Martin, G. Jimenez Memorias Segundo Congreso Nacional de Computacion, Puebla Vol.1, pag. 150, Noviembre 2004. 13. Un Sistema para Graficar la Densidad de Carga Electronica Molecular L. Cuayahuitl, M. Martin, F. Melendez Memorias Segundo Congreso Nacional de Computacion, Puebla Vol. 2, pag. 379, Noviembre 2004. 14. Propuesta de Hospital Digital en Mexico: Modulo de Imagenologia F. Vazquez, M. Martin Memorias Segundo Congreso Nacional de Computacion, Puebla Vol.2, pag. 144, Noviembre 2004. 15. Sistema Medico de diagnostico de la Marcha Humana M. Martin. G. Garcia Memorias Segundo Congreso Nacional de Computacion, Puebla Vol. 2, pag. 140, Noviembre 2004. 16. Reconocimiento de Objetos, usando vision artificial S. Garcia, A. Ata, M. Martin Memorias Segundo Congreso Nacional de Computacion, Puebla Vol. 2, pag. 169, Noviembre 2004. 17. Diagnostic Audiometric Medical System (SIMAD) N. Saavedra, M. Martin. Taller de Computacion Clinica e Informatica Medica ENC-2005, Sociedad Mexicana de Ciencias de la Computacion Septiembre 2005. 18. Sistema para la Visualizacion y Analisis de Imagenes Medicas (SVAIMD) M. Martin, J. Martinez, J. Vazquez XXVIII Congreso Nacional de Ingenieria Biomedica, SOMIB Noviembre 2005 19. Sistema de Falso Color para Ultrasonido SiFaCUS Manuel Martin O., Gerardo Valladares F., Ivo H. Pineda T. pags. 128-133 Titulo: Avances en las Ciencias de la Computacion ISBN 968-5733-06-6 2006 20. Extraccion de Caracteristicas en Huellas Digitales en escala de grises Victor Ernesto Alonso Perez, Manuel Martin Ortiz pags. 23-27 Titulo: La Computacion en Puebla en el Siglo XXI - Vol. 2 ISBN 968-9182-30-7 2006 21. Modelado y Simulacion del Transito Vehicular Utilizando Automatas Celulares Rosalia Ramirez, Manuel Martin Ortiz pags. 17-22 Titulo: La Computacion en Puebla en el Siglo XXI - Vol. 2 ISBN 968-9182-30-7 2006 22. Localizacion 3D de objetos en Mama Sabino Moxo Beatriz Adriana, Martin Ortiz Manuel pags. 91 - 95 La Computacion en Puebla en el siglo XXI Vol. IV ISBN 968-863-588-X 2007 23. IPCAM-CONNECTOR: Una componente para interactuar con una camara IP Sanchez Bonilla Benjamin Elias, Martin Ortiz Manuel, Sanchez Lopez Abraham pags 87 - 90 La Computacion en Puebla en el siglo XXI Vol. IV ISBN 968-863-588-X 2007 24. Animacion de Personajes 3D en Base a Dinamica Hector Adrian Diaz Furlong, Dr. Manuel Martin Ortiz pags 115 - 120 La Computacion en Puebla en el siglo XXI Vol. IV ISBN 968-863-588-X 2007 25. Planificador de Reuniones del Instituto Electoral del Estado Edna Garcia Andrade, Alma Delia Ambrosio Vazquez, Manuel Martin Ortiz pags 196, 199 La Computacion en Puebla en el siglo XXI Vol. IV ISBN 968-863-588-X 2007 26. Seguimiento de Dendritas con Imagenes Microscopicas de Luz Clara M. Martin, G. Torrealba, A. Balandra y G. Flores 9o Encuentro Mexicano Internacional de las Ciencias de la Computacion pags. 64 - 69 ISBN 970-692-170-2 Avances en las Ciencias de la Computacion 2008 27. Sistema para el almacenamiento y manipulacion de informacion Medico - Mastografica Sabino Moxo Beatriz y Martin Ortiz Manuel 9o Encuentro Mexicano Internacional de las Ciencias de la Computacion pags. 70 - 75 ISBN 970-692-170-2 Avances en las Ciencias de la Computacion 2008 28. Localizacion 3D de lesiones en mama mediante un Modelo-Gel Sabino Moxo Beatriz Adriana, Martin Ortiz Manuel, Ivo Pineda Torres y Jose Guadalupe Vazquez pags. 190 - 196 Teoria, Algoritmos y Aplicaciones en Computacion ISBN 978-607-7541-89-9 2008 29. Extraccion de Landmarks Visuales para Ambientes de Interior Utilizando SIFT Hector Lozano Valtierra, Rafael Murrieta Cid, Jean-Bernard Hayet y Manuel Martin Ortiz pags. 198 - 207 Teoria, Algoritmos y Aplicaciones en Computacion ISBN 978-607-7541-89-9 2008 30. Sistema de Monitoreo Volcanico en tiempo real Omar Ariosto Nino Prieto, Luis Enrique Colmenares, Manuel Martin Ortiz pags. 50.1 - 50.6 IV Congreso Internacional ANDESCON ISBN 978-603-45345-0-6 2008 31. Propuesta para predecir eventos en el Sistema de Monitoreo Volcanico en tiempo real, basado en la informatica bio-inspirada y algoritmos de redes neuronales Omar Ariosto Nino Prieto, Luis Enrique Colmenares, Manuel Martin Ortiz pags. 191 -200 IV Semana Nacional de Ingenieria Electronica UAM-UP ISBN 978.970-31-0944-9 2008 32. Reconstruccion tridimensional de neuronas con imagenes de microscopia de luz clara Gloria Torrealba, Manuel Martin, Alfonso Balandra y Gonzalo Flores. pp. 30-1, 30-7 Advances in Computer Science Mexican International Conference on Computer Science - SMCC Symposium on Clinical and Medical Computing ITESM - Cd. Mexico Mexico D.F. septiembre 2009 33. Reconstruccion tridimensional de objetos representados en imagenes bidimensionales Gloria Torrealba, Manuel Martin, Alfonso Balandra y Gonzalo Flores VI Taller-Escuela De Procesamiento de Imagenes CIMAT Guanajuato, Gto. agosto 2009 34. Identificacion Biometrica de Ratas de Laboratorio en Base a sus huellas palmares Manuel Martin, Ivo Pineda, Carlos Escamilla VI Taller-Escuela De Procesamiento de Imagenes CIMAT Guanajuato, Gto. agosto 2009 35. Seguimiento de Personas Empleando Algoritmos de Asociacion de Datos NNKF, PDA y JPDA Ernesto Uribe H. y Manuel Martin O FePro FCC - BUAP 2010 36. An Adapted Freeman Chain Code Gray Image Compressor Thierry Excoffier, Omar Ariosto Nino Prieto, Manuel Martin Ortiz, Enrique Colmenares Guillen First International Congress on Instrumentation and Applied Sciences Cancun, Qroo, Mexico 2010 37. Sistema de Navegacion Urbana de Rutas Colectivas de Puebla (SiNuRCoP) Luis-Rosagel Cesar, Olvera Arturo, Martin Manuel XXIII Congreso Nacional y IX Congreso Internacional de Informatica y Computacion Puerto Vallarta, Jalisco, Mexico pp. 200-2006 Puerto Vallarta, Jalisco, Mexico oct/2010 ## Tesis Dirigidas y Codirigidas 1. Procesamiento de datos en placas astronomicas sobre estrellas desconocidas Guadalupe Salazar Licenciatura, FCFM, BUAP, 1989. Colaboracion con el Dr. Octavio Cardona INAOE 2. Interprete Grafico para el manejo de una Maquina de Medicion Carlota Tamayo Licenciatura, FCFM, BUAP, 1989. Colaboracion con el Departamento de Metrologia del I.P.N. 3. Sistema de Control, Adquisicion de datos y procesamiento para un espectrometro optico Saul Munoz Munoz Licenciatura, FCFM, BUAP, 1991. Colaboracion con el Dr. Hugo Navarro, Instituto de Fisica UAP 4. Editor de Paisajes Planos por medio de Fractales Roberto Gutierrez Romero Licenciatura, FCFM, BUAP, 1991. 5. Morfometria Computarizada Maria Elena Hernandez Licenciatura, FCFM, BUAP, 1991. Colaboracion con el Dr. Enrique Soto Eguibar, Instituto de Fisiologia UAP. 6. Osmosis: un Programa de Simulacion con fines Educativos Maria Teresa Castaneda Andrade Licenciatura, FCFM, BUAP, 1991. Colaboracion con el Dr. Enrique Soto Eguibar, Instituto de Fisiologia UAP. 7. Desarrollo de Programas de Soporte para Graficacion en Microcomputadoras J. Ricardo D. Calderon Cruz Licenciatura, FCFM, BUAP, 1992. En colaboracion con el Dr. Marcos Ley Koo, Departamento de Recursos Fosiles del Instituto de Investigaciones Electricas de la C.F.E. Cuernavaca, Mor. 8. Sistema para Determinar Frecuencias en Estrellas Variables Jovita Dulce Maria Sanchez Hernandez Licenciatura, FCFM, BUAP, 1992. En colaboracion con el M.C. Jose Pena. INAOE 9. Sistema Generador de de Tutoriales Salvador Salazar Ibarguen Licenciatura, FCFM, BUAP, 1994. 10. Instrumentacion de un Compilador de Fortran 77 Leopoldo Gonzalez Rosas Licenciatura, FCFM, BUAP, 1994. En colaboracion con la Dra. Blanca Bermudez Juarez, FCFM - UAP. 11. Vision Artificial del Primer Robot Pianista Mexicano Hector Simon Vargas Martinez Licenciatura, FCFM, BUAP, 1994. En colaboracion con el Dr. Domingo Vera Mendoza y el M.C. Alejandro Pedroza M. DME- ICUAP 12. AnGELA: Generador de Layouts para Circuitos Integrados CMOS Rosa Maria Monserrat Diaz Merino Licenciatura, FCFM, BUAP, 1994. En colaboracion con el Dr. Guillermo Espinosa Flores Verdad, INAOE 13. Sistema de Clasificacion de senales EEG utilizando el ambiente de Programacion KHOROS Claudia Zepeda Cortes Licenciatura, FCFM, BUAP, 1995. En colaboracion con el Dr. Dr.Rogelio Alcantara Silva, DEPFI - UNAM 14. Captura Esquematica de Circuitos Analogicos y reconocimiento de Estructuras Especiales Hilda Castillo Zacatelco Licenciatura, FCFM, BUAP, 1995. En colaboracion con el Dr. Guillermo Espinosa Flores Verdad, INAOE 15. Optimizacion de Geometria Molecular, Actualizacion BFGS y region de Confianza Sergio Garnelo Cortes Licenciatura, FCFM, BUAP, 1995. La colaboracion se realizo con el Dr. Juan Francisco Rivas Silva (IFUAP) y la Dra. Maria de Lourdes Sandoval Solis (FCC). 16. Diseno Automatico de Sistemas Opticos Maria del Lourdes Orta Cortes Licenciatura, FCFM, BUAP, 1995. En colaboracion con el Dr. Alejandro Cornejo, INAOE. 17. Automatizacion del Sistema de caracterizacion optica de Semiconductores por la Tecnica de Fotorreflectancia. Jose Pedro Miguel Ojeda Maravilla Licenciatura, FCFM, BUAP, 1995. En colaboracion con el Dr. Jose Luis Herrera, Instituto de Fisica UAP 18. Analisis de Metodos y Algoritmos de Compactacion de Archivos Luis Alonso Sanchez Rodriguez Licenciatura, FCFM, BUAP, 1996. 19. Siic HNP: Un sistema hospitalario utilizando Bases de Datos Relacionales Jose Manuel de Tuya Hernandez Licenciatura, FCFM, BUAP, 1996. Proyecto para el Hospital del Nino Poblano 20. Sistema para prueba de superficies opticas Ana Maria Zarate Rivera Licenciatura, FCFM, BUAP, 1996. En colaboracion con el Dr. Alejandro Cornejo Rodriguez - INAOE. 21. SISTEMA DE QUIMICA CUANTICA: Modulo CNDO Silvia Sandra Jimenez Peregrina En colaboracion con el Dr. Juan Francisco Rivas Silva (IFUAP) y la Dra. Ma. del Lourdes Sandoval Solis (FCC). Licenciatura, FCFM, BUAP, 1996. 22. Programa de Programas Aplicados para el analisis de sistemas opticos coherentes Gabriel Coronado Garcia Licenciatura, FCC, BUAP, 1997. En colaboracion con el Dr. Andrey S. Ostrovsky - FCFM. 23. Visualizador de Moleculas Marco Antonio Guzman Merino Licenciatura, FCC, BUAP, 1997. 24. Ruteador para Circuitos integrados analogicos Monica Beatriz Osorio Alvarado En colaboracion con el Dr. Guillermo Espinosa Flores Verdad - INAOE Licenciatura, FCC, BUAP, 1998. 25. Generador de Tutoriales (Lenguaje Ensamblador) Lileana Moreno Leon Licenciatura, FCC, BUAP, 1998. 26. Generador de Tutoriales (Lenguaje Pascal) Beatriz de la Luz Zacamitzi Licenciatura, FCC, BUAP, 1998. 27. Generador de Tutoriales (Lenguaje C) Sofia Paniagua Licenciatura, FCC, BUAP, 1998. 28. Sistema de Inscripcion / RED TCP-IP Alfredo Roque Licenciatura, FCC, BUAP, 1998. 29. Simulacion de una Granja de Computadoras Miguel Angel Espinosa Maldonado Licenciatura, FCC, BUAP, 1998. 30. Diseno e Implementacion de una Base de Datos Distribuida de proposito general basada en agentes. Jose Luis Lozada Hernandez Licenciatura, FCC, BUAP, 1999. 31. Algoritmos basicos para el procesamiento de imagenes digitales Rafael de la Rosa Flores Licenciatura, FCC, BUAP, 1999. 32. Una red recurrente retardada en el tiempo para pronosticar la velocidad del viento y su frente de onda Leobardo Soancatl Aguilar En colaboracion con el Dr. Leopoldo Altamirano - INAOE Maestria, FCC, BUAP, 1999. 33. Creacion de escenarios y recorridos virtuales Alejandro Sanchez Zamorano Licenciatura, FCC, BUAP, 1999. 34. Sistema de Informacion para la Preparatoria Urbana "Enrique Cabrera Barroso" UAP Arely Morales Salgado Licenciatura, FCC, BUAP, 1999. 35. Herramienta para monitoreo de una red que utiliza el protocolo TCP/IP Jaime Arturo Castillo Aragon Licenciatura, FCC, BUAP,1999. En colaboracion con el Dr. Javier Baez Rojas - INAOE. 36. Desarrollo y aplicacion de un modelo de analisis para la actualizacion de la materia de algoritmos y estructura de datos Maria Adela Angoa Perez Licenciatura, FCC, BUAP, 1999. 37. Desarrollo del sistema integral para la emision de tarjetas de identidad y el control de accesos a zonas restringidas Agustin Perez Ramirez En colaboracion con el M.C. Francisco Barbosa Escudero - INAOE Licenciatura, FCC, BUAP, 1999. 38. Sistema de Consultas por medio de Correo Electronico (email) Araceli Fernandez Cortes En colaboracion con el M.C. Victor Cortes Galvan - UAPEP. Licenciatura, FCC, BUAP, 1999 39. Sombreado de objetos curvos Alberto Calixto Simon Licenciatura, FCC, BUAP, 1999. 40. Estudio de un modelo de agentes en Java (AGLETS) para el desarrollo de bases de datos distribuidas Jose Abraham Cruz Vergara Licenciatura, FCC, BUAP, abril 2000 41. Desarrollo de Bases de datos usando Cold Fusion Maria Rosa Roque Flores Licenciatura, FCC, BUAP, mayo 2000 42. Realizacion de una calculadora de Geometria Molecular Hector Eliosa Nunez Licenciatura, FCC, BUAP, julio 2000 43. Sistema para el graficado de funciones en 2D y 3D para plataformas Windows y LINUX Laura Cuayahuitl Romero Licenciatura, FCC, BUAP, septiembre 2000 44. Segmentacion de radiografias dentales Ignacio Bravo Hernandez Licenciatura, FCC, BUAP, octubre 2000 45. Estudio de las Bibliotecas VTK y ejemplos de aplicacion Joaquin Sergio Zepeda Hernandez Licenciatura, FCC, BUAP, mayo 2001. 46. Sistema de analisis de Actividad Electrica Neuronal Xochitl Laura Gradas Garcia Licenciatura, FCC, BUAP, julio 2001 En colaboracion con el Dr. Enrique Soto Eguibar - Instituto de Fisiologia de la BUAP 47. Visualizador de Campos Electricos y Magneticos Roberto Ismael Guzman Merino Licenciatura, FCC, BUAP, marzo 2001 48. Sistema de evaluacion y autoevaluacion con interfaces web Daniel Alberto de la Fuente Ariza Licenciatura, FCC, BUAP, marzo 2001 49. Sistema de rehabilitacion para pacientes con alteraciones del codigo sintactico del Lenguaje Norma Guadalupe Garcia avila Licenciatura, FCC, BUAP, marzo 2001 En colaboracion con la Dra. Natalia Monserrat Sarda Cue - Posgrado Psicologia BUAP 50. Adquisicion y presentacion de datos sismologicos con LabView Edgar Roberto Rossainz Montiel Licenciatura, FCC, BUAP, junio 2001 51. Manejo del Dialogo en Sistemas de Iniciativa Mixta Daniel Perez Rojas Licenciatura, FCC, BUAP, julio 2001 En colaboracion con la Dra. Ingrid Kirsehning Albers - UDLA Puebla 52. Acervo bibliografico de tesis Claudia Hernandez Gonzalez Licenciatura, FCC, BUAP, septiembre 2001 53. Manejador para graficador sobre LINUX Maria del Rosario Munoz Hernandez Licenciatura, FCC, BUAP, marzo 2001 En colaboracion con el Dr. Jose Javier Baez Rojas - INAOE 54. Sistema para el analisis de la actividad alternante de musculos involucrados en la locomocion Leticia Maldonado Pelaez Licenciatura, FCC, BUAP, diciembre 2001 En colaboracion con la Dra. Ingrid Kirsehning Albers - UDLA Puebla 55. Sistema Distribuido de balance de carga con ejecucion de tareas Hilda Castillo Zacatelco Maestria, FCC, BUAP, julio 2001 En colaboracion con el M.C. Jesus Garcia Fernandez FCC - BUAP 56. Sistema para Graficar la densidad de carga electronica de moleculas Laura Cuayahuitl Romero Maestria, FCC, BUAP, octubre 2001 En colaboracion con el Dr. Francisco Javier Melendez Bustamante FCQ - BUAP 57. Sistema de Multiagentes Moviles para Busquedas Distribuidas Maria Isabel Reyes Ramirez Licenciatura, FCC, BUAP, mayo 2002 58. Sistema Computarizado para la Rehabilitacion de personas con sindrome de agnosia visual simultanea Jose Rosas Ibarra Licenciatura, FCC, BUAP, junio 2002 En colaboracion con la Dra. Natalia Sarda Cue, Facultad de Psicologia - Postgrado en Neuropsiquiatria, BUAP 59. Editor-Simulador de Robots Orientado a Objetos Jose Arturo de los Angeles Salgado Licenciatura, FCC, BUAP, julio 2002 60. Sistema para la emision de certificados de la SEP basado en Visual Studio .NET Hector Juarez Lumbreras Licenciatura, FCC, BUAP, junio 2002 61. Desarrollo de aplicaciones para Pocket PC: Sistema Automatizado de Ventas Erick Eduardo Arias Arau Licenciatura, FCC, BUAP, junio 2002 62. Aprendizaje Inductivo de reglas de Contrapunto Vocal Jose Maria Vega Ramos Licenciatura, FCC, BUAP, agosto 2002 63. Editor de Modelos Geometricos en 3D para el Reconocimiento de Objetos. Rafael Lemuz Lopez Licenciatura, FCC, BUAP, mayo 2003 En colaboracion con el Dr. Leopoldo Altamirano, INAOE 64. Desarrollo del algoritmo y programa para la simulacion y modelado de un dispositivo de microondas - Klystron de transito. Kirill Zemliak Licenciatura, FCC, BUAP, junio 2003 65. Reconstuccion de imagenes digitales usando momentos de Zernike. Areli Martinez Ramirez Licenciatura, FCC, BUAP, julio 2003 En colaboracion con el Dr. Alfonso Padilla Vivanco, INAOE 66. Algoritmo de segmentacion y caracterizacion de espectros de estrellas. Erika Danae Lopez Espinoza Licenciatura, FCC, BUAP, agosto 2003 En colaboracion con el Dr. Leopoldo Altamirano, INAOE 67. Sistema de analisis de datos por minimos cuadrados con opcion a eleccion. Maria Raquel Guevara Sotomayor Licenciatura, FCC, BUAP, junio 2003 68. Sistema de consultas y estadisticas de ventas (Pelikan) Alejandro Leonardo Torija Flores Licenciatura, FCC, BUAP, abril 2003 69. Estudio de las etapas de un sistema automatico para la identificacion de Huellas Dactilares (EISAIHD). Rafael de la Rosa Flores Maestria, FCC, BUAP, marzo 2003 En colaboracion con el Dr. Juan Humberto Sossa Azuela, INAOE 70. Sistema de manejo y presentacion de electrocardiogramas. Rosalia Ramirez Ortega Licenciatura, FCC, BUAP, octubre 2003 71. Sistema clinico de electroencefalografia con visualizador. Amalia Perez Hernandez. Licenciatura, FCC, BUAP, julio 2003 72. Sistema para deteccion y seguimiento de aves mediante analisis dinamico de imagenes. Agustin Alberto Ortega Jimenez Licenciatura, FCC, BUAP, diciembre 2003 En colaboracion con el Dr. Leopoldo Altamirano y MC. Ivan Olivera Romero, INAOE 73. Sistema Fonocardiografico Basico (SFB) Sandra Edith Manzano Cruz Licenciatura, FCC, BUAP, diciembre 2003 74. Software para el reconocimiento y manipulacion de letras utilizando vision artificial, con la simulacion de un robot cartesiano. David Salomon Garcia Palmero Licenciatura, FCC, BUAP, julio 2004 75. Analisis de la Marcha Humana Guillermo Garcia Flores Licenciatura, FCC, BUAP, enero 2004 76. Diseno e implementacion de la automatizacion del proceso de publicacion en Internet empleando un sistema Linux. Jorge Jaime Juarez Lucero Licenciatura, FCC, BUAP, agosto 2004 77. Visualizador de Cartas de Navegacion Electronica en formato S57 (VICARS57) Judith Ortega Ponce Licenciatura, FCC, BUAP, agosto 2004 En Colaboracion con en Dr. Jesus Antonio Gonzalez Bernal, INAOE. 78. Sistema De Bases De Datos Para La Sala De Revistas Alejandro Reyes Cristiani Elizabeth Reyes Fuentes Licenciatura, FCC, BUAP, noviembre 2004 79. Modelado y Simulacion de Trafico Vehicular empleando Automatas Celulares Mauricio Ramirez Espitia Licenciatura, FCC, BUAP, abril 2004 80. Migracion de Direcciones IP estaticas a DHCP en GEDAS y VW de Mexico Gaspar Munoz Rosas Licenciatura, FCC, BUAP, mayo 2004 81. Sistema de seguimiento utilizando vision foveal Luis Puig Morales Licenciatura, FCC, BUAP, febrero 2004 82. Diseno e Implementacion de un Analizador de Redes de Computadoras Roberto Carlos Martinez Ibarra Licenciatura, FCC, BUAP, febrero 2004 83. Diseno e implementacion de algoritmos paralelos para procesar imagenes de coloides. Selene Hernandez Rodriguez Licenciatura, FCC, BUAP, Marzo 2004 En colaboracion con el Dr. Mario Aurelio Rodriguez Pineda, FCFM - BUAP. 84. Procesamiento Digital de Imagenes para el Diagnostico de una zona de Riesgos Volcanicos del Popocatepetl Yasmin Lopez Arellano Licenciatura, FCC, BUAP, mayo 2004 85. Sistema para la Visualizacion y el Analisis de Imagenes Medicas Digitalizadas Jose Martinez Carranza Licenciatura, FCC, BUAP, julio 2004 86. Prototipo de un Silabario Multimedia para el Idioma Espanol-Mexicano Jose Leopoldo Diaz Alonso Licenciatura, FCC, BUAP, diciembre 2004 87. Interprete de Basic para Educacion Media Superior Jose Guadalupe Perez Licenciatura, FCC, BUAP, febrero 2004 88. Propuesta de Hospital Digital en Mexico Francisco Vazquez Guzman Maestria en Ciencias de la Computacion, FCC, BUAP, diciembre 2004 89. Sistema Hospitalario de Organizacion y Visualizacion de Imagenes Medicas de Pacientes Eduardo Hernandez Ronquillo Licenciatura, FCC, BUAP, febrero 2005 90. Visor de Imagenes de Alta Resolucion HRPT Ivan Enrique Morales Rios Licenciatura, FCC, BUAP, julio 2005 91. Sistema Integral de Servicios Escolares para Institutos Tecnologicos (SISEPIT) Eduardo Huerta Figueiras Maestria en Ciencias de la Computacion, FCC, BUAP, Febrero 2005 92. Diseno e instalacion de redes inalambricas y Mapas de Cobertura Ricardo Ruiz Luna Ingenieria en Computacion, UPAEP, febrero 2005 93. Soluciones de la ecuacion de Schrodinger para un sistema multibarreras Miguel Angel Vargas Lomeli Licenciatura, FCC, BUAP, junio 2005 94. Sistema de Visualizacion de Documentos para Web de la Biblioteca "Jose Maria Lafragua" - BUAP Carlos Armando Rios Acevedo Licenciatura, FCC, BUAP, septiembre 2005 95. Momentos Wavelet del tipo B-spline cubicos para clasificacion de objetos Judith Perez Marcial Licenciatura, FCC, BUAP, octubre 2005 En colaboracion con el Dr. Alfonso Padilla Vivanco, INAOE 96. Sistema para el manejo de informacion Medica de Ultrasonido Ernesto Rojas Lopez Licenciatura, FCC, BUAP, noviembre 2005 97. Procesamiento digital de imagenes del Mural de "Los Bebedores" de la zona arquelogica de Cholula, Puebla Yolanda Molina Hernandez Licenciatura, FCC, BUAP, noviembre 2005 En colaboracion con el Dr. David Iturbe Castillo, INAOE 98. Desarrollo de una aplicacion de simulacion numerica de sensores refractometricos en fibras opticas Konstantin S. Khotiaintsev Umanets Licenciatura, FCC, BUAP, diciembre 2005 99. Sistema para el desarrollo de pruebas de audiometria Nubia Saavedra Cruz Licenciatura, FCC, BUAP, septiembre 2006 100. Desarrollo de aplicaciones medicas utilizando las bibliotecas VTK e ITK Job Acevedo Lopez Licenciatura, FCC, BUAP, noviembre 2006 101. Cartografia en Internet - WebSite de San Pedro Cholula Godofredo Tiro Tepayotl Licenciatura, FCC, BUAP, diciembre 2006 102. Realce de imagenes digitales con falso color y pseudocolor Maria Teresa Citlali Penaloza Ramos Licenciatura, FCC, BUAP, abril 2006 103. Digitalizacion de Mastografias con correccion de Luz Beatriz Adriana Sabino Moxo Licenciatura, FCC, BUAP, mayo 2006 104. Sistema de Emision y Recepcion de Oficios expedidos por la oficina de seguimiento y analisis del IFE de Puebla Adriana Carolina Cisneros Rosas Licenciatura, FCC, BUAP, diciembre 2006 105. Propuesta de Programa y Herramientas para cursos de programacion en el nivel medio superior Rosalba Mota Lopez Licenciatura, FCC, BUAP, diciembre 2006 106. Hermes: Sistema para la Administracion, Catalogacion y Publicacion del Acervo Digital de Tesis en Internet Javier Benedicto Camacho Martinez Licenciatura, FCC, BUAP, septiembre 2006 107. Arquitectura HW basada en FPGA para la correccion radial de imagenes digitales Victor Manuel Garcia y Garcia Licenciatura, FCC, BUAP, diciembre 2006 108. Propuesta de Migracion de la Red Inalambrica del Centro Logistico en Volkwagen de Mexico Rodrigo Hernandez Nieto Licenciatura, FCC, BUAP, diciembre 2006 109. Tratamiento digital de imagenes de satelite LANSAT en la generacion de composiciones en falso color Ruben Rossainz Suarez Licenciatura, FCC, BUAP, febrero 2007 110. Sistema multiagente para obtencion de bordes en imagenes Modesto Corzas Fernandez En colaboracion con el Dr. Leopoldo Altamirano Robles - INAOE Licenciatura, FCC, BUAP, febrero 2007 111. Analisis espectral para senales EEC y ECG utilizando transformada rapida de Fourier Giovanni Chavez Melo En colaboracion con el Dr. Eduardo Salinas Estefanon - Inst. Fisiologia - BUAP Licenciatura, FCC, BUAP, octubre 2007 112. Extraccion de Caracteristicas en huellas digitales directo de la escala de grises Victor Alonso Perez Maestria, FCC, BUAP, junio 2007 113. Sistema de captura y procesamiento de imagenes de radiografias obtenidas por resonancia magnetica Fernando Toral Lima Licenciatura, FCC, BUAP, mayo 2007 114. Sistema Computacional para el estudio del fenomeno de resonancia estocastica fantasma en Sistemas sensoriales y motores Antonio Marquez Palacios En colaboracion con el Dr. Enrique Soto Eguibar - Inst. Fisiologia - BUAP Licenciatura, FCC, BUAP, julio 2007 115. Sistema para la Interaccion entre Maestro y Alumno Mario Salvador Ruiz Font Asesor. MC. Maya Carillo Coasesor. Manuel Martin Licenciatura, FCC, BUAP, febrero 2007 116. Modelado y simulacion del transito vehicular utilizando automatas celulares Rosalia Ramirez Ortega Maestria, FCC, BUAP, diciembre 2007 117. Sistema distribuido de informacion visual hospitalaria Adrian Fernandez de Lara Sanabria Licenciatura, FCC, BUAP, febrero 2007 118. Sistema de Consulta de Diagnosticos Radiologicos Raul Rodriguez Colin Licenciatura, FCC, BUAP, febrero 2007 119. Software y Hardware para el analisis de Mastografias Manuel Najera Enriquez Licenciatura, FCC, BUAP, agosto 2007 120. IP-Cam Connector, una componente para interactuar con una camara IP Benjamin Elias Sanchez Bonilla En colaboracion on el Dr. Abraham Sanchez - FCC Licenciatura, FCC, BUAP, diciembre 2007 121. Sistema de Localizacion 3D de objetos definidos en mama mediante fusion de imagenes Beatriz Adriana Sabino Moxo Coasesor. Dr. Jose Vazquez Luna Maestria en Cs. de la Computacion, FCC, BUAP, diciembre 2008 122. Proteccion De Imagenes Astronomicas Mediante Marcas De Agua David Melo Romerov Asesor. Dra. Raquel Diaz Hernandez Coasesor. Manuel Martin Ortiz Licenciatura Cs. de la Computacion, FCC, BUAP, enero 2008 123. Procesamiento Paralelo En Un Cluster Bajo Linux Utilizando MPI Roxana Solis Ramirez Licenciatura Cs. de la Computacion, FCC, BUAP, febrero 2008 124. Esteganografia con imagenes digitales y una aplicacion Eleazar Nieves Zuniga Asesor. MC. Alba Maribel Sanchez Galvez - FCC Coasesor. Manuel Martin Lic. Cs. Computacion, FCC, BUAP, septiembre 2008 125. Modelado de un simulador para un sistema dinamico usando UML Israel Mozo Valencia Asesor. Dr. Eduardo Rios Silva - FCE - BUAP Coasesor. Manuel Martin Ing. Cs. Computacion, FCC, BUAP, marzo 2008 126. Sistema Base Para La Clasificacion De Coberturas De La Tierra Empleando Imagenes Satelitales Omar Oscar Vazquez Aldama Asesor MC. Erika Danae Lopez Espinoza - INAOE Coasesor Manuel Martin Lic. Cs. Computacion, FCC, BUAP, abril 2008 127. Programacion y Monitoreo de aplicaciones paralelas en un Cluster Guadalupe Esparragoza Martinez Lic. Cs. Computacion, FCC, BUAP, febrero 2008 128. Sistema De Reconocimiento Biometrico (HandPrint) Miriam Romero Moreno Lic. Cs. Computacion, FCC, BUAP, marzo 2008 129. Sistema para la administracion de protocolos y temas de tesis Alejandro Rojas Hernandez Lic. Cs. Computacion, FCC, BUAP, marzo 2008 130. Seguimiento y reconocimiento de comportamientos de personas usando modelos ocultos de Markov Julio Cesar Perez Sansalvador Asesor. Dra. Janeth Cruz Enriquez - INAOE Coasesor. Manuel Martin Lic. Cs. Computacion, FCC, BUAP, abril 2008 131. Sistema analizador y metrico de una fotografia a nivel celular Juan Carlos Olivares Morales Asesor. Dr. Gonzalo Flores Alvarez - Inst. Fisiologia BUAP Coasesor. Manuel Martin Lic. Cs. Computacion, FCC, BUAP, abril 2008 132. Generacion de Modelos 3D Texturizados a partir de Datos Parciales Nallely Sanchez Rodriguez Asesor Dr. Rafael Lemuz Lopez - INAOE Coasesor Manuel Martin Ing. en Computacion, FCC, BUAP, mayo 2008 133. Sistema de administracion y control de IPs en una RED Oscar Miranda Marquez Lic. Cs. Computacion, FCC, BUAP, mayo 2008 134. Sistema de comunicacion basado en VoIP para un Campus Universitario Hansel Alva Perez Asesor. Manuel Martin Coasesor. Dr. Ivo Pineda Torres - FCC Lic. en Cs. de la Computacion, FCC, BUAP, junio 2008 135. Sistema de Administracion, Busquedas y Consultas en Web de biblioteca para el IESAD Martha Elena Rodriguez Rivera Asesor. Manuel Martin Coaesor. LCC. Carlos Rios Acevedo - IESAD Lic. Cs. Computacion, IESAD, julio 2008 136. Diseno y desarrollo de un modulo para el manejo de imagenes e informacion dentro del marco del sistema de expediente electronico en el contexto del proyecto SALUD-2004-C01-21 Monica Marin Rodriguez Asesor. Dr. Jose Guadalupe Vazquez Luna - FCFM - BUAP Coasesor. Manuel Martin Ing. Cs. Computacion, FCC, BUAP, julio 2008 137. Reconocimiento de comportamientos de la mosca de la fruta usando modelos ocultos de Markov Saul Torres Deolarte Asesor. Dra. Janeth Cruz Enriquez - INAOE Coasesor. Manuel Martin Lic. en Cs. de la Computacion, FCC, BUAP, agosto 2008 138. Procesamiento De Imagenes De Mastografia Con Implementacion De Hardware Victor Hugo Arroyo Dominguez Asesor Dr. Jose Guadalupe Vazquez Luna - FCFM - BUAP Coasesor Manuel Martin Ing. Cs. Computacion, FCC, BUAP, agosto 2008 139. El cuerpo humano como llave de acceso en la tecnologia biometrica del presente y futuro de la sociedad Dulce Maria Diaz Perez Asesor. MC. Erasmo Montealegre Vazquez - IESAD Coasesor. Manuel Martin Lic. Cs. de la Computacion, IESAD, diciembre 2008 140. Construccion de un Sistema Web para la Administracion de Informacion Curricular de Investigadores de la BUAP que participan en Programas de VIEP Ana Laura Espinoza Vizcarra Asesor. Lic. Eduardo Lopez Flores - VIEP - BUAP Coasesor. Manuel Martin Ing. Computacion, FCC, BUAP, noviembre 2008 141. Integracion de Software para el procesamiento digital de imagenes medicas, disenado para el Hospital Universitario de la BUAP Jose Perez Luna Asesor. Dr. Jose Vazquez Luna - FCFM - BUAP Coasesor. Manuel Martin Ing. Computacion, FCC, BUAP, noviembre 2008 142. Registro de senales biologicas a traves de un conversor Analogico Digital de 12 bits Alicia Vera Limon Asesor. Dr. Eduardo Salinas Estefanon - Inst. de Fisiologia BUAP Coasesor. Manuel Martin Lic. en Cs. de la Computacion, FCC, BUAP, noviembre 2008 143. Sistema de tracking de objetos moviles sobre una plataforma Linux minima Jose Valeriano Aguilar Tlaseca Asesor. MC. Jose Martinez Carranza - INAOE Coasesor. Manuel Martin Ing. Computacion, FCC, BUAP, enero 2009 144. Escaner 3D mediante triangulacion y luz estructurada para reconstruccion de piezas arqueologicas Francisco Calyecac Marreros Ing. Computacion, FCC, BUAP, junio 2009 145. Sistema de tarifacion para Asterisk (VoIP) Misael Octavio Rodriguez de la Rosa En Colaboracion con Gustavo Cossio Ing. Computacion, FCC, BUAP, junio 2009 146. Vista de grupos de estrellas en forma de planetario desde varios puntos de observacion en 3D Abner Quiroz Clemente Ing. Computacion, FCC, BUAP, julio 2009 147. Animacion de expresiones faciales y del movimiento de labios en el habla del espanol en ambiente tridimensional Hector Adrian Diaz Furlong Ing. Computacion, FCC, BUAP, agosto 2009 148. Sistema para elaboracion, aplicacion y evaluacion de encuestas sobre el Web Juan Gabriel Romero Apango Lic. en Ciencias de la Computacion, FCC, BUAP, septiembre 2009 149. Reconstruccion 3D dendritas Alfonso Balandra Antelis En colaboracion con el Dr. Gonzalo Flores - Inst. Fisiologia - BUAP Ing. Computacion, FCC, BUAP, octubre 2009 150. Programacion y Monitoreo de aplicaciones paralelas con charm++ Eric Olmedo Gonzalez Lic. en Ciencias de la Computacion, FCC, BUAP, diciembre 2009 151. Sistema para el manejo de informacion electronica de una biblioteca Maritza Alejandrez Olivo Lic. en Ciencias de la Computacion, FCC, BUAP, diciembre 2009 152. Sistema de Informacion Geografica para el Municipio de Puebla (SIGMuPue) Ernesto Rojas Lopez En Colaboracion con el Dr. Fernando Zacarias - FCC Maestria en Cs. de la Computacion, FCC, BUAP, diciembre 2009 153. Simulador de trafico vehicular implementado con agentes Ivan Jimenez Romero Maestria en Cs. de la Computacion, FCC, BUAP, octubre 2009 154. Reconstruccion y analisis 3D de Dendritas con imagenes de microscopio de luz clara Gloria Yadira Torrealba Melendez En colaboracion con el Dr. Gonzalo Flores - Inst. Fisiologia - BUAP Maestria en Cs. de la Computacion, FCC, BUAP, septiembre 2009 155. Sistema Empotrado de visualizacion de imagenes basadas en contextos historicos del entorno con informacion adicional desplegable Vicente Guevara Ayala Ing. Computacion, FCC, BUAP, junio 2010 156. Sistema de Publicacion y Consulta del Material DOcente Digital para una Unidad Academica de una Intitucion de Ensenanza Superior Julio Cesar Munoz Castro Lic. Computacion, FCC, BUAP, noviembre 2010 157. Simulacion computacional de redes neuronales naturales pertenecientes al Generador Central de Patrones de la medula espinal Imanti Mendez Fontus En colaboracion con el Dr. Elias Manjarrez Lopez - Inst. Fisiologia - BUAP Lic. Computacion, FCC, BUAP, agosto 2010 158. Diseno y control de un robot escalador movil articulado terrestre Jorge Ocampo Jimenez Lic. Computacion, FCC, BUAP, junio 2010 159. Sistema de Administracion y Mejoramiento de Radiografias Vanessa Carreon Ortega En colaboracion con el Dr. Gerardo Martinez Montes - CUV - BUAP Lic. Computacion, FCC, BUAP, diciembre 2010 160. Fusion de Datos Para el Seguimiento de Personas Empleando Algoritmos de Asociacion NNKF, PDA y JPDA Jesus Ernesto Uribe Hernandez En colaboracion con la Dra. Janeth Cruz Enriquez INAOEP Ing. Computacion, FCC, BUAP, diciembre 2010 161. Autenticacion de clientes inalambricos Omar Coeto Hernandez En colaboracion con el Ing. Gustavo Cossio - FCC BUAP Ing. Computacion, FCC, BUAP, marzo 2011 162. Sistema para el Estudio del Equilibrio en Humanos usando una Plataforma Wii Balance Board Eduardo Salinas Marquez En colaboracion con el Dr. Enrique Soto Eguibar - Inst. Fisiologia - BUAP Ing. Computacion, FCC, BUAP, febrero 2011 163. Software medico para la evaluacion y apoyo diagnostico de pacientes con problemas psiquiatricos utilizando tiempos de reaccion Veronica Paleta Zitle En colaboracion con el Dr. Gonzalo Flores - Inst. Fisiologia - BUAP Ing. Computacion, FCC, BUAP, diciembre 2011 164. Sistema para el Manejo del Expediente Docente Anayeli Anielis Lic. Computacion, FCC, BUAP, diciembre 2011 165. Plataforma de servicios web para facturacion electronica Jose Aaron Cruz Hernandez En colaboracion con el Dr. David Pinto Avendano FCC - BUAP Maestria en Ciencias de la Computacion, FCC, BUAP, diciembre 2011 166. Sistema Adninistrador de Recursos Hidraulicos (SARH) Diriangen Fernando Cuadra Escalante En colaboracion con el Dr. J. Arturo Olvera Lopez - FCC BUAP Lic. Computacion, FCC, BUAP, febrero 2012 167. Sistema de Simulacion de Trafico Urbano - SSTU3 Ricardo Adair Romero Salgado Maestria en Ciencias de la Computacion, FCC, BUAP, febrero 2012 168. Procesamiento Digital de Senales Neurologicas en Plataformas Paralelas Oscar Daniel Goyri Aguirre Ing. Computacion, FCC, BUAP, mayo 2012 169. Sistema de Gestion y Administracion de Contenidos Web Inter-Facultativa DESIT-BUAP Arturo Rodriguez Vergara Lic. Computacion, FCC, BUAP, mayo 2012
50b4422f5fa735169f000033 [![][1]][2] [![][3]][4] [![][5]][6] [![][7]][8] [![][9]][10] [![][11]][12] [![][13]][14] [Inicio][2] [Profesores][4] [Alumnos][6] [Horarios][8] [Plan de Estudios][10] [Actas CUA][12] [FCC][14] Licenciatura en Cs. de la Computacion [Contenido de materias MUM][15] [Mapa grafico MUM ][16] [Programa Educativo 2005][17] [Contenido de materias 2005][18] [Estructura curricular 2005][19] [Mapa grafico plan 2005][20] [Estructura curricular 2000 ][21] [Contenido de materias 2000][22] [Mapa grafico plan 2000][23] [Tabla de Equivalencias][24] Ingenieria en Cs. de la Computacion [Contenido de materias MUM][25] [Mapa grafico MUM][26] [Programa Educativo 2005][27] [Contenido de materias 2005][28] [Estructura curricular 2005][29] [Mapa grafico plan 2005][30] [Estructura curricular 2000][31] [Contenido de materias 2000][32] [Mapa grafico plan 2000][33] [Tabla de Equivalencias ][34] HT: Horas Teoria HP: Horas Practica TC: Total de Creditos NB Nivel Basico ## Plan de estudios Ingenieria 2005 Unidad academica: Facultad de Ciencias de la Computacion Carrera: Ingenieria en Ciencias de la Computacion Titulo que se otorga: Ingeniero en Ciencias de la Computacion Niveles contemplados en el mapa: Basico y Formativo Creditos minimos y maximos para la obtencion de la licenciatura:420/450 Creditos minimos y maximos por cuatrimestre: 30 / 65 Creditos maximos por verano: 25 Tiempo minimo y maximo en el plan de estudios :3 a 7.5 anos Materias (para ver el contenido de click sobre el nombre de la materia) Nivel Basico CODIGO MATERIA H.T H.P. T.C. REQUISITO LCC 100 [INTRODUCCION A LA DISCIPLINA COMPUTACIONAL][35] 5 0 10 S/R LCC 102 [MATEMATICAS ELEMENTALES][36] 5 0 10 S/R LCC 104 [PROGRAMACION][37] 4 2 10 S/R LCC 106 [ENSAMBLADOR][38] 4 2 10 S/R TCU 100 [LENGUA EXTRANJERA I ][39] 0 5 5 S/R TCU 234 CULTURA Y ETICA UNIVERSITARIA 1 3 5 S/R LCC 108 [ALGEBRA SUPERIOR][40] 4 2 10 S/R LCC 110 [CALCULO DIFERENCIAL][41] 4 2 10 LCC 102 LCC 112 [PROGRAMACION AVANZADA][42] 4 2 10 LCC 104 LCC 114 [CALCULO INTEGRAL][43] 4 2 10 LCC 110 LCC 116 [MATEMATICAS DISCRETAS][44] 5 0 10 LCC 102 TCU 101 [LENGUA EXTRANJERA II ][45] 0 5 5 TCU 100 LCC 208 [GEOMETRIA ANALITICA CON ALGEBRA LINEAL][46] 4 2 10 LCC 108 LCC 200 [ALGORITMOS Y ESTRUCTURAS DE DATOS][47] 4 2 10 LCC 112 LCC 202 [BASES DE DATOS][48] 4 2 10 LCC 200 LCC 214 [CIRCUITOS ELECTRICOS][49] 4 2 10 LCC 108/LCC 114 LIC 206 [ECUACIONES DIFERENCIALES][50] 5 0 10 LCC 114 LIC 208 [GRAFICACION][51] 4 2 10 LCC 208 TCU 203 [LENGUA EXTRANJERA III ][52] 0 5 5 TCU 101 LCC 210 [PROGRAMACION DE SISTEMAS][53] 4 2 10 LCC 106 LCC 212 [SISTEMAS DIGITALES ][54] 4 2 10 LCC 214/LCC 116 LIC 214 [CIRCUITOS ELECTRONICOS ][55] 4 2 10 LCC 214 LCC 318 [PROGRAMACION CONCURRENTE Y PARALELA ][56] 4 2 10 LCC 200 LCC 218 [LOGICA MATEMATICA][57] 5 0 10 LCC 116 TCU 204 [LENGUA EXTRANJERA IV ][58] 0 5 5 TCU 203 **TOTAL DE CREDITOS** **225** Nivel Formativo **CODIGO** **MATERIA** **H.T** **H.P.** **T.C.** **REQUISITO** LIC 300 [PROBABILIDAD Y ESTADISTICA][59] 5 0 10 LCC 114 LIC 302 [TRANSMISION Y COMUNICACION DE DATOS][60] 4 2 10 LC 300 LIC 304 [MODELOS DE REDES][61] 4 2 10 LIC 302 LIC 306 [INTERCOMUNICACION Y SEGURIDAD EN REDES][62] 4 2 10 LIC 304 LCC 224 [INGENIERIA DE SOFTWARE][63] 5 0 10 LCC 200 LCC 226 [SISTEMAS OPERATIVOS CENTRALIZADOS Y DISTRIBUIDOS][64] 5 0 10 LCC 210/LCC 318 LIC 312 [SISTEMAS DE TIEMPO REAL][65] 4 2 10 LCC 226 LIC 314 [INGENIERIA DE SOFTWARE AVANZADA][66] 5 0 10 LCC 224 LIC 316 [DISPOSITIVOS LOGICOS PROGRAMABLES][67] 4 2 10 LCC 212 LIC 318 [MICROPROCESADORES E INTERFACES][68] 4 2 10 LCC 212/LIC 214 LIC 320 [TEORIA DE CONTROL][69] 4 2 10 LIC 206/LIC 318 LIC 322 [ARQUITECTURA DE COMPUTADORAS][70] 4 2 10 LIC 316 LIC 324 [METODOS NUMERICOS][71] 4 2 10 NIVEL BASICO TCU 436 ETICA Y PRACTICA PROFESIONAL 1 3 5 TCU 234 LIC 326 [INGENIERIA DE PROYECTOS Y PRACTICAS PROFESIONALES ][72] 3 4 10 NIVEL BASICO **TOTAL DE CREDITOS** **145** Nivel Optativo CODIGO MATERIA H.T H.P. T.C. REQUISITO LIC 490 [SIMULACION][73] 5 0 10 LIC 300 LCC 498 [INVESTIGACION DE OPERACIONES][74] 5 0 10 NIVEL BASICO LCC 591 [INTERFACES HUMANO-COMPUTADORA][75] 5 0 10 LCC 224 LCC 322 [COMPILADORES][76] 5 0 10 NIVEL BASICO LIC 306 [INTELIGENCIA ARTIFICIAL][77] 5 0 10 LCC 218 LIC 495 [CONTROL DIGITAL][78] 4 2 10 LIC 320 LIC 496 [ARQUITECTURA AVANZADA DE COMPUTADORAS][79] 3 4 10 LIC 322 LIC 497 [ROBOTICA][80] 4 2 10 LIC 495 LCC 594 [PROCESAMIENTO DIGITAL DE IMAGENES][81] 4 2 10 NIVEL BASICO LIC 499 [DISENO AVANZADO DE BASES DE DATOS ][82] 4 2 10 NIVEL BASICO LIC 590 [SERVICIOS AVANZADOS EN INTERNET ][83] 4 2 10 NIVEL BASICO LIC 591 [PROGRAMACION DE SERVICIOS DE INTERNET ][84] 4 2 10 LIC 590 LIC 592 [TOPICOS SELECTOS DE LA COMPUTACION ][85] 5 0 10 NIVEL BASICO LIC 593 [VISUALIZACION DE LA INFORMACION ][86] 5 0 10 LIC 300 LIC 594 [APRENDIZAJE MECANICO (MACHINE LEARNING) ][87] 5 0 10 LIC 593 LIC 595 [DESARROLLO DE EMPRENDEDORES ][88] 0 5 5 NIVEL BASICO SUBTOTAL DE CREDITOS 50 TOTAL DE CREDITOS DE INGENIERIA 420 Jose Andres Vazquez Flores - Secretario Academico - Tel. 2295500- Ext 7204 - email: andrex@cs.buap.mx . [1]: imagenes/inicio.jpg [2]: index.html [3]: imagenes/profesores.JPG [4]: profesores.html [5]: imagenes/alumnos.jpg [6]: alumnos.html [7]: imagenes/horario.JPG [8]: horarios.html [9]: imagenes/protocolos.jpg [10]: planes.html [11]: imagenes/actas.JPG [12]: cua.html [13]: imagenes/logo1.jpg [14]: http://www.cs.buap.mx [15]: materiasLicMUM.html [16]: mapaLicMUM.pdf [17]: planes/Programa_Academico_Licenciatura2005.pdf [18]: materiasLic2005.html [19]: planes/MAPA_PLANLIC2005.pdf [20]: planes/MapagraficoLicPlan2005.pdf [21]: planes/MAPA_PLANLIC2000.pdf [22]: materiasLic2000.html [23]: planes/MAPA-LIC2000.pdf [24]: planes/equivalenciasLicenciatura.pdf [25]: materiasIngMUM.html [26]: mapaIngMUM.pdf [27]: planes/Programa_Academico_Ingenieria2005.pdf [28]: materiasIng2005.html [29]: planes/MAPA_PLANING2005.pdf [30]: planes/MapagraficoIngPlan2005.pdf [31]: planes/MAPA_PLANING2000.pdf [32]: materiasIng2000.html [33]: planes/MAPA-Ing2000.pdf [34]: planes/equivalenciasIngenieria.pdf [35]: planes/CONTENIDOS ING 2005/NIVEL BASICO/INTRODUCCION A LA DISCIPLINA COMPUTACIONAL.pdf [36]: planes/CONTENIDOS ING 2005/NIVEL BASICO/MATEMATICAS ELEMENTALES.pdf [37]: planes/CONTENIDOS ING 2005/NIVEL BASICO/Programacion.pdf [38]: planes/CONTENIDOS ING 2005/NIVEL BASICO/ENSAMBLADOR.pdf [39]: planes/CONTENIDOS ING 2005/NIVEL BASICO/LENGUA EXTRANJERA 1.pdf [40]: planes/CONTENIDOS ING 2005/NIVEL BASICO/ALGEBRA SUPERIOR.pdf [41]: planes/CONTENIDOS ING 2005/NIVEL BASICO/CALCULO DIFERENCIAL.pdf [42]: planes/CONTENIDOS ING 2005/NIVEL BASICO/Programacion Avanzada.pdf [43]: planes/CONTENIDOS ING 2005/NIVEL BASICO/CALCULO INTEGRAL.pdf [44]: planes/CONTENIDOS ING 2005/NIVEL BASICO/MATEMATICAS DISCRETAS.pdf [45]: planes/CONTENIDOS ING 2005/NIVEL BASICO/LENGUA EXTRANJERA II.pdf [46]: planes/CONTENIDOS ING 2005/NIVEL BASICO/GEOMETRIA ANALITICA CON ALGEBRA LINEAL.pdf [47]: planes/CONTENIDOS ING 2005/NIVEL BASICO/Algoritmos y Estructura de Datos.pdf [48]: planes/CONTENIDOS ING 2005/NIVEL BASICO/Bases de Datos.pdf [49]: planes/CONTENIDOS ING 2005/NIVEL BASICO/Circuitos Elctricos.pdf [50]: planes/CONTENIDOS ING 2005/NIVEL BASICO/Ecuaciones Diferenciales.pdf [51]: planes/CONTENIDOS ING 2005/NIVEL BASICO/GRAFICACION.pdf [52]: planes/CONTENIDOS ING 2005/NIVEL BASICO/LENGUA EXTRANJERA III.pdf [53]: planes/CONTENIDOS ING 2005/NIVEL BASICO/PROGRAMACION DE SISTEMAS.pdf [54]: planes/CONTENIDOS ING 2005/NIVEL BASICO/Sistemas Digitales.pdf [55]: planes/CONTENIDOS ING 2005/NIVEL BASICO/Circuitos Electronicos.pdf [56]: planes/CONTENIDOS ING 2005/NIVEL BASICO/Programacion Concurrente y Paralela.pdf [57]: planes/CONTENIDOS ING 2005/NIVEL BASICO/LOGICA MATEMATICA.pdf [58]: planes/CONTENIDOS ING 2005/NIVEL BASICO/LENGUA EXTRANJERA IV.pdf [59]: planes/CONTENIDOS ING 2005/NIVEL FORMATIVO/Probabilidad y Estadistica.pdf [60]: planes/CONTENIDOS ING 2005/NIVEL FORMATIVO/Transmision y Comunicacion de Datos.pdf [61]: planes/CONTENIDOS ING 2005/NIVEL FORMATIVO/MODELOS DE REDES.pdf [62]: planes/CONTENIDOS ING 2005/NIVEL FORMATIVO/Intercomunicacion y Seguridad en Redes.pdf [63]: planes/CONTENIDOS ING 2005/NIVEL FORMATIVO/Ingenieria de Software.pdf [64]: planes/CONTENIDOS ING 2005/NIVEL FORMATIVO/Sistemas Operativos Centralizados y Distribuidos.pdf [65]: planes/CONTENIDOS ING 2005/NIVEL FORMATIVO/SISTEMAS DE TIEMPO REAL.pdf [66]: planes/CONTENIDOS ING 2005/NIVEL FORMATIVO/Ingenieria se Software Avanzada.pdf [67]: planes/CONTENIDOS ING 2005/NIVEL FORMATIVO/Dispositivos Logicos Programables.pdf [68]: planes/CONTENIDOS ING 2005/NIVEL FORMATIVO/MICROPROCESADORES E INTERFACES.pdf [69]: planes/CONTENIDOS ING 2005/NIVEL FORMATIVO/Teoria de Control.pdf [70]: planes/CONTENIDOS ING 2005/NIVEL FORMATIVO/Arquitectura de Computadoras.pdf [71]: planes/CONTENIDOS ING 2005/NIVEL FORMATIVO/Metodos numericos.pdf [72]: planes/CONTENIDOS ING 2005/NIVEL FORMATIVO/Ingeniera de Proyectos_Y_Practica_Profesional.pdf [73]: planes/CONTENIDOS ING 2005/OPTATIVAS/SIMULACION.pdf [74]: planes/CONTENIDOS ING 2005/OPTATIVAS/Investigacion_de_Operaciones.pdf [75]: planes/CONTENIDOS ING 2005/OPTATIVAS/INTERFACES HUMANO COMPUTADORA.pdf [76]: planes/CONTENIDOS ING 2005/OPTATIVAS/COMPILADORES.pdf [77]: planes/CONTENIDOS ING 2005/OPTATIVAS/INTELIGENCIA ARTIFICIAL.pdf [78]: planes/CONTENIDOS ING 2005/OPTATIVAS/Control Digital.pdf [79]: planes/CONTENIDOS ING 2005/OPTATIVAS/Arquitectura Avanzada de Computadoras.pdf [80]: planes/CONTENIDOS ING 2005/OPTATIVAS/ROBOTICA.pdf [81]: planes/CONTENIDOS ING 2005/OPTATIVAS/PROCESAMIENTO DIGITAL DE IMAGENES.pdf [82]: planes/CONTENIDOS ING 2005/OPTATIVAS/Diseno Avanzado en Base de Datos.pdf [83]: planes/CONTENIDOS ING 2005/OPTATIVAS/SERVICIOS AVANZADOS en INTERNET.pdf [84]: planes/CONTENIDOS ING 2005/OPTATIVAS/Programacion de SERVICIOS en Internet.pdf [85]: planes/CONTENIDOS ING 2005/OPTATIVAS/Topicos Selectos de la Computacion.pdf [86]: planes/CONTENIDOS ING 2005/OPTATIVAS/Visualizacion de Informacion.pdf [87]: planes/CONTENIDOS ING 2005/OPTATIVAS/APRENDIZAJE MECANICO.pdf [88]: planes/CONTENIDOS ING 2005/OPTATIVAS/Emprendedores.pdf
50b45a275fa7351b70000584 BENEMERITA UNIVERSIDAD AUTONOMA DE PUEBLA FACULTAD CIENCIAS DE LA COMPUTACION PROGRAMA DE LA MATERIA CORRESPONDIENTE A LA INGENIERIA EN CIENCIAS DE LA COMPUTACION. Coordinacion: Area de Robotica NOMBRE DE LA MATERIA: Teoria de Control Clave: LIC 320 Nivel de Ubicacion: Formativo Creditos: 10 Tipo de Materia: Obligatoria Modalidad: Escolarizado PRE-REQUISITOS: LIC 206 Ecuaciones diferenciales LIC 318 Microprocesadores e Interfaces MATERIA CONSECUENTE: Ninguna TIEMPO TOTAL ASIGNADO: 80 Hrs. PRIMAVERA OE OTONO HRS. TEORICAS/SEM: 4Hrs. HRS. PRACTICAS/SEM: 2 VERANO HRS. TEORICAS/SEM: 8 Hrs. HRS. PRACTICAS/SEM: 4 AUTOR(ES) DEL PROGRAMA: M.C. Apolonio Ata Perez Dr. Francisco Rambo Rodriguez Enriquez Dr. Mario Mauricio Bustillo Diaz REVISADO POR: M.C. Apolonio Ata Perez Dr. Mario Mauricio Bustillo Diaz M. C. Graciano Cruz Almanza APROBADO POR: AUTORIZADO POR: FECHA DE ELABORACION/REVISION: 11 de Septiembre de 2007 ______________________________________________________________________________________Benemerita Universidad Autonoma de Puebla. Facultad de Ciencias de la Computacion. Licenciatura en Ciencias de la Computacion . Pag. 1 JUSTIFICACION: La teoria del control ha jugado un papel vital en el avance de la ciencia aplicada y las ingenierias ypor lo tanto su aplicacion es diversa. El conocimiento de los principios basicos de esta teoria esfundamental para el desarrollo de sistemas de control digital y robotica. OBJETIVO GENERAL DE LA MATERIA: Que el alumno analice y sintetice sistemas de control automatico; para su aplicacion en laprogramacion de control de procesos, sistemas roboticas y deautomatizacion industrial. CONTRIBUCION DE LA SIGNATURA AL PERFIL DE EGRESO: Esta signatura contribuye al perfil del egresado dandole los conocimientos para analizar, sintetizar yprogramar sistemas de control para la ciencia, la industria,y sistemas roboticos. ______________________________________________________________________________________Benemerita Universidad Autonoma de Puebla. Facultad de Ciencias de la Computacion. Licenciatura en Ciencias de la Computacion . Pag. 2 CONTENIDO TEMATICO UNIDAD: 1 TITULO: INTRODUCCION A SISTEMAS AUTOMATICOS OBJETIVO ESPECIFICO: Que el estudiante identifique la clasificacion de los distintos sistemas de control CONTENIDO DE LA UNIDADTiempo deimparticion(hrs.). Actividades de AprendizajeTecnicasRecursos NecesariosHT HP 1.1 Definiciones 4Introducciony Motivacion alos sistemas de control. Exposicion delProfesor y discusionSalon, pizarron,plumones, proyectorPresentaciony explicaciondegrupal.definiciones de la teoria de control. de acetatos odevideo 1.2 Clasificacion de los sistemas 3Comprensiony Elicitacion deIdeas. Clasificacion de sistemas de control clasico, moderno y optimo Discusion del Profesorcon uso de analogias. Salon, pizarron,plumones, proyectorde acetatos o de video HORAS TOTALES:7UNIDAD: 2 TITULO: MODELOS MATEMATICOS ______________________________________________________________________________________Benemerita Universidad Autonoma de Puebla. Facultad de Ciencias de la Computacion. Licenciatura en Ciencias de la Computacion . Pag. 3 OBJETIVO ESPECIFICO: Que el estudiante aplique metodos de variable compleja, transformada de Laplace y tranformada de Fourier para el analisis de sistemas de control automatico.. CONTENIDO DE LA UNIDADTiempo deimparticion(hrs.). Actividades de AprendizajeTecnicasRecursos NecesariosHT HP 1.1 Variable Compleja 6Aplicacion del Conocimiento.Resolver problemas. Aplicacion de la teroria de variable compleja a sistemas de control automatico. Exposicion delProfesor; Solucion de preguntas y/o problemas Salon, pizarron,plumones, proyectorde acetatos o de video 1.2 Transformada de Laplace 6Aplicacion delConocimiento. Resolver problemas. Aplicacion de los metodos de transformada de Laplace al modelado y analisis de sistemas de control autmatico. Exposicion delProfesor; Solucion de preguntas y/o problemasSalon, pizarron,plumones, proyectorde acetatos o de video 1.3 Transformada de Fourier 6Aplicacion del Conocimiento.Resolver problemas. Exposicion delProfesor; Salon, pizarron,plumones, proyectorAplicacion de los metodos deSolucion depreguntasde acetatos odeHORAS TOTALES:18transformadade Fourier alanalisis de sistemas de control automatico. y/o problemasvideo______________________________________________________________________________________Benemerita Universidad Autonoma de Puebla. Facultad de Ciencias de la Computacion. Licenciatura en Ciencias de la Computacion . Pag. 4 UNIDAD: 3 TITULO: FUNCIONES DE TRANSFERENCIA OBJETIVO ESPECIFICO: Que el estudiante sepa modelar un sistema por medio de funciones de transferencia. CONTENIDO DE LA UNIDADTiempo deimparticion(hrs.). Actividades de AprendizajeTecnicasRecursos NecesariosHT HP 1.1 Representacion de Lazo Cerrado 6Aplicacion del Conocimiento.Resolver problemas empleando funciones de transferencia. Exposicion delProfesor. Solucion de preguntas y/o problemas Salon, pizarron,plumones, proyectorde acetatos o de video HORAS TOTALES:6UNIDAD: 4 TITULO: DIAGRAMAS DE BLOQUES OBJETIVO ESPECIFICO: Que el estudiante sepa representar un sistema de control por medio de diagramas de bloques. ______________________________________________________________________________________Benemerita Universidad Autonoma de Puebla. Facultad de Ciencias de la Computacion. Licenciatura en Ciencias de la Computacion . Pag. 5 CONTENIDO DE LA UNIDADTiempo deimparticion(hrs.). Actividades de AprendizajeTecnicasRecursos NecesariosHT HP 1.1 Respuesta en frecuencia 6Aplicacion delConocimiento. Resolver problemas representandolos por diagramas de bloques. Resolver problemas de respuesta en frecuencia de sistemas de control empleando metodos de transformada ExposiciondelProfesor. Solucion de preguntas y/o problemas Salon, pizarron,plumones, proyectorde acetatos o de video 1.2 Diagrama de Bloques 3HORAS TOTALES:9UNIDAD: 5 TITULO: ESTABILIDAD DE LOS SISTEMAS LINEALES OBJETIVO ESPECIFICO: Que le estudiante sepa analizar la estabilidad de un sistema de control automatico. CONTENIDO DE LA UNIDADTiempo deimparticion(hrs.). Actividades de AprendizajeTecnicasRecursos Necesarios______________________________________________________________________________________Benemerita Universidad Autonoma de Puebla. Facultad de Ciencias de la Computacion. Licenciatura en Ciencias de la Computacion . Pag. 6 HT HP 1.1 Definicion 2Comprension. Identificar yentender las definiciones y conceptos de estabilidad en sistemas de control lineales.ExposiciondelProfesor. Solucion de preguntas y/o problemas Salon, pizarron,plumones, proyectorde acetatos o de video 1.2 Criterios 6Aplicacion del Conocimiento.Resolver problemas que analicen la estabilidad de sistemas de control lineales bajo distintos criterios de establidad. ExposiciondelProfesor. Solucion de preguntas y/o problemas Salon, pizarron,plumones, proyectorde acetatos o de video HORAS TOTALES:8UNIDAD: 6 TITULO: CONTROLADORES ANALOGICOS OBJETIVO ESPECIFICO: Que el estudiante aprenda a resolver problemas con controladores automaticoa analogicos. CONTENIDO DE LA UNIDADTiempo deimparticion(hrs.). Actividades de AprendizajeTecnicasRecursos NecesariosHT HP 1.1 Control de Dos Posiciones 6Comprensiony AplicaciondelConocimiento. Resolver problemas que analicen y ExposiciondelProfesor. Solucion de preguntas y/oSalon, pizarron,plumones, proyectorde acetatos ode______________________________________________________________________________________Benemerita Universidad Autonoma de Puebla. Facultad de Ciencias de la Computacion. Licenciatura en Ciencias de la Computacion . Pag. 7 sinteticen sistemas de controlproblemasvideolineales con la ley de control de dos posiciones. 1.2 Control Proporcional 4Comprensiony AplicaciondelConocimiento. Resolver problemas que analicen y ExposiciondelProfesor. Solucion de preguntas y/oSalon, pizarron,plumones, proyectorde acetatos o de sinteticen sistemas de controlproblemaslineales con la ley de control proporcional. video1.3 Control Proporcional Integral 5Comprensiony AplicaciondelConocimiento. Resolver problemas que analicen y ExposiciondelProfesor. Solucion de preguntas y/o Salon, pizarron,plumones, proyectorde acetatos o de sinteticen sistemas de controlproblemaslineales con la ley de control proporcional integral. video1.4 Control Proporcional Derivativo 5Comprensiony AplicaciondelConocimiento. Resolver problemas que analicen y sinteticen sistemas de control lineales con la ley de control proporcional derivativo. HORAS TOTALES:20UNIDAD: 7 TITULO: Metodos de Sintonizado de un PID OBJETIVO ESPECIFICO: Que el estudiante sepa resolver problemas de sintonia de controladores PID: ______________________________________________________________________________________Benemerita Universidad Autonoma de Puebla. Facultad de Ciencias de la Computacion. Licenciatura en Ciencias de la Computacion . Pag. 8 CONTENIDO DE LA UNIDADTiempo deimparticion(hrs.). Actividades de AprendizajeTecnicasRecursos NecesariosHT HP 1.1 Control PID 6Comprension y Aplicaciondel Conocimiento. Resolverproblemas que analicen y ExposiciondelProfesor. Solucion de preguntas y/oSalon, pizarron,plumones, proyectorde acetatos o de sinteticen sistemas de controlproblemaslineales con la ley de control proporcional derivativo video1.2 Sintonizacion de controles PID 6Comprension y Aplicaciondel Conocimiento. Resolverproblemas de sintonizacion de controles PID. ExposiciondelProfesor. Solucion de preguntas y/o problemas Salon, pizarron,plumones, proyectorde acetatos o de video HORAS TOTALES:12PRACTICAS UNIDAD NOMBRE DE LA PRACTICA OBJETIVO HORAS CRITERIOS DE EVALUACION EXAMENES PARCIALES DEPARTAMENTALES Parcial Contenido a evaluar Periodos I Unidad 1, 2 y 3 5a. Semana del Curso II Unidad 4 y 5 10a. Semana del Curso ______________________________________________________________________________________Benemerita Universidad Autonoma de Puebla. Facultad de Ciencias de la Computacion. Licenciatura en Ciencias de la Computacion . Pag. 9 III Unidad 6 y 7 16a. Semana del Curso Asistencias: % Proyecto Final: 10 Tareas: 15 Trabajos de Investigacion: 15 Examenes Parciales 60 TOTAL: 100 REQUISITOS DE ACREDITACION: Tener una calificacion promedio de los examenes parciales igual o mayor a seis. 80% de asistencias al curso. FOMENTO DE VALORES: Se formara al estudiante para resolver problemas de control automatico de acuerdo a las metodologias convencionalmente empleadas en esta area. BIBLIOGRAFIA: 1.- Dorf, R. C., fiSistemas Automaticos de Control Teoria y Practicafl, Addison-Wesley, 1986. 2.- Rubin O., fiThe Design of Automatic Control Systemsfl, Artech House, 1990. 3.- Ogata, K., fiIngenieria de Control Modernafl, McGraw-Hill, 1996. B: Basico C: Complementario TITULAR (RESPONSABLE) DE LA MATERIA: FECHA DE ELABORACION Y AUTOR(ES) DEL PROGRAMA: ______________________________________________________________________________________Benemerita Universidad Autonoma de Puebla. Facultad de Ciencias de la Computacion. Licenciatura en Ciencias de la Computacion . Pag. 10
50b46c2e5fa7351b700008df BENEMERITAUNIVERSIDADAUTONOMADEPUEBLAFACULTADDECIENCIASDELACOMPUTACIONProfr.CarlosAlbertoLopezAndradeMateria:AlgebraSuperiorTarea#1(InduccionMatematica)Demuestreque:1.8n2IN:2n+n3esdivisiblepor3.2.8n2IN:n(n2+5)esdivisiblepor6.3.8n2IN:32n+28n9esdivisiblepor64.4.8n2IN:7n2nesdivisiblepor5.5.8n2IN:4n1esdivisiblepor3.6.8n2IN:11n4nesdivisiblepor7.7.8n2IN:32n+1+2n+2esdivisiblepor7.8.8n2IN:1+4+7++(3n2)=n(3n1)2.9.8n2IN:2+5+8++(3n1)=n(3n+1)2.10.8n2IN:1+2+4+8++2n=2n+11.11.8n2IN:1+12+14++12n=212n.12.8n2IN:1+3+9+27++3n=3n+112.13.8n2IN:113+19++(13)n=34[1(13)n+1].14.8n2IN:112+123++1n(n+1)=nn+1.15.8n2IN:1123+1234++1n(n+1)(n+2)=n(n+3)4(n+1)(n+2).16.8n2IN:01!+12!+23!++n1n!=11n!.17.8n2IN:13+232+333++n3n=(2n1)3n+1+34.18.8n2IN:n+n2espar.19.8n2IN:anbnesdivisibleporab.[Sugerencia:ak+1bk+1=ak(ab)+(akbk)b]20.8n;m2IN:(an)m=anm.CarlosAlbertoLopezAndrade1FCC-BUAP 21.8n2IN:n<2n.22.8n2IN:1+2n3n.23.8n2IN:n4)2nn2.24.8n2IN:n4)2n<n!.25.8n2IN:n>6)3n<n!.Puebla,Pue.,a16deenerode2011CarlosAlbertoLopezAndrade2FCC-BUAP
50b442485fa735169f00007e Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 98 7 Infraestructura Servicios de computo 7.1. El Software recomendado para cada una de las asignaturas debe existir y estar disponible para el uso de los alumnos y personal docente. Para cada asignatura mencionar el software que se utiliza y si esta disponible dentro de la institucion. Asignatura Software Describir su disponibilidad Algebra Superior Matlab Mathematica Se cuenta con la licencia Academica. Se cuenta con la licencia Academica. Algoritmos y Estructuras de Datos Java 2 SE Development Kit (SDK) Microsoft Visual C++ 6 Descarga gratuita del sitio: http://java.sun.com/j2se/ Se cuenta con la licencia Academica. Base de Datos Microsoft SQL Server MySQL Oracle 9i Application Server Java 2 SE Development Kit (SDK) Se cuenta con la licencia Academica. Descarga gratuita del sitio: http://dev.mysql.com/downloads/ Se cuenta con la licencia Academica. Descarga gratuita del sitio: http://java.sun.com/j2se/ Calculo diferencial Microsoft Excel Se cuenta con la licencia Academica. Calculo integral Microsoft Excel Maxima 5.15 DrGeo 1.0.0 Se cuenta con la licencia Academica. Descarga gratuita del sitio: http://maxima.sourceforge.net Descarga gratuita del sitio: http://www.ofset.org/drgeo Circuitos Electricos Matlab 6.5 Electronics WorkBench Se cuenta con la licencia Academica. Se utiliza una version de prueba. Ensamblador NASM Licencia GLP, Descarga gratuita del sitio: http://sourceforge.net/project/showfiles.php?group_id=6208 Geometria Analitica con Algebra lineal Maple 10 Se cuenta con la licencia. Graficacion Java 2 SE Development Kit (SDK) NetBeans Autocad 2000 Delphi Descarga gratuita del sitio: http://java.sun.com/j2se/ Descarga gratuita del sitio: http://www.netbeans.org/downloads/ Se cuenta con la licencia. Se cuenta con la licencia. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 99 Asignatura Software Describir su disponibilidad Introduccion a la Disciplina Computacional Fedora 8 Se encuentra instalado en el servidor de correo para alumnos de la FCC. Logica Matematica SWI-Prolog Lisp Descarga gratuita del sitio: http://www.swi-prolog.org/ Descarga gratuita del sitio: http://clisp.cons.org/ Matematicas Discretas Maple Mathematica Se cuenta con la licencia Academica. Se cuenta con la licencia Academica. Programacion Compilador Dev CPP 4.8.9 de Lenguaje C. Fedora 8 Disponible en el FTP de la Facultad de Ciencias de la Computacion. Se encuentra instalado en el servidor para uso exclusivo de los alumnos de la FCC. Programacion Avanzada Microsoft Visual C++ 6 Se cuenta con la licencia Academica. Programacion Concurrente y Paralela Java 2 SE Development Kit (SDK) Descarga gratuita del sitio: http://java.sun.com/j2se/ Programacion de Sistemas Compilador GCC de lenguaje C Se encuentra instalado en el servidor para uso exclusivo de los alumnos de la FCC. Sistemas Digitales PLDShell Simulador LogicWorks Disponible en el FTP de la Facultad de Ciencias de la Computacion. Descarga gratuita del sitio: http://www.logicworks4.com/lw400/lw4update.html Arquitectura Funcional de Computadoras Lenguaje VHDL, compilador para VHDL. Disponible en el laboratorio de redes. Ingenieria de Software NetBeans, Modulo UML Java 2 SE Development Kit (SDK) Rational Rose Visual Paradigm Descarga gratuita del sitio: http://www.netbeans.org/downloads/index.html Descarga gratuita del sitio: http://java.sun.com/j2se/ Se cuenta con la licencia Academica. Se cuenta con la licencia Academica. Ingenieria de Software Avanzada NetBeans, Modulo UML Java 2 SE Development Kit (SDK) Rational Rose Descarga gratuita del sitio: http://www.netbeans.org/downloads/index.html Descarga gratuita del sitio: http://java.sun.com/j2se/ Se cuenta con la licencia Academica. Intercomunicacion y Seguridad en Redes de Computadoras Distribucion Linux Disponible en el FTP de la Facultad de Ciencias de la Computacion. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 100 Asignatura Software Describir su disponibilidad Sistemas Distribuidos Distribucion Linux Disponible en el FTP de la Facultad de Ciencias de la Computacion. Compiladores Jflex Compilador Dev CPP 4.8.9 de Lenguaje C. Java 2 SE Development Kit (SDK) Descarga gratuita del sitio: http://jflex.de/download.html Disponible en el FTP de la Facultad de Ciencias de la Computacion. Descarga gratuita del sitio: http://java.sun.com/j2se/ Inteligencia Artificial SWI-Prolog Lisp Descarga gratuita del sitio: http://www.swi-prolog.org/ Descarga gratuita del sitio: http://clisp.cons.org/ Interfaces Humano-Computadora PHP, Apache y MySQL Descarga gratuita del sitio: http://www.wampserver.com/en/download.php Procesamiento Digital de Imagenes Java 2 SE Development Kit (SDK) Microsoft Visual Studio Delphi 6.0 Descarga gratuita del sitio: http://java.sun.com/j2se/ Se cuenta con la licencia Academica. Se cuenta con la licencia de uso. Topicos Selectos de la Computacion I Compilador GCC de lenguaje C Se encuentra instalado en el servidor para uso exclusivo de los alumnos de la FCC. Fundamentos de Lenguajes de Programacion ML Descarga libre del sitio: http://www.itu.dk/~sestoft/mosml.html (Se anexa Programa Academico de la Licenciatura en Ciencias de la Computacion actualizacion 2005, ver apendice 7.1.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 101 7.2. Todo programa debe contar como minimo con el siguiente software: Lenguajes de programacion, herramientas CASE, manejadores de base de datos y paqueteria en general. Describir los siguientes elementos de la infraestructura de software, incluyendo versiones y numero de licencias: Lenguajes de Programacion Herramientas CASE Manejadores de Bases de Datos Paqueteria en General Allegro CL / win 3d max 4.2 Clarion 5B Professional Acrobat Reader 4 Ariti Prolog 93 3d max discret Curso de Access 2.0 Acrobat Reader 5 Academic Alliance Faculty Tools 3D Studio Max Edu R3 Espanol dBase IV RunTime UNIX Acrobat Reader 6 Academic Alliance Student Tools 3D Studio Max Edu R4 Ingles JDBC Acrobat Reader 7 Access Developer Extensions 2003 Office Access 2003 Developer Extensions (Spanish) Adobe After Effects 4.1 Microsoft Access 2000 Acrobat Reader 8 Automatic Graph Layout 2007 (x86) - CD Adobe After Effects Pro v5.5 Microsoft Access 97 Adobe Ilustrator 8.0 Borland Builder C++ 4 AutoCAD 2000 Microsoft Access XP Adobe Ilustrator 8.0 Borland Builder C++ 5 AutoCAD 2000 2CD'S Microsoft FoxPro 6 Adobe Photoshop 5.5 Borland Delphi 4 Free HDL Microsoft SQL Server 6.5 Adobe Premiere 5.0 Borland Delphi 6 GPL EDA Microsoft SQL Server 7 Apache / Linux Borland JBuilder 3 Pro Jvision 3 Mini SQL 2 Aplicaciones Multimedia (Informatica Multimedia) Borland Turbo Assembler 3 Lab VIEW 7 Express MS Fox Pro / MSDOS Autocad 2000 Borland Turbo C++ 3 Macromedia Authoware 5 MS ODBC 3.0 PRO AXIS Admin Tools Borland Turbo Pascal 7.0 Macromedia director 7 Shockwave Internet Studio MySQL Character Studio - R2 C++ BUILDER PRO 6.0 Macromedia Director 8.5 Oracle 9i Application Server Character Studio R2 Delphi 7.0 Personal Macromedia Flash 4 Oracle Database Server 9i 9.0.1 Check out the latest software designed for. Intel MMX technology. Dev C++ 5.0 / gcc 3.2 Macromedia Flash 5 Oracle Internet Developer Suite 1.0.2.4.0 ClickArt 300,000 eMbedded VC++ 4.0 SP2 QFE 5308 Arm Compiler Macromedia Homesite 5 WIN Oracle Media Objects Curso interactivo Combustion demo CD Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 102 Lenguajes de Programacion Herramientas CASE Manejadores de Bases de Datos Paqueteria en General eMbedded VC++ 4.0 SP2 QFE 5308 Platman Macromedia Shockwave Studio Personal Oracle 7.0 win Corel DRAW 8 eMbedded Visual C++ 4.0 Macromedia Studio MX Postgress 8 CorelDraw 8 eMbedded Visual C++ 4.0 SP3 Macromedia Studio MX 1.1 WIN Progress 8 / win Curso de Borland C++ (Informatica multimedia) eMbedded Visual C++ 4.0 SP4 - Release Notes Multimedia Builder MP3 4 Progress 9.1B Curso de Lotus (Informatica Multimedia) eMbedded Visual C++ 4.0 SP4 National Instruments LabView 5 ProVision Plus Web Speed/Progress 8 Curso de Pintura (galeria multimedia) Gnu C y C++ (gcc) Online Resource (Demo CD) 4 dibujo arquitectonico por computadora ProVision Plus Web Speed/Progress 9 Curso de presentaciones y curso de Win zip (Informatica Multimedia) InfoPath 2003 Toolkit for Visual Studio 2005 Open EDA Curso de Tolbook (aplicaciones shareware) Java Script OrCad Pspice CyCORE, CULT3D 5.2 Kylix / C++ Builder 6.0 Pro Rational Rose win32 Easy CD Creator 5 Kylix 3.0 Profesional Scientific Work Place Enciclopedia Britanica CD Lisp (lpedw410) Spice Professional 4.2 Enciclopedia PC Multimedia M.E.L.L. - Developer Edition for MSDN Academic Alliance STATGRAPHICS 5 Plus Encoder 3.1 Matematica 5.0.0 Visual Paradigm UML 2.1 Especial Windows 95 (Informatica Multimedia) Microsoft .NET Academic Resource Kit Fortran 77 / 90 Linux Microsoft C# GhostView 4.4 Microsoft Fortran GSView 8.0 Microsoft J++ 6.0 Help & Scribble Microsoft Macro Assembler 3 HTML UAP v1.2 Microsoft Macro Assembler 6 ILog Optima Microsoft Macro Assembler 6.11 Install Shield Borland Microsoft Robotics Studio 1.0 - iRobot(r) Cre Install Wizard Microsoft Robotics Studio 1.0 - Tool Tips ITK Microsoft Robotics Studio 1.0 LabView Full Dev. System Windows 2000/NT/9X Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 103 Lenguajes de Programacion Herramientas CASE Manejadores de Bases de Datos Paqueteria en General Microsoft Visual Basic 6.0 Macromedia Fireworks 4 Microsoft Visual C++ 6 Maple V R4 Microsoft Visual Modeler Maple V R5.1 Microsoft Visual Studio .NET 2002 (Acad) Mathematica 4 Microsoft Visual Studio .NET 2003 (Fac Tools) McAfee Office 2002 Microsoft Visual Studio .NET 2003 (MSDN Lib) Microsoft Excel 2000 Microsoft Visual Studio .NET 2003 (Prereq) Microsoft Excel 97 Microsoft Visual Studio .NET 2003 (Std Tools) Microsoft Excel XP Microsoft Visual Studio .NET 2003 (Web Serv) Microsoft FrontPage 2002 Microsoft Visual Studio 2005 Prof (SQL Serv 2005) 32 bits Microsoft Office 2001 for Mac Microsoft Visual Studio 2005 Prof (SQL Serv 2005) 64 bits Microsoft Office 2004 Mac Prof Microsoft Visual Studio 2005 Prof (SQL Serv 2005) 64 bits Microsoft Office 2004 Mac Prof (Virtual PC Ver. 7) Occam Microsoft Office 2004 Mac Std Parallel C Microsoft Office v.X for Mac Parallel Pascal Microsoft Office XP (Media Content) Perl 5 Microsoft Office XP Prof PHP 3 Microsoft Office XP Prof - Press PHP 4 Microsoft Office XP Prof SP2 QuickBasic 4.5 Microsoft OutLook 2000 Spoke Microsoft OutLook 97 Sun Java 1.08 Microsoft OutLook XP Sun Java 1.1 Microsoft Press Office 2000 Prof V4 Sun Java 1.2 Microsoft Press Web Publishing 2000 Sun Java 1.3 Microsoft Project 2000 Sun Java 1.4 Microsoft Project 2002 Sun Java 1.5 Microsoft Publisher 2002 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 104 Lenguajes de Programacion Herramientas CASE Manejadores de Bases de Datos Paqueteria en General Tcl/Tk : linux/Win Wish8.2 Microsoft Visio 2000 VHDL Microsoft Visio Prof 2002 SP1 Visio for Enterprise Architects Microsoft Visio Prof 2002 SR1 Visio for Enterprise Architects - ISO Microsoft Word 2000 Visual Age for Java 2 Microsoft Word 97 Visual Basic .NET 2003 Microsoft Word XP Visual Basic 2.0 Professional - Full Install MikTex 2.3 Visual Basic 2005 Express Edition Multimedia Calculus Visual Basic 3.0 Professional - Full Install Multimedia Diff Equations Visual Basic 4.0A Multimedia Probabilty & Stat Visual Basic 6.0 Code Advisor Nero 5 Visual Basic 6.0, Enterprise Edition , Disc 1 Norton Antirus 2004 Visual Basic 6.0, Enterprise Edition , Disc 2 Norton Antivirus 5.0 Visual Basic 6.0, Enterprise Edition (Installation Notes) Norton Utilities 2000 Visual Basic for Applications 6.0 SDK Version 6.5 (x86) - CD Office XP Applications Visual Basic for Applications Software Development Kit Version 6.3 Office XP Suites Visual Basic for Applications Software Development Kit Version 6.4 Open Office 1.0 Visual C# 2005 Express Edition OpenGL 1.1 Visual C++ 1.0 OPTISound TM 64 Deluxe 1.03-D Visual C++ 1.52 Pixel View 3 / Sony Visual C++ 2.0 Prassi ABC Visual C++ 2005 Express Edition Primo Plus Visual C++ 4.2 Enterprise Edition Disc 1 ProcIma UAP 1.1 Visual C++ 4.2 Enterprise Edition Disc 2 Pulse 3D 5.0.1 Visual C++ Browser Toolkit v5.0 Scientific Word 3 Visual C++ Tools for Itanium-based Systems Secure Shell 3.2 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 105 Lenguajes de Programacion Herramientas CASE Manejadores de Bases de Datos Paqueteria en General Visual FoxPro "Sedna" CTP - June 2006 Shout 3d 2.5 Visual FoxPro "Sedna" CTP - June 2006 (Release Notes) SPSS 11.5 WIN Visual FoxPro 7.0 Star Office 5.1 Visual FoxPro 7.0 Service Pack 1 Star Office 5.1 Visual FoxPro 8.0 Statgraphics 5 Plus WIN Visual FoxPro 8.0 Service Pack 1 (x86) - Vecto 3D-MAX 1.2 Visual FoxPro 9.0 Service Pack 1 Video Excel, Trispectivo (The new estandar for 3D) Visual FoxPro 9.0 Service Pack 2 (x86) - Visual Basic, Curso Interactivo (Informatica Multimedia) Visual FoxPro Professional 9.0 VTK 4 Visual J# .NET Win FTP 32 LE Visual J# .NET Redistributable WinRar 3 Visual J# 2005 Express Edition Winzip 7 Visual J#.Net 2002 Standard Winzip 8 Visual SourceSafe 2005 Zaxwerks Classic Visual SourceSafe 6.0d MSDN Library Express for Visual Studio 2008 Service Pack 1 (x86, x64 WoW) - EXE Visual Studio .NET 2003 Enterprise Architect - CD1 MSDN Library for Visual Studio .NET 2003 - CD1 Visual Studio .NET 2003 Enterprise Architect - CD2 MSDN Library for Visual Studio .NET 2003 - CD2 Visual Studio .NET 2003 Enterprise Architect - Full Install MSDN Library for Visual Studio .NET 2003 - CD3 Visual Studio .NET 2003 Enterprise Architect - Full Install (Traditional Chinese) MSDN Library for Visual Studio 2005 - CD1 Visual Studio .NET 2003 Enterprise Developer - CD1 MSDN Library for Visual Studio 2005 - CD2 Visual Studio .NET 2003 Enterprise Developer - CD2 MSDN Library for Visual Studio 2005 - CD3 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 106 Lenguajes de Programacion Herramientas CASE Manejadores de Bases de Datos Paqueteria en General Visual Studio .NET 2003 Professional - Full Install msdn Library Visual Studio 6.0 Visual Studio .NET Academic Student Tools 2003 Visual Studio .NET Academic Teaching Tools 2003 Visual Studio 2005 Extensions for .NET Framework 3.0 (Windows Workflow Foundation) Visual Studio 2005 Professional Edition - CD 1 Visual Studio 2005 Professional Edition - CD 2 Visual Studio 2005 Professional Edition - DVD Visual Studio 2005 SDK v4.0 Visual Studio 2005 Service Pack 1 - DVD (Multilanguage) Visual Studio 2005 SP1 Update for Windows Vista (x86) Visual Studio 2005 Standard Edition Visual Studio 2005 Team Suite Visual Studio 2005 Tools for Applications SDK Visual Studio 2005 Tools for the 2007 Microsoft Office System Beta Visual Studio 2005 Tools for the Microsoft Office System Visual Studio 2008 Express Editions (x86 and x64 WoW) - DVD Visual Studio 2008 Express Editions with Service Pack 1 (x86, x64 WoW) - DVD Visual Studio 2008 Professional Edition (x86 and x64 WoW) - DVD Visual Studio 2008 Service Pack 1 (x86, x64 WoW) - DVD Visual Studio 2008 Standard Edition (x86 and x64 WoW) - DVD Visual Studio 6.0 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 107 Lenguajes de Programacion Herramientas CASE Manejadores de Bases de Datos Paqueteria en General Visual Studio Team System 2008 Architecture Edition (x86 and x64 WoW) - DVD Visual Studio Team System 2008 Architecture Edition (x86 and x64 WoW) - DVD Visual Studio Team System 2008 Database Edition (x86 and x64 WoW) - DVD Visual Studio Team System 2008 Database Edition (x86 and x64 WoW) - DVD Visual Studio Team System 2008 Development Edition (x86 and x64 WoW) - DVD Visual Studio Team System 2008 Development Edition (x86 and x64 WoW) - DVD Visual Studio Team System 2008 Team Foundation Server Service Pack 1 (x86, x64 WoW) - EXE Visual Studio Team System 2008 Team Foundation Server Workgroup Edition (x86 and x64 WoW) - DVD Visual Studio Team System 2008 Team Foundation Server Workgroup Edition (x86 and x64 WoW) - DVD Visual Studio Team System 2008 Team Suite (x86 and x64 WoW) - DVD Visual Studio Team System 2008 Team Suite (x86 and x64 WoW) - DVD Visual Studio Team System 2008 Test Edition (x86 and x64 WoW) - DVD Visual Studio.net Visual Web Developer 2005 Express Edition VRML 3 Windows Embedded CE 6.0 R2 (x64) - DVD Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 108 Lenguajes de Programacion Herramientas CASE Manejadores de Bases de Datos Paqueteria en General Windows SharePoint Services 3.0 Tools: Visual Studio 2008 Extensions, Version 1.2 (x86) - EXE Windows XP Embedded Windows XP Embedded with Service Pack 1 - ISO CD1 Windows XP Embedded with Service Pack 1 - ISO CD2 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 109 7.3. El programa debe tener a su disposicion dentro de la institucion, el equipo de computo indispensable para las practicas de las materias que lo requieran. Numero de estudiantes inscritos en el programa: 899 (en el cuatrimestre otono 2008) Explique de que manera se garantiza que el equipo de computo requerido este disponible para la realizacion de las practicas en las materias del programa que asi lo requieran: Nombre de la Materia Equipo de Computo Describir Disponibilidad Geometria Analitica con Algebra Lineal Seccion 101 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Geometria Analitica con Algebra Lineal Seccion 102 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Geometria Analitica con Algebra Lineal Seccion 103 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Geometria Analitica con Algebra Lineal Seccion 104 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Geometria Analitica con Algebra Lineal Seccion 105 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Geometria Analitica con Algebra Lineal Seccion 106 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Algebra Superior Seccion 101 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Algebra Superior Seccion 102 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Algebra Superior Seccion 103 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Algebra Superior Seccion 104 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Algebra Superior Seccion 105 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Algebra Superior Seccion 106 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Algebra Superior Seccion 107 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Calculo Diferencial Seccion 101 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Calculo Diferencial Seccion 102 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 110 Nombre de la Materia Equipo de Computo Describir Disponibilidad Calculo Diferencial Seccion 103 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Calculo Diferencial Seccion 104 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Calculo Diferencial Seccion 105 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Calculo Diferencial Seccion 106 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Calculo Integral Seccion 101 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Calculo Integral Seccion 102 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Calculo Integral Seccion 103 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Calculo Integral Seccion 104 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Calculo Integral Seccion 105 20 CPU PENTIUM IV DD80GB 512 RAM, 15 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el Modulo I para que los alumnos puedan realizar practicas. Programacion Seccion 110 42 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo II para que los alumnos puedan realizar practicas. Programacion Seccion 113 42 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo II para que los alumnos puedan realizar practicas. Ensamblador Seccion 101 42 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo II para que los alumnos puedan realizar practicas. Ensamblador Seccion 102 42 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo II para que los alumnos puedan realizar practicas. Ensamblador Seccion 104 42 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo II para que los alumnos puedan realizar practicas. Ensamblador Seccion 105 42 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo II para que los alumnos puedan realizar practicas. Ensamblador Seccion 106 42 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo II para que los alumnos puedan realizar practicas. Programacion Avanzada Seccion 101 42 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo II para que los alumnos puedan realizar practicas. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 111 Nombre de la Materia Equipo de Computo Describir Disponibilidad Programacion Avanzada Seccion 102 42 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo II para que los alumnos puedan realizar practicas. Programacion de Sistemas Seccion 101 42 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo II para que los alumnos puedan realizar practicas. Programacion de Sistemas Seccion 102 42 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo II para que los alumnos puedan realizar practicas. Programacion de Sistemas Seccion 103 42 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo II para que los alumnos puedan realizar practicas. Programacion de Sistemas Seccion 104 42 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo II para que los alumnos puedan realizar practicas. Programacion de Sistemas Seccion 105 42 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo II para que los alumnos puedan realizar practicas. Programacion de Sistemas Seccion 106 42 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo II para que los alumnos puedan realizar practicas. Bases de Datos Seccion 102 42 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo II para que los alumnos puedan realizar practicas. Programacion Seccion 101 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Programacion Seccion 102 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Programacion Seccion 103 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Programacion Seccion 104 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Programacion Seccion 105 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 112 Nombre de la Materia Equipo de Computo Describir Disponibilidad Programacion Seccion 106 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Programacion Seccion 107 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Programacion Seccion 108 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Programacion Seccion 109 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Programacion Seccion 111 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Programacion Seccion 112 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Programacion Seccion 114 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Programacion Seccion 115 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Algoritmos y Estructuras de Datos Seccion 101 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Algoritmos y Estructuras de Datos Seccion 102 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 113 Nombre de la Materia Equipo de Computo Describir Disponibilidad Algoritmos y Estructuras de Datos Seccion 103 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Algoritmos y Estructuras de Datos Seccion 104 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Algoritmos y Estructuras de Datos Seccion 105 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Algoritmos y Estructuras de Datos Seccion 106 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Programacion Avanzada Seccion 104 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Programacion Avanzada Seccion 105 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Programacion Avanzada Seccion 106 10 CPU CORE 2 DUAL DD500GB 2GBRAM, 5 CPU CORE 2DUO DD250GB 2GB RAM, 6 CPU PENTIUM IV DD 80GB 1GB RAM, 21 CPU PENTIUM IV DD80GB 512 RAM Se programan 2 horas a la semana en el Modulo III para que los alumnos puedan realizar practicas. Programacion Concurrente Seccion 101 26 CPU PENTIUM IV DD 80GB 512 RAM, 14 CPU CORE 2DUO DD 250GB Se programan 2 horas a la semana en el Modulo IV para que los alumnos puedan realizar practicas. Programacion Concurrente Seccion 102 26 CPU PENTIUM IV DD 80GB 512 RAM, 14 CPU CORE 2DUO DD 250GB Se programan 2 horas a la semana en el Modulo IV para que los alumnos puedan realizar practicas. Programacion Concurrente Seccion 103 26 CPU PENTIUM IV DD 80GB 512 RAM, 14 CPU CORE 2DUO DD 250GB Se programan 2 horas a la semana en el Modulo IV para que los alumnos puedan realizar practicas. Programacion Concurrente Seccion 104 26 CPU PENTIUM IV DD 80GB 512 RAM, 14 CPU CORE 2DUO DD 250GB Se programan 2 horas a la semana en el Modulo IV para que los alumnos puedan realizar practicas. Programacion Concurrente Seccion 105 26 CPU PENTIUM IV DD 80GB 512 RAM, 14 CPU CORE 2DUO DD 250GB Se programan 2 horas a la semana en el Modulo IV para que los alumnos puedan realizar practicas. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 114 Nombre de la Materia Equipo de Computo Describir Disponibilidad Graficacion Seccion 101 26 CPU PENTIUM IV DD 80GB 512 RAM, 14 CPU CORE 2DUO DD 250GB Se programan 2 horas a la semana en el Modulo IV para que los alumnos puedan realizar practicas. Graficacion Seccion 103 26 CPU PENTIUM IV DD 80GB 512 RAM, 14 CPU CORE 2DUO DD 250GB Se programan 2 horas a la semana en el Modulo IV para que los alumnos puedan realizar practicas. Graficacion Seccion 104 26 CPU PENTIUM IV DD 80GB 512 RAM, 14 CPU CORE 2DUO DD 250GB Se programan 2 horas a la semana en el Modulo IV para que los alumnos puedan realizar practicas. Graficacion Seccion 105 26 CPU PENTIUM IV DD 80GB 512 RAM, 14 CPU CORE 2DUO DD 250GB Se programan 2 horas a la semana en el Modulo IV para que los alumnos puedan realizar practicas. Graficacion Seccion 106 26 CPU PENTIUM IV DD 80GB 512 RAM, 14 CPU CORE 2DUO DD 250GB Se programan 2 horas a la semana en el Modulo IV para que los alumnos puedan realizar practicas. Ensamblador Seccion 103 26 CPU PENTIUM IV DD 80GB 512 RAM, 14 CPU CORE 2DUO DD 250GB Se programan 2 horas a la semana en el Modulo IV para que los alumnos puedan realizar practicas. Ensamblador Seccion 107 26 CPU PENTIUM IV DD 80GB 512 RAM, 14 CPU CORE 2DUO DD 250GB Se programan 2 horas a la semana en el Modulo IV para que los alumnos puedan realizar practicas. Procesamiento Digital de Imagenes Seccion 102 26 CPU PENTIUM IV DD 80GB 512 RAM, 14 CPU CORE 2DUO DD 250GB Se programan 2 horas a la semana en el Modulo IV para que los alumnos puedan realizar practicas. Procesamiento Digital de Imagenes Seccion 103 26 CPU PENTIUM IV DD 80GB 512 RAM, 14 CPU CORE 2DUO DD 250GB Se programan 2 horas a la semana en el Modulo IV para que los alumnos puedan realizar practicas. Bases de Datos Seccion 101 15 CPU CORE 2DUO DD250GB 2GB RAM, 7 CPU PENTIUM4 DD80GB 512RAM Se programan 2 horas a la semana en el laboratorio de Base de Datos para que los alumnos puedan realizar practicas. Bases de Datos Seccion 103 15 CPU CORE 2DUO DD250GB 2GB RAM, 7 CPU PENTIUM4 DD80GB 512RAM Se programan 2 horas a la semana en el laboratorio de Base de Datos para que los alumnos puedan realizar practicas. Fundamentos de Base de Datos Seccion 101 15 CPU CORE 2DUO DD250GB 2GB RAM, 7 CPU PENTIUM4 DD80GB 512RAM Se programan 2 horas a la semana en el laboratorio de Base de Datos para que los alumnos puedan realizar practicas. Fundamentos de Base de Datos Seccion 102 15 CPU CORE 2DUO DD250GB 2GB RAM, 7 CPU PENTIUM4 DD80GB 512RAM Se programan 2 horas a la semana en el laboratorio de Base de Datos para que los alumnos puedan realizar practicas. Arquitectura de Computadoras Seccion 103 1 CPU PENTIUM IV DD 40GB 256MB RAM, 14 CPU PENTIUM IV DD 80GB 256MB RAM Se programan 2 horas a la semana en el laboratorio de Hardware I para que los alumnos puedan realizar practicas. Microprocesadores e Interfaces Seccion 101 1 CPU PENTIUM IV DD 40GB 256MB RAM, 14 CPU PENTIUM IV DD 80GB 256MB RAM Se programan 2 horas a la semana en el laboratorio de Hardware I para que los alumnos puedan realizar practicas. Microprocesadores e Interfaces Seccion 102 1 CPU PENTIUM IV DD 40GB 256MB RAM, 14 CPU PENTIUM IV DD 80GB 256MB RAM Se programan 2 horas a la semana en el laboratorio de Hardware I para que los alumnos puedan realizar practicas. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 115 Nombre de la Materia Equipo de Computo Describir Disponibilidad Microprocesadores e Interfaces Seccion 103 1 CPU PENTIUM IV DD 40GB 256MB RAM, 14 CPU PENTIUM IV DD 80GB 256MB RAM Se programan 2 horas a la semana en el laboratorio de Hardware I para que los alumnos puedan realizar practicas. Sistemas Digitales Seccion 101 1 CPU PENTIUM IV DD 40GB 256MB RAM, 14 CPU PENTIUM IV DD 80GB 256MB RAM Se programan 2 horas a la semana en el laboratorio de Hardware I para que los alumnos puedan realizar practicas. Sistemas Digitales Seccion 102 1 CPU PENTIUM IV DD 40GB 256MB RAM, 14 CPU PENTIUM IV DD 80GB 256MB RAM Se programan 2 horas a la semana en el laboratorio de Hardware I para que los alumnos puedan realizar practicas. Circuitos Electricos Seccion 101 1 CPU PENTIUM IV DD 40GB 256MB RAM, 14 CPU PENTIUM IV DD 80GB 256MB RAM Se programan 2 horas a la semana en el laboratorio de Hardware I para que los alumnos puedan realizar practicas. Circuitos Electricos Seccion 102 1 CPU PENTIUM IV DD 40GB 256MB RAM, 14 CPU PENTIUM IV DD 80GB 256MB RAM Se programan 2 horas a la semana en el laboratorio de Hardware I para que los alumnos puedan realizar practicas. Circuitos Electricos Seccion 103 1 CPU PENTIUM IV DD 40GB 256MB RAM, 14 CPU PENTIUM IV DD 80GB 256MB RAM Se programan 2 horas a la semana en el laboratorio de Hardware I para que los alumnos puedan realizar practicas. Circuitos Electricos Seccion 104 1 CPU PENTIUM IV DD 40GB 256MB RAM, 14 CPU PENTIUM IV DD 80GB 256MB RAM Se programan 2 horas a la semana en el laboratorio de Hardware I para que los alumnos puedan realizar practicas. Circuitos Electricos Seccion 106 1 CPU PENTIUM IV DD 40GB 256MB RAM, 14 CPU PENTIUM IV DD 80GB 256MB RAM Se programan 2 horas a la semana en el laboratorio de Hardware I para que los alumnos puedan realizar practicas. Dispositivos Logicos Programables Seccion 101 1 CPU PENTIUM IV DD 40GB 256MB RAM, 14 CPU PENTIUM IV DD 80GB 256MB RAM Se programan 2 horas a la semana en el laboratorio de Hardware I para que los alumnos puedan realizar practicas. Dispositivos Logicos Programables Seccion 102 1 CPU PENTIUM IV DD 40GB 256MB RAM, 14 CPU PENTIUM IV DD 80GB 256MB RAM Se programan 2 horas a la semana en el laboratorio de Hardware I para que los alumnos puedan realizar practicas. Microprocesadores e Interfaces Seccion 104 7 CPU PENTIUM IV DD80GB 512RAM, 1 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el laboratorio de Hardware II para que los alumnos puedan realizar practicas. Arquitectura Funcional de Computadoras Seccion 101 7 CPU PENTIUM IV DD80GB 512RAM, 1 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el laboratorio de Hardware II para que los alumnos puedan realizar practicas. Teoria de Control Seccion 101 7 CPU PENTIUM IV DD80GB 512RAM, 1 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el laboratorio de Hardware II para que los alumnos puedan realizar practicas. Arquitectura Funcional de Computadoras Seccion 102 7 CPU PENTIUM IV DD80GB 512RAM, 1 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el laboratorio de Hardware II para que los alumnos puedan realizar practicas. Teoria de Control Seccion 102 7 CPU PENTIUM IV DD80GB 512RAM, 1 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el laboratorio de Hardware II para que los alumnos puedan realizar practicas. Circuitos Electricos Seccion 105 7 CPU PENTIUM IV DD80GB 512RAM, 1 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el laboratorio de Hardware II para que los alumnos puedan realizar practicas. Redes de Computadoras Seccion 101 7 CPU PENTIUM IV DD80GB 512RAM, 1 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el laboratorio de Hardware II para que los alumnos puedan realizar practicas. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 116 Nombre de la Materia Equipo de Computo Describir Disponibilidad Arquitectura de Computadoras Seccion 101 7 CPU PENTIUM IV DD80GB 512RAM, 1 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el laboratorio de Hardware II para que los alumnos puedan realizar practicas. Redes de Computadoras Seccion 102 7 CPU PENTIUM IV DD80GB 512RAM, 1 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el laboratorio de Hardware II para que los alumnos puedan realizar practicas. Arquitectura de Computadoras Seccion 102 7 CPU PENTIUM IV DD80GB 512RAM, 1 CPU CORE 2DUO DD250GB 2GB RAM Se programan 2 horas a la semana en el laboratorio de Hardware II para que los alumnos puedan realizar practicas. (Se anexa horario de cursos ofertados en otono de 2008, ver apendice 7.3.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 117 7.4. Se debe contar con un numero suficiente de computadoras que esten disponibles y accesibles para los alumnos del programa en funcion del numero de horas de infraestructura de computo requeridas por el Plan de Estudios. Proporcionar la siguiente informacion Horas requeridas por el plan de estudios en un periodo Horas disponibles de infraestructura de computo por periodo 3296 3424 Considerando el numero de equipos en los siete laboratorios de computo (224) y que estan disponibles de 7:00. a 19:00 hrs. obtenemos un total de 6720 horas de acceso a la infraestructura. Las horas requeridas se contabilizan seleccionando las asignaturas en las que especificamente se detalla el uso de laboratorios de computo (para otono 2008 se abrieron 103 secciones con laboratorio de dos horas a la semana por seccion por 16 semanas dando 3296 horas). Quedan entonces 3424 horas de libre acceso para que los alumnos del programa puedan realizar las practicas y proyectos relacionados con el plan de estudios. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 118 7.5. Se debe contar con al menos tres plataformas de computo diferentes que esten disponibles y accesibles para los estudiantes y el personal docente del programa. Describir los tipos de plataformas de computo disponibles para los estudiantes y el personal docente del programa: Tipo de Plataforma de Computo Disponibilidad Arquitectura IBM compatible x86 Pentium III Pentium IV Pentium IV HT Core DUO Core 2 DUO Xeon AMD Opteron 333 Atlon El 97% de los equipos de computo con los que cuenta la FCC utilizan esta arquitectura. La mayoria de los equipos son utilizados como estaciones de trabajo y Servidores. Arquitectura Sparc UltraSparc-II UltraSparc-III+ Los equipos de computo que utilizan esta arquitectura se encuentran en el area del posgrado y funcionan como servidores y estaciones de trabajo, las cuales estan a disposicion de los alumnos de la FCC, alumnos del posgrado, profesores del posgrado y tesistas. Arquitectura PowerPC Los equipos de computo con este tipo de arquitectura se encuentran en el Laboratorio de Multimedia y son utilizados para la creacion de aplicaciones que requieren de un gran poder de procesamiento. Arquitectura ALPHA Equipo utilizado para la implementacion de un servidor de radio via internet. (Se anexa inventario de los laboratorios y modulos de la FCC, ver apendice 7.5.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 119 7.6. Se debe contar con capacidades de impresion adecuadas para los alumnos y profesores del programa. Describir las capacidades de impresion disponibles para los estudiantes y el personal docente del programa: Actualmente la FCC cuenta con un total de 96 impresoras distribuidas de la siguiente manera: 22 Impresoras puestas a disposicion de alumnos y profesores en modulos y laboratorios. 3 Impresoras en red para uso del personal academico de la FCC. 72 Impresoras asignadas a los profesores de la FCC. (Se anexa inventario de equipo de impresion disponible en la FCC, ver apendice 7.6.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 120 7.7. Debe contarse con al menos una red de area local y una amplia, con software adecuado para las aplicaciones mas comunes del programa. El equipo de computo de la Institucion ?esta conectado en red? Si No En caso afirmativo, diga: a) ?Que equipo de computo (servidores y clientes) soporta la red y cuales son sus caracteristicas? La Facultad de Ciencias de la Computacion se cuenta con un total de 27 servidores, los cuales se detallan a continuacion: Nombre del equipo Caracteristicas solarium.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.20.2 Fedora 8 Dual Opteron Dual Core 2 GHz 4 GB 500 GB 200 http, https, ftp, ssh, mail, mysql ixtchel.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.20.5 Fedora 8 Dual Opteron Dual Core 2 GHz 4GB 500 GB 200 http, https, ftp, ssh, mail, mysql www.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.20.9 Fedora 8 Dual Opteron Dual Core 2 GHz 4 GB 500 GB 200 http, https, ftp, ssh, mail, mysql ftp.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.20.4 Fedora 8 Dual Opteron Dual Core 2 GHz 4 GB 500 GB 200 http, https, ftp, ssh, mail, mysql Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 121 Nombre del equipo Caracteristicas dns1.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Servicios que presta 148.228.20.8 Fedora 8 Intel Core 2 Duo 1.86 Ghz. 2 GB 250 GB Servidor de Nombres de Dominio dns2.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Servicios que presta 148.228.20.12 Fedora 8 Intel Core 2 Duo 1.86 Ghz. 2 GB 250 GB Servidor de Nombres de Dominio donaji.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.22.5 Suse 10.2 Pentium IV 2.3 2 Gb. 480Gb 10 usuarios proyectos de maestria aleteya.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.22.7 Open SUSE v11.1 Core 2 Quad 8 Gb 1TB 12 usuarios Pagina del CA teoria de la computacion, programas especializados en procesamiento de lenguaje natural. cb.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.22.42 FreeBSD amd64 7.0 2 Intel Xeon Dual-Core 2 GB 1 TB usuarios: 43 Moodle, MaximaPHP, shell teseo.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.22.230 Windows 2003 Server R2 Dual Xeon Doble Nucleo 4Gb 3 discos duros (2 de 250 GB. SATA y 1 de 160 GB. IDE) 4 usuarios. Servidor web, de correo, pop3, bases de datos (mysql). Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 122 Nombre del equipo Caracteristicas bd1.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.20.3 Mandrake Linux 2007 Pentium 4 2 GHz 512 MB 80 GB 20 usuarios http, https, ftp, ssh, mysql omi.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.21.3 Trustix 3.0 2007 Xeon Dual 2 GHz 1 GB 250 GB 150 usuarios http, https, ftp, ssh, mysql acervo.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.22.37 Mandrake Linux 2007 Xeon Mono 2 GHz 512 MB 300 GB 50 http, https, ftp, ssh, mysql perseo.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.21.235 Mandrake Linux 2007 Pentium 4 2.6 GHz 512 MB 250 GB 1000 http, https, ftp, ssh, mysql, postgres cluster.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.20.240 Fedora 8 / oscar 5.0 15 Opteron Dual 64 bits 16 GB 200 GB + 14*32 GB 30 http, https, ftp, ssh, mysql, ganglia chronos.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.22.173 Solaris 10 UltraSparc-II 400 1GB 20GB 25 usuarios Servidor Web, Ejecutar aplicaciones para tesistas, en paralelo, alumnos de programacion concurrente. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 123 Nombre del equipo Caracteristicas jambalaya.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.22.220 Solaris 10 UltraSparc-II 330 256MB 20GB 20 usuarios Ejecutar aplicaciones para tesistas, alumnos de Programacion concurrente. gumbo.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.22.221 Solaris 10 UltraSparc-II 1050 4GB 100GB 20 usuarios Ejecutar aplicaciones para tesistas, en paralelo. corpora.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Numero de usuarios Servicios que presta 148.228.22.222 Solaris 10 UltraSparc-II 1050 4GB 100GB 30 usuarios Ejecutar aplicaciones para tesistas, en paralelo, alumnos de programacion concurrente y paralela. Servidor de Correo. econtinua.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Servicios que presta 148.228.20.234 Debian 4.0 etch Pentium 4 HT 512 RAM 80 GB gestion de la pagina de educacion continua salaam.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Servicios que presta 148.228.22.229 Fedora 8 Xeon Dual 1.5Ghz. 1GB 200GB Servidor Web phone.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento Servicios que presta 148.228.22.228 Linux Asterix Xeon Dual 1.5Ghz. 1GB 200GB Servidor de voz sobre IP Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 124 Nombre del equipo Caracteristicas talavera.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento No. de usuarios Servicios que presta 148.228.22.203 Fedora 7 Xeon a 2Ghz 1GB 120GB 6 usuarios Correo, aplicaciones web basadas en java. eriador.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento 148.228.22.6 Suse 10 Xeon Dual 2GB 300GB hardware.cs.buap.mx Direccion IP asignada Sistema operativo y version 148.228.21.242 Debian 4 sifcc.cs.buap.mx Direccion IP asignada Sistema operativo y version Tipo de procesador Cantidad de memoria en RAM Capacidad de almacenamiento 148.228.22.236 Windows 2000 Pentium 4 512MB 80GB Con lo que respecta a los clientes que soporta la red, en la Facultad de Ciencias de la Computacion se cuenta con alrededor de 500 equipos de computo conectados a internet, los cuales tienen las siguientes caracteristicas principales: Tipo de Procesadores Arquitectura IBM compatible x86 Pentium III Pentium IV Pentium IV HT Core DUO Core 2 DUO Xeon AMD Opteron 333 Atlon Arquitectura Sparc UltraSparc-II UltraSparc-III+ Arquitectura PowerPC Arquitectura ALPHA Capacidades de almacenamiento Puede variar dependiendo del equipo de computo, oscila entre los 40GB y 500GB. Memoria RAM Puede variar dependiendo del equipo de computo, oscila entre los 128MB y 4GB. Sistemas Operativos Instalados Windows XP Windows 2000 Windows 98 Windows Vista Distribuciones Linux Solaris 10 (Se anexa inventario de los laboratorios y modulos, ver apendice 7.7.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 125 b) ?Hay acceso a Internet a traves de la red? Para profesores Si No para alumnos Si No c) En caso afirmativo a la pregunta anterior ?cual es el tiempo promedio disponible para cada estudiante a Internet por semana? Los equipos de computo de los modulos, biblioteca y laboratorios cuentan con internet alambrico. Este servicio puede ser utilizado sin limite de tiempo por los alumnos y profesores en las horas de servicio de dichas instalaciones. Ademas se cuenta con internet inalambrico las 24 horas del dia al cual los estudiantes y profesores tienen acceso permanente a traves de las redes sin seguridad habilitada. (Se anexa listado de las redes inalambricas existentes en la FCC, ver apendice 7.7.2) d) ?Con que paquetes de software se cuenta en la red academica de la institucion para apoyo del programa que se evalua? La Benemerita Universidad Autonoma de Puebla cuenta con una suscripcion anual al programa MSDN Academic Alliance disponible para los profesores y alumnos de la institucion. Esta suscripcion cuenta con una gama de herramientas de diseno y desarrollo, productos para servidores, sistemas operativos, aplicaciones y librerias de informacion de Microsoft, el programa MSDN tiene como proposito que estos recursos sean utilizados para la investigacion y la docencia. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 126 7.8. Todo estudiante inscrito al programa debe disponer de al menos una hora en promedio a la semana de servicio de Internet. El cumplimiento de este criterio se evalua con la respuesta al criterio anterior. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 127 7.9. Los espacios fisicos donde se ofrezcan los servicios de computo deben tener condiciones adecuadas de trabajo, seguridad e higiene (dimension de areas de trabajo, ventilacion, iluminacion, aire acondicionado, extinguidores, salidas de emergencia, depositos, etc.) Mencionar las condiciones de trabajo, seguridad e higiene de los servicios de computo, (dimension de areas de trabajo, ventilacion, iluminacion, aire acondicionado, extinguidores, salidas de emergencia, depositos, etc.). Nombre Dimensiones del area m2 No. de ventanas No. de lamparas No. de Extintores Salida de Emergencia Multimedia 24.67 3 4 1 No tiene Robotica 35.88 4 6 1 No tiene Robotica movil 89.64 8 15 1 1 Microprocesadores 65.04 4 8 1 No tiene Redes 115.79 3 15 1 1 Software Libre 36.69 4 6 1 No tiene Centro de Tecnologias de la Informacion y Comunicacion 10.5 4 1 1 No tiene Movis 37.08 2 6 1 No tiene Bases de datos 63.84 8 9 1 No tiene Hardware I 89.64 3 15 1 1 Hardware II 89.64 8 15 1 1 Modulo I 119.2 10 42 2 1 Modulo II 118.9 9 36 2 1 Modulo III 118.9 8 42 2 1 Modulo IV 119.2 10 42 2 1 Educacion continua 62.79 4 10 1 No tiene Biblioteca 200 15 50 3 1 (Se anexa planimetria y nomenclatura de la Facultad de Ciencias de la Computacion, ver apendice 7.9.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 128 7.10. Exceptuando a los programas que correspondan al perfil de Licenciado en Informatica, todos los programas deberan disponer de al menos un laboratorio de electronica acondicionado que los soporte. Para cada uno de los programas proporcionar la siguiente informacion. Nombre del programa No. de laboratorios de electronica que tiene asignados Licenciatura en Ciencias de la Computacion 5 (Se anexa inventario de laboratorios de microprocesadores, robotica, robotica movil, hardware I y II, ver apendice 7.10.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 129 7.11. El programa debe disponer de los servicios de computo necesarios para cursos y actividades especializadas, relacionadas con el mismo. Mencionar los servicios de computo existentes para cursos y actividades especializadas. La Facultad de Ciencias de la Computacion cuenta con 10 laboratorios especializados y 7 modulos que son utilizados para impartir clases, realizar practicas e impartir cursos extracurriculares. Nombre Actividad principal Multimedia Investigacion y Tesis Robotica Investigacion y Tesis Robotica movil Investigacion y Tesis Microprocesadores Investigacion y Tesis Redes Investigacion y Tesis Software Libre Investigacion y Desarrollo de software Centro de Tecnologias de la Informacion y Comunicacion Desarrollo de software Movis Investigacion y Tesis Bases de datos Investigacion y Auto Acceso Hardware I Cursos extracurriculares y Auto Acceso Hardware II Cursos extracurriculares y Auto Acceso Modulo I Cursos extracurriculares y Auto Acceso Modulo II Cursos extracurriculares y Auto Acceso Modulo III Cursos extracurriculares y Auto Acceso Modulo IV Cursos extracurriculares y Auto Acceso Educacion continua Cursos extracurriculares (Se anexa Inventario de los modulos y laboratorios de la FCC, ver apendice 7.11.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 130 7.12. Los responsables de los servicios de computo deben ser personal con experiencia y perfil adecuado. Mencionar el perfil y experiencia necesarios del personal responsable de los servicios de computo Para elegir a los profesores responsables de los laboratorios el CUA emite una convocatoria donde se dan las caracteristicas que deben cumplir en funcion del tipo de laboratorio. Para ello solicita lo siguiente: 1. Plan de trabajo 2. Propuesta de mejoras para el laboratorio 3. Experiencia en la administracion de personal 4. Experiencia en la administracion de equipo de computo. Para la seleccion de los responsables el CUA hace una revision de los documentos presentados y elige al profesor que cumpla con el perfil deseado. Para la eleccion de los estudiantes, los docentes responsables hacen una seleccion con base a referencias que tenga de alumnos. (Se anexa listado de las comisiones y coordinaciones existentes en la Facultad de Ciencias de la Computacion, ver apendice 7.12.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 131 7.13. El diseno, equipamiento y operacion de los servicios de computo debe tomar en cuenta la opinion de los profesores que participan en el programa. ?Se toma en cuenta la opinion de los profesores que participan en el programa para el diseno, equipamiento y operacion de los servicios de computo? Si No ?De que manera? Se hacen reuniones por area de conocimiento, en estas reuniones los profesores que forman estos grupos academicos proponen que equipo adquirir y en que cantidad. Normalmente este equipo corresponde al necesario para los laboratorios y proyectos de investigacion de la FCC, de igual manera se reunen los responsables de los laboratorios de servicios a los estudiantes y proponen el tipo de equipo y la cantidad necesaria para dar un servicio adecuado en el laboratorio correspondiente. Se hace una reunion de los lideres de los cuerpos academicos, los responsables de laboratorios y la direccion en donde se toman las decisiones finales de tipo de equipo, cantidad, etc. La direccion se encarga de plasmar en los programas de apoyo economico correspondientes las necesidades de equipo. Para la operacion de los servicios ofertados por los laboratorios, los responsables de los mismos solicitan a los profesores una lista de materiales y software necesario para realizar las practicas. (Se anexa informacion de los proyectos PIFI, ver apendice 7.13.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 132 7.14. Debera haber facilidades de acceso al uso del equipo y manuales, horarios amplios y flexibles para atender la demanda, asi como personal capacitado de soporte. El equipo debera contar con buen mantenimiento y planes de adecuacion a cambios tecnologicos. Describir la documentacion para los sistemas de hardware y software disponibles para los estudiantes y profesores. Explicar como los estudiantes y profesores tienen acceso adecuado a la documentacion, asi como el horario en que esta disponible. El lugar principal de acopio de los manuales basicos requeridos tanto para los sistemas de hardware como los de software son los laboratorios, modulos y biblioteca que cuentan con un horario de servicio de aplicaciones de software. Existe un presupuesto para accesorios y mantenimiento como parte del presupuesto anual asignado a la unidad academica, dicho presupuesto debe ser aprobado por el CUA. Ademas de lo mencionado la adecuacion a los cambios tecnologicos se garantiza a traves del Programa Integral de Fortalecimiento Institucional. Como se ha explicado anteriormente el responsable del laboratorio cuenta con un perfil que garantiza el buen funcionamiento de los laboratorios y modulos, que a su vez es responsable de capacitar a los colaboradores de los mismos. (Se anexan actas del CUA donde se aprobaron los presupuestos 2004-2008, ver apendice 7.14.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 133 7.15. Los Servicios de Computo deben ser funcionales y contar con un programa de mantenimiento adecuado. Los horarios de servicio que prestan los servicios de computo son los siguientes: Institucional: de 7:00 a 20:00; los dias: Lunes a Viernes De la Unidad Academica: de 7:00 a 19:00; los dias: Lunes a Viernes Si hay personal de apoyo indicar en cada caso la cantidad, horarios y funciones que tienen. Institucional. La Direccion General de Innovacion Educativa de la BUAP cuenta con personal de apoyo suficiente para: Mantenimiento de equipo de computo y audio, Impartir cursos de idiomas y computacion, Apoyo a alumnos y publico en general que hacen uso del equipo de computo. Unidad Academica y del Programa. Con lo que respecta a la FCC, cada modulo y laboratorio tiene un profesor responsable ademas de contar con alumnos colaboradores, los cuales se encargan de: prestamo de material, mantenimiento preventivo-correctivo del equipo de computo, instalacion de software, atencion a usuarios, entre otras actividades. (Se anexa listado de los colaboradores de modulos y laboratorios, ver apendice 7.15.1) ?Que tipo de personal esta disponible para instalar, mantener y administrar el hardware, software y redes de la institucion? La BUAP cuenta con el Sistema de Informacion Universitaria (SIU) que tiene como proposito el proveer y promover soluciones tecnologicas integrales y de vanguardia que permitan facilitar y coadyuvar a las funciones sustantivas de la Institucion, a traves de servicios de calidad. El SIU cuenta con el siguiente organigrama: Nombre Puesto Marco Antonio de los Santos Landa Director Leopoldo Gonzalez Becerril Subdirector General Homero Diaz Perez Subdirector de Telecomunicaciones Ricardo Mejia Chavez Coordinador de TI de Procesos Institucionales Alejandro Rodriguez Consultor de Soluciones de Imagen Digital Veronica Rodriguez Implementador de Soluciones de Imagen Digital Genaro Rodriguez Implementador de Soluciones de Imagen Digital Maria Carmen Moreno Analista de Seguimiento y Control de Soluciones y Servicios Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 134 Nombre Puesto Maribel Mendez Asistente de Direccion Jorge Luis Herrera Asistente Operativo Maria Antonieta Bautista Asistente Operativo Josefina Arellano Secretaria Administrativa Elsa Maria Fueyo Consultor de TI de Procesos Institucionales Adriana Reyes Consultor de TI de Procesos Institucionales Alfonso Gonzalez Consultor de TI de Procesos Institucionales Soledad Morales Analista de TI de Procesos Institucionales Luis de Luna Analista de TI de Procesos Institucionales Monica Aguilar Consultor de Soluciones de Software Luis Alberto Fernandez Consultor de Soluciones de Software Luis Alvarez Administrador de Sistemas y Bases de Datos Javier Mendieta Coordinador de NOC Jose Luis Fuentes Consultor de la Red Telefonica Berenice Escalante Consultor de Control de Usuarios y Tarificacion Lizzete Gonzalez Operadora del Conmutador Susana Operadora del Conmutador Yolanda Bautista Operadora del Conmutador Willebardo Macias Consultor de Infraestructura Fisica Carlos Sanchez Administrador de Soluciones de TI de Comunicaciones Eloy Sosa Analista de Red Inalambrica Victor Espindola Analista de Monitoreo e Inventario Ruth Gutierrez Operador de Monitoreo e Inventario Emmanuel Nieva Responsable del Centro de Atencion Integral Aida Lopez Analista de Soporte Tecnico Ivan Guevara Analista de Soporte Tecnico Gerardo Juarez Analista de Soporte Tecnico Francisco Guerrero Analista de Soporte Tecnico Yeserel Acobas Atencion a Usuarios Alfonso Ibanez Atencion a Usuarios David Alfonso Recepcion de Solicitudes (Se anexa informacion proporcionada por el SIU, ver apendice 7.15.2) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 135 7.16. Los Servicios de Computo deben contar con reglamentos que garanticen su buen funcionamiento y que esten a disponibilidad de los usuarios. ?Existe un reglamento de los servicios de computo? Si No En caso afirmativo, ?se encuentra a disponibilidad de los usuarios? Si No Favor de proporcionar una copia del mismo. (Se anexa reglamento de los laboratorios de la Facultad de Ciencias de la Computacion, ver apendice 7.16.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 136 7.17. Los profesores del programa deben contar con equipo de computo que les permita desempenar adecuadamente su funcion. En el caso de los profesores de tiempo completo, estos deberan contar con una terminal o computadora para su uso exclusivo. Describir las facilidades de computo disponibles para los profesores del programa. Incluir los recursos de este tipo disponibles para las oficinas del personal academico. Todos los profesores de la FCC de tiempo completo y medio tiempo cuentan con cubiculo, y computadora con conexion a internet, en el cual pueden preparar sus clases y trabajos de investigacion, asi como dar asesorias a sus alumnos. Los profesores de Hora Clase cuentan con un cubiculo comunitario, en el cual se tienen tres computadoras para apoyo a sus actividades academicas. (Se anexa inventario de bienes resguardados por profesores de la FCC, ver apendice 7.17.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 137 7.18. Los Servicios de Computo deben contar con el soporte tecnico adecuado. ?Existen tecnicos de administracion de sistemas de tiempo completo? ?Participan estudiantes en el apoyo a las actividades de soporte tecnico? A nivel institucional la BUAP cuenta con el Sistema de Informacion Universitaria, quien es el encargado de dar servicio de soporte tecnico de tiempo completo a todas las dependencias y unidades academicas de la BUAP. La Facultad de Ciencias de la Computacion cuenta con un Area de Administracion de la red, la cual cuenta con el siguiente personal: Nombre Cargo Actividades Gustavo Cossio Aguilar Coordinador del area de servicios de red de tiempo completo. Administrar los servidores de la FCC, equilibrar el trafico de red, realizar mantenimiento a equipos de computo y servidores, instalacion de equipo especializado ademas de colaborar con proyectos relacionados con el area de servicios de red. Jorge Alberto Leonor Gonzalez Alumno de la Facultad de Ciencias de la Computacion. Coadministrador del servidor solarium. Carlos Alejandro Diaz Castelan Alumno de la Facultad de Ciencias de la Computacion. Coadministrador del FTP de la FCC. Aaron Meis Sanchez Alumno de la Facultad de Ciencias de la Computacion. Coadministrador del servidor ixtchel. Manuel Encarnacion Rosario Alumno de la Facultad de Ciencias de la Computacion. Coadministrador de los DNS de la FCC. Manuel Encarnacion Rosario Alumno de la Facultad de Ciencias de la Computacion. Coadministrador del Servidor Web de la FCC. Con lo que respecta a los Laboratorios y Modulos, cada uno tiene un profesor responsable ademas de contar con alumnos colaboradores los cuales se encargan de: el prestamo de material, mantenimiento preventivo-correctivo del equipo de computo, instalacion de software, atencion a usuarios, entre otras. (Se anexa constancia del coordinador de la administracion de servicios de red, ver apendice 7.18.1) (Se anexa listado de colaboradores del area de administracion de la red, ver apendice 7.18.2) ?Es este nivel de soporte adecuado? Si No Justifique su respuesta: El soporte tecnico que brinda el SIU es realizado por personal capacitado, que cuenta con estudios de licenciatura y especializados en el manejo de software y hardware. Por otro lado los estudiantes del programa participan activamente dando solucion a los problemas menores y de complejidad media que se generan en la facultad. Todo este soporte es bajo la supervision de los profesores responsables de los laboratorios. Si la respuesta es no, describir las limitantes existentes: Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 138 7.19. Es necesario que existan registros y estadisticas referentes al uso del equipo de computo, para determinar indices de utilizacion e indicadores sobre la calidad del servicio. ?Existen registros de usuarios de los servicios de computo? Si No En caso afirmativo indicar el numero de usuarios en promedio diario atendidos en los tres ultimos periodos escolares: Periodo Usuarios generales Usuarios del programa Otono 2007 No se tiene registro No se tiene registro Primavera 2008 No se tiene registro No se tiene registro Otono 2008 175 70 (Se anexan bitacoras de otono 2008, ver apendice 7.19.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 139 Aulas 7.20. Las aulas deben ser funcionales, disponer de espacio suficiente para cada alumno y tener las condiciones adecuadas de higiene, seguridad, iluminacion, ventilacion, temperatura, aislamiento del ruido y mobiliario. Informacion sobre aulas segun dimensiones y capacidades. TIPO DE AULA (CLASES, PROYECCION, AUDITORIOS, SALAS) CANTIDAD SUP. EN M2 CAP. MAX. CARACTERISTICAS CLASES 104A /101 1 58.8 50 A X . B__________ C__________ D__________ E Y . F Y . G B . H B . I B . J Y . K B . L Y . CLASES 104A /102 104A /103 104A /104 104A /105 4 58.1 50 A X . B__________ C__________ D__________ E Y . F Y . G B . H B . I B . J Y . K B . L Y . CLASES 104D /101 104D /102 104D /104 104D /301 4 61.3 50 A X . B__________ C__________ D__________ E Y . F Y . G B . H B . I B . J Y . K B . L Y . CLASES 104D /103 104D /201 104D /202 104D /203 104D /204 104D /304 6 62.8 50 A X . B__________ C__________ D__________ E Y . F Y . G B . H B . I B . J Y . K B . L Y . CLASES 104D /303 1 48 45 A X . B__________ C__________ D__________ E Y . F Y . G B . H B . I B . J Y . K B . L Y . CLASES 104D /305 1 30.4 30 A X . B__________ C__________ D__________ E Y . F Y . G B . H B . I B . J Y . K B . L Y . CLASES 104D /306 1 30.4 30 A X . B__________ C__________ D__________ E Y . F Y . G B . H B . I B . J Y . K B . L Y . Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 140 TIPO DE AULA (CLASES, PROYECCION, AUDITORIOS, SALAS) CANTIDAD SUP. EN M2 CAP. MAX. CARACTERISTICAS CLASES 105G /110 1 46.3 50 A X . B__________ C__________ D__________ E Y . F Y . G B . H B . I B . J Y . K B . L Y . CLASES 105G /111 1 48.5 50 A X . B__________ C__________ D__________ E Y . F Y . G B . H B . I B . J Y . K B . L Y . AUDITORIOS 104B /102 1 100.3 87 A__________ B__________ C X . D__________ E Y . F Y . G B . H B . I B . J B . K B . L Y . SALAS 104C /206 1 104 90 A__________ B X . C__________ D__________ E Y . F Y . G B . H B . I B . J Y . K B . L Y . LABORATORIO Modulo I 104C /101 1 119.2 50 A__________ B X . C X . D__________ E Y . F Y . G Y . H B . I B . J Y . K B . L Y . LABORATORIO Modulo II 104C /102 1 118.9 50 A__________ B X . C X . D__________ E Y . F Y . G Y . H B . I B . J Y . K B . L Y . LABORATORIO Modulo III 104C /105 1 118.9 50 A__________ B X . C X . D__________ E Y . F Y . G Y . H B . I B . J Y . K B . L Y . LABORATORIO Modulo IV 104C /106 1 119.2 50 A__________ B X . C X . D__________ E Y . F Y . G Y . H B . I B . J Y . K B . L Y . OBSERVACIONES A Sillas de paleta B Mesas de trabajo C Isoptica D Estrado del profesor E Pizarron F Iluminacion G Aislamiento del ruido H Ventilacion I Temperatura J Espacio K Mobiliario L Conexiones electricas (Se anexan planos y nomenclatura de la Facultad de Ciencias de la Computacion, ver apendice 7.20.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 141 7.21. El numero de aulas habra de ser suficiente para atender la imparticion de cursos que se programen en cada periodo escolar. Informacion sobre la programacion de cursos en las aulas descritas en el criterio anterior en los ultimos dos periodos de clases. Periodo Curso Grupo No. de Alumnos Tipo de Aula Primavera 2008 ALGEBRA LINEAL 101 41 Clases Laboratorio Primavera 2008 ALGEBRA LINEAL 102 39 Clases Laboratorio Primavera 2008 ALGEBRA SUPERIOR 101 44 Clases Primavera 2008 ALGEBRA SUPERIOR 102 43 Clases Primavera 2008 ALGEBRA SUPERIOR 103 44 Clases Primavera 2008 ALGEBRA SUPERIOR 104 48 Clases Primavera 2008 ALGEBRA SUPERIOR 105 44 Clases Primavera 2008 ALGEBRA SUPERIOR 106 45 Clases Primavera 2008 ALGEBRA SUPERIOR 107 48 Clases Primavera 2008 ALGEBRA SUPERIOR 108 47 Clases Primavera 2008 ALGEBRA SUPERIOR 109 48 Clases Primavera 2008 ALGEBRA SUPERIOR 110 44 Clases Primavera 2008 ALGORITMOS Y ESTRUCTURAS DE DATOS 101 43 Clases Primavera 2008 ALGORITMOS Y ESTRUCTURAS DE DATOS 102 44 Clases Primavera 2008 ALGORITMOS Y ESTRUCTURAS DE DATOS 103 42 Clases Primavera 2008 ALGORITMOS Y ESTRUCTURAS DE DATOS 104 44 Clases Primavera 2008 ALGORITMOS Y ESTRUCTURAS DE DATOS 105 48 Clases Primavera 2008 ALGORITMOS Y ESTRUCTURAS DE DATOS 106 11 Clases Primavera 2008 ANALISIS Y DISENO DE ALGORITMOS 101 33 Clases Primavera 2008 ANALISIS Y DISENO DE ALGORITMOS 102 30 Clases Primavera 2008 ANALISIS Y DISENO DE SOFTWARE ORIENTADO A OBJETOS 101 6 Clases Primavera 2008 ANALISIS DE ALGORITMOS NUMERICOS 101 17 Clases Primavera 2008 ANALISIS DE ALGORITMOS NUMERICOS 102 43 Clases Primavera 2008 ARQUITECTURA FUNCIONAL DE COMPUTADORAS 101 34 Clases Laboratorio Primavera 2008 ARQUITECTURA DE COMPUTADORAS 101 45 Clases Laboratorio Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 142 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Primavera 2008 ARQUITECTURA DE COMPUTADORAS 102 21 Clases Laboratorio Primavera 2008 ARQUITECTURA DE COMPUTADORAS INT 1 Clases Laboratorio Primavera 2008 ARQUITECTURA DE COMPUTADORAS P02 1 Clases Laboratorio Primavera 2008 BASES DE DATOS 101 44 Clases Laboratorio Primavera 2008 BASES DE DATOS 102 43 Clases Laboratorio Primavera 2008 BASES DE DATOS 103 25 Clases Laboratorio Primavera 2008 BASES DE DATOS 104 25 Clases Laboratorio Primavera 2008 BASES DE DATOS 105 29 Clases Laboratorio Primavera 2008 CALCULO DIFERENCIAL EN VARIAS VARIABLES 101 1 Clases Primavera 2008 CALCULO DIFERENCIAL 101 49 Clases Primavera 2008 CALCULO DIFERENCIAL 102 48 Clases Primavera 2008 CALCULO DIFERENCIAL 103 52 Clases Primavera 2008 CALCULO DIFERENCIAL 104 37 Clases Primavera 2008 CALCULO DIFERENCIAL 105 46 Clases Primavera 2008 CALCULO DIFERENCIAL 106 43 Clases Primavera 2008 CALCULO DIFERENCIAL 107 37 Clases Primavera 2008 CALCULO DIFERENCIAL 108 46 Clases Primavera 2008 CALCULO DIFERENCIAL 109 43 Clases Primavera 2008 CALCULO INTEGRAL 101 29 Clases Primavera 2008 CALCULO INTEGRAL 102 44 Clases Primavera 2008 CALCULO INTEGRAL 103 41 Clases Primavera 2008 CALCULO INTEGRAL 104 43 Clases Primavera 2008 CALCULO INTEGRAL 105 39 Clases Primavera 2008 CIRCUITOS ELECTRICOS 101 37 Clases Primavera 2008 CIRCUITOS ELECTRICOS 102 44 Clases Primavera 2008 CIRCUITOS ELECTRICOS 103 47 Clases Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 143 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Primavera 2008 CIRCUITOS ELECTRICOS 104 48 Clases Primavera 2008 COMPILADORES 101 37 Clases Primavera 2008 COMPUTABILIDAD 101 25 Clases Primavera 2008 COMPUTABILIDAD 102 43 Clases Primavera 2008 CULTURA Y ETICA UNIVERSITARIA 101 36 Clases Primavera 2008 CULTURA Y ETICA UNIVERSITARIA 102 41 Clases Primavera 2008 CULTURA Y ETICA UNIVERSITARIA 103 30 Clases Primavera 2008 CULTURA Y ETICA UNIVERSITARIA 104 38 Clases Primavera 2008 CULTURA Y ETICA UNIVERSITARIA 105 39 Clases Primavera 2008 DESARROLLO DE EMPRENDEDORES 101 9 Clases Primavera 2008 DESARROLLO DE EMPRENDEDORES 102 8 Clases Primavera 2008 DISENO AVANZADO DE BASES DE DATOS 101 31 Clases Primavera 2008 DISENO AVANZADO DE BASES DE DATOS 102 24 Clases Primavera 2008 DISPOSITIVOS LOGICO PROGRAMABLES 101 38 Clases Primavera 2008 DISPOSITIVOS LOGICO PROGRAMABLES 102 45 Clases Primavera 2008 ECUACIONES DIFERENCIALES 101 44 Clases Primavera 2008 ECUACIONES DIFERENCIALES 102 46 Clases Primavera 2008 ECUACIONES DIFERENCIALES 103 44 Clases Primavera 2008 ECUACIONES DIFERENCIALES 104 36 Clases Primavera 2008 ECUACIONES DIFERENCIALES 105 24 Clases Primavera 2008 ENSAMBLADOR 101 43 Clases Laboratorio Primavera 2008 ENSAMBLADOR 102 45 Clases Laboratorio Primavera 2008 ENSAMBLADOR 103 44 Clases Laboratorio Primavera 2008 ENSAMBLADOR 104 47 Clases Laboratorio Primavera 2008 ENSAMBLADOR 105 44 Clases Laboratorio Primavera 2008 ENSAMBLADOR 106 14 Clases Laboratorio Primavera 2008 ENSAMBLADOR 107 46 Clases Laboratorio Primavera 2008 ENSAMBLADOR 108 43 Clases Laboratorio Primavera 2008 ENSAMBLADOR 109 48 Clases Laboratorio Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 144 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Primavera 2008 ENSAMBLADOR 110 17 Clases Laboratorio Primavera 2008 ESTADISTICA INT 1 Clases Primavera 2008 ESTADISTICA P02 2 Clases Primavera 2008 ETICA Y PRACTICA PROFESIONAL 101 38 Clases Primavera 2008 ETICA Y PRACTICA PROFESIONAL 102 35 Clases Primavera 2008 ETICA Y PRACTICA PROFESIONAL 103 30 Clases Primavera 2008 ETICA Y PRACTICA PROFESIONAL 104 36 Clases Primavera 2008 ETICA Y PRACTICA PROFESIONAL 105 35 Clases Primavera 2008 FILOSOFIA Y METODOLOGIA DE LA INVESTIGACION EN COMPUTACION 101 20 Clases Primavera 2008 FILOSOFIA Y METODOLOGIA DE LA INVESTIGACION EN COMPUTACION 102 14 Clases Primavera 2008 FUNDAMENTOS DE LENGUAJES DE PROGRAMACION 101 35 Clases Primavera 2008 FUNDAMENTOS DE LENGUAJES DE PROGRAMACION 102 30 Clases Primavera 2008 FUNDAMENTOS DE BASES DE DATOS 101 35 Clases Primavera 2008 FUNDAMENTOS DE BASES DE DATOS 102 12 Clases Primavera 2008 GEOMETRIA ANALITICA CON ALGEBRA LINEAL 101 46 Clases Primavera 2008 GEOMETRIA ANALITICA CON ALGEBRA LINEAL 102 48 Clases Primavera 2008 GEOMETRIA ANALITICA CON ALGEBRA LINEAL 103 48 Clases Primavera 2008 GEOMETRIA ANALITICA CON ALGEBRA LINEAL 104 45 Clases Primavera 2008 GEOMETRIA ANALITICA CON ALGEBRA LINEAL 105 49 Clases Primavera 2008 GEOMETRIA ANALITICA CON ALGEBRA LINEAL 106 47 Clases Primavera 2008 GRAFICACION 101 42 Clases Laboratorio Primavera 2008 GRAFICACION 102 17 Clases Laboratorio Primavera 2008 GRAFICACION 103 38 Clases Laboratorio Primavera 2008 GRAFICACION 104 36 Clases Laboratorio Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 145 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Primavera 2008 GRAFICACION 105 41 Clases Laboratorio Primavera 2008 INGENIERIA DE SOFTWARE AVANZADA 101 24 Clases Primavera 2008 INGENIERIA DE SOFTWARE AVANZADA 102 28 Clases Primavera 2008 INGENIERIA DE SOFTWARE 101 41 Clases Primavera 2008 INGENIERIA DE SOFTWARE 102 46 Clases Primavera 2008 INGENIERIA DE SOFTWARE 103 48 Clases Primavera 2008 INGENIERIA DE SOFTWARE 104 45 Clases Primavera 2008 INGENIERIA DE SOFTWARE 105 32 Clases Primavera 2008 INGENIERIA DE SOFTWARE 106 26 Salon de Asesorias Primavera 2008 INTRODUCCION A LA DISCIPLINA COMPUTACIONAL 101 42 Clases Primavera 2008 INTELIGENCIA ARTIFICIAL 101 47 Clases Primavera 2008 INTELIGENCIA ARTIFICIAL 102 45 Clases Primavera 2008 INTELIGENCIA ARTIFICIAL 103 35 Clases Primavera 2008 INTELIGENCIA ARTIFICIAL 104 37 Clases Primavera 2008 INTERFACES HUMANO-COMPUTADORA INT 2 Clases Primavera 2008 LENGUA EXTRANJERA I 101 38 Clases Primavera 2008 LENGUA EXTRANJERA I 102 36 Clases Primavera 2008 LENGUA EXTRANJERA II 101 31 Clases Primavera 2008 LENGUA EXTRANJERA II 102 40 Clases Primavera 2008 LENGUA EXTRANJERA II 103 22 Clases Primavera 2008 LENGUA EXTRANJERA II 104 38 Clases Primavera 2008 LENGUA EXTRANJERA II 105 38 Clases Primavera 2008 LENGUA EXTRANJERA II 106 30 Clases Primavera 2008 LENGUA EXTRANJERA II 107 36 Clases Primavera 2008 LENGUA EXTRANJERA II 108 35 Clases Primavera 2008 LENGUA EXTRANJERA II 109 35 Clases Primavera 2008 LENGUA EXTRANJERA II 110 35 Clases Primavera 2008 LENGUA EXTRANJERA III 101 34 Clases Primavera 2008 LENGUA EXTRANJERA III 102 33 Clases Primavera 2008 LENGUA EXTRANJERA III 103 36 Clases Primavera 2008 LENGUA EXTRANJERA III 104 36 Clases Primavera 2008 LENGUA EXTRANJERA III 105 29 Clases Primavera 2008 LENGUA EXTRANJERA IV 101 29 Clases Primavera 2008 LENGUA EXTRANJERA IV 102 29 Clases Primavera 2008 LENGUA EXTRANJERA IV 103 35 Clases Primavera 2008 LENGUA EXTRANJERA IV 104 22 Clases Primavera 2008 LENGUA EXTRANJERA IV 105 29 Clases Primavera 2008 LENGUAJES FORMALES Y AUTOMATAS 101 37 Clases Primavera 2008 LENGUAJES FORMALES Y AUTOMATAS 102 18 Clases Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 146 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Primavera 2008 LOGICA MATEMATICA 101 52 Clases Primavera 2008 LOGICA MATEMATICA 102 47 Clases Primavera 2008 LOGICA MATEMATICA 103 48 Clases Primavera 2008 LOGICA MATEMATICA 104 38 Clases Primavera 2008 LOGICA MATEMATICA 105 38 Clases Primavera 2008 LOGICA MATEMATICA 106 41 Clases Primavera 2008 MATEMATICAS DISCRETAS 101 43 Clases Primavera 2008 MATEMATICAS DISCRETAS 102 48 Clases Primavera 2008 MATEMATICAS DISCRETAS 103 44 Clases Primavera 2008 MATEMATICAS DISCRETAS 104 49 Clases Primavera 2008 MATEMATICAS DISCRETAS 105 45 Clases Primavera 2008 MATEMATICAS DISCRETAS 106 25 Clases Primavera 2008 MATEMATICAS DISCRETAS 107 40 Clases Primavera 2008 MATEMATICAS DISCRETAS 108 36 Clases Primavera 2008 MATEMATICAS DISCRETAS 109 39 Clases Primavera 2008 MATEMATICAS ELEMENTALES 101 44 Clases Primavera 2008 MATEMATICAS ELEMENTALES 102 41 Clases Primavera 2008 MATEMATICAS ELEMENTALES 103 48 Clases Primavera 2008 MATEMATICAS ELEMENTALES 104 42 Clases Primavera 2008 MATEMATICAS ELEMENTALES 105 16 Clases Primavera 2008 MICROPROCESADORES E INTERFACES 101 51 Clases Primavera 2008 MICROPROCESADORES E INTERFACES 103 17 Clases Primavera 2008 MICROPROCESADORES E INTERFACES 104 17 Clases Primavera 2008 OPTATIVA INTERFACES HUMANO-COMPUTADORA 101 48 Clases Primavera 2008 OPTATIVA INTERFACES HUMANO-COMPUTADORA 102 48 Clases Primavera 2008 OPTATIVA INTERFACES HUMANO-COMPUTADORA 103 12 Clases Primavera 2008 OPTATIVA INTRODUCCION AL RECONOCIMIENTO DE PATRONES 101 11 Clases Primavera 2008 OPTATIVA INVESTIGACION DE OPERACIONES 101 24 Clases Primavera 2008 OPTATIVA PROCESAMIENTO DIGITAL DE IMAGENES 101 54 Clases Primavera 2008 OPTATIVA PROCESAMIENTO DIGITAL DE IMAGENES 102 32 Clases Primavera 2008 OPTATIVA PROCESAMIENTO DIGITAL DE IMAGENES 103 20 Clases Primavera 2008 OPTATIVA PROCESAMIENTO DIGITAL DE IMAGENES 104 13 Salon de Asesorias Primavera 2008 OPTATIVA TOPICOS SELECTOS DE LA COMPUTACION II 103 8 Laboratorio Primavera 2008 OPTATIVA ESTADISTICA 101 28 Clases Primavera 2008 OPTATIVA ESTADISTICA 102 24 Clases Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 147 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Primavera 2008 OPTATIVA METODOS FORMALES 101 2 Clases Primavera 2008 PROBABILIDAD 101 19 Clases Primavera 2008 PROBABILIDAD 102 11 Clases Primavera 2008 PROBABILIDAD 103 14 Clases Primavera 2008 PROBABILIDAD 104 12 Clases Primavera 2008 PROGRAMACION CONCURRENTE Y PARALELA 101 24 Clases Laboratorio Primavera 2008 PROGRAMACION CONCURRENTE Y PARALELA 102 46 Clases Laboratorio Primavera 2008 PROGRAMACION CONCURRENTE Y PARALELA 102 22 Clases Laboratorio Primavera 2008 PROGRAMACION CONCURRENTE Y PARALELA 102 9 Clases Laboratorio Primavera 2008 PROGRAMACION CONCURRENTE Y PARALELA 103 43 Clases Laboratorio Primavera 2008 PROGRAMACION CONCURRENTE Y PARALELA 104 45 Clases Laboratorio Primavera 2008 PROGRAMACION CONCURRENTE Y PARALELA 105 43 Clases Laboratorio Primavera 2008 PROGRAMACION CONCURRENTE Y PARALELA 106 27 Clases Laboratorio Primavera 2008 PROGRAMACION 101 49 Clases Laboratorio Primavera 2008 PROGRAMACION 102 39 Clases Laboratorio Primavera 2008 PROGRAMACION 103 47 Clases Laboratorio Primavera 2008 PROGRAMACION 104 47 Clases Laboratorio Primavera 2008 PROGRAMACION 105 46 Clases Laboratorio Primavera 2008 PROGRAMACION 106 47 Clases Laboratorio Primavera 2008 PROGRAMACION 107 49 Clases Laboratorio Primavera 2008 PROGRAMACION 108 14 Clases Laboratorio Primavera 2008 PROGRAMACION AVANZADA 101 40 Clases Laboratorio Primavera 2008 PROGRAMACION AVANZADA 102 42 Clases Laboratorio Primavera 2008 PROGRAMACION AVANZADA 103 48 Clases Laboratorio Primavera 2008 PROGRAMACION AVANZADA 104 42 Clases Laboratorio Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 148 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Primavera 2008 PROGRAMACION AVANZADA 105 36 Clases Laboratorio Primavera 2008 PROGRAMACION AVANZADA 106 46 Clases Laboratorio Primavera 2008 PROGRAMACION AVANZADA 107 44 Clases Laboratorio Primavera 2008 PROGRAMACION AVANZADA 108 42 Clases Laboratorio Primavera 2008 PROGRAMACION AVANZADA 109 43 Clases Laboratorio Primavera 2008 PROGRAMACION AVANZADA 110 10 Clases Laboratorio Primavera 2008 PROGRAMACION AVANZADA 111 19 Clases Laboratorio Primavera 2008 PROGRAMACION DE SISTEMAS 101 32 Clases Primavera 2008 PROGRAMACION DE SISTEMAS 102 36 Clases Primavera 2008 PROGRAMACION DE SISTEMAS 103 42 Clases Primavera 2008 PROGRAMACION DE SISTEMAS 104 34 Clases Primavera 2008 PROGRAMACION DE SISTEMAS 105 38 Clases Primavera 2008 PROGRAMACION DE SISTEMAS 106 19 Clases Primavera 2008 PROGRAMACION LOGICA Y BASES DE 101 3 Clases Primavera 2008 REDES DE COMPUTADORAS 101 32 Clases Primavera 2008 REDES DE COMPUTADORAS 102 12 Clases Primavera 2008 REDES DE COMPUTADORAS 103 23 Clases Primavera 2008 SEMINARIO DE PROYECTOS DE INVESTIGACION I 101 1 Clases Primavera 2008 SIMULACION 101 32 Clases Primavera 2008 SIMULACION 102 32 Clases Primavera 2008 SISTEMAS OPERATIVOS CENTRALIZADOS Y DISTRIBUIDOS 101 45 Clases Primavera 2008 SISTEMAS OPERATIVOS CENTRALIZADOS Y DISTRIBUIDOS 102 39 Clases Primavera 2008 SISTEMAS OPERATIVOS CENTRALIZADOS Y DISTRIBUIDOS 103 44 Clases Primavera 2008 SISTEMAS DE TIEMPO REAL 101 38 Clases Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 149 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Primavera 2008 SISTEMAS DE TIEMPO REAL 102 48 Clases Primavera 2008 SISTEMAS DE TIEMPO REAL 103 19 Clases Primavera 2008 SISTEMAS DIGITALES 101 25 Clases Primavera 2008 SISTEMAS DIGITALES 102 43 Clases Primavera 2008 SISTEMAS DIGITALES 103 18 Clases Primavera 2008 SISTEMAS DIGITALES 105 42 Clases Primavera 2008 SISTEMAS DISTRIBUIDOS 101 20 Clases Primavera 2008 SISTEMAS OPERATIVOS 101 19 Clases Primavera 2008 SISTEMAS OPERATIVOS 102 43 Clases Primavera 2008 SISTEMAS OPERATIVOS 103 32 Clases Primavera 2008 SISTEMAS OPERATIVOS 104 28 Clases Primavera 2008 SISTEMAS OPERATIVOS 105 11 Clases Primavera 2008 TENDENCIAS DE BASES DE DATOS 101 32 Clases Primavera 2008 TENDENCIAS DE BASES DE DATOS 102 35 Clases Primavera 2008 TENDENCIAS DE BASES DE DATOS 103 34 Clases Primavera 2008 TEORIA DE CONTROL 101 31 Clases Primavera 2008 TEORIA DE CONTROL 102 24 Clases Primavera 2008 TEORIA DE LA COMPLEJIDAD 101 1 Clases Primavera 2008 TOPICOS SELECTOS DE LA COMPUTACION I 101 27 Clases Laboratorio Primavera 2008 TOPICOS SELECTOS DE LA COMPUTACION I 102 40 Clases Laboratorio Primavera 2008 TOPICOS SELECTOS DE LA COMPUTACION I INT 1 Clases Laboratorio Primavera 2008 VARIABLE COMPLEJA 101 10 Salon de Asesorias Otono 2008 ALGEBRA LINEAL 101 39 Clases Laboratorio Otono 2008 ALGEBRA LINEAL 102 42 Clases Laboratorio Otono 2008 ALGEBRA SUPERIOR 101 44 Clases Otono 2008 ALGEBRA SUPERIOR 102 41 Clases Otono 2008 ALGEBRA SUPERIOR 103 43 Clases Otono 2008 ALGEBRA SUPERIOR 104 42 Clases Otono 2008 ALGEBRA SUPERIOR 105 40 Clases Otono 2008 ALGEBRA SUPERIOR 106 44 Clases Otono 2008 ALGEBRA SUPERIOR 107 41 Clases Otono 2008 ALGORITMOS Y ESTRUCTURAS DE DATOS 101 48 Clases Laboratorio Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 150 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Otono 2008 ALGORITMOS Y ESTRUCTURAS DE DATOS 102 43 Clases Laboratorio Otono 2008 ALGORITMOS Y ESTRUCTURAS DE DATOS 103 49 Clases Laboratorio Otono 2008 ALGORITMOS Y ESTRUCTURAS DE DATOS 104 45 Clases Laboratorio Otono 2008 ALGORITMOS Y ESTRUCTURAS DE DATOS 105 49 Clases Laboratorio Otono 2008 ALGORITMOS Y ESTRUCTURAS DE DATOS 106 47 Clases Laboratorio Otono 2008 ANALISIS Y DISENO DE ALGORITMOS 101 22 Clases Otono 2008 ANALISIS Y DISENO DE ALGORITMOS 102 39 Clases Otono 2008 ANALISIS DE ALGORITMOS NUMERICOS 101 31 Clases Otono 2008 ANALISIS DE ALGORITMOS NUMERICOS 102 20 Clases Otono 2008 ARQUITECTURA FUNCIONAL DE COMPUTADORAS 101 12 Clases Otono 2008 ARQUITECTURA FUNCIONAL DE COMPUTADORAS 102 22 Clases Otono 2008 ARQUITECTURA DE COMPUTADORAS 101 27 Clases Otono 2008 ARQUITECTURA DE COMPUTADORAS 102 22 Clases Otono 2008 ARQUITECTURA DE COMPUTADORAS 103 23 Clases Otono 2008 BASES DE DATOS 101 44 Clases Otono 2008 BASES DE DATOS 102 49 Clases Otono 2008 BASES DE DATOS 103 26 Clases Otono 2008 BASES DE DATOS 104 19 Clases Otono 2008 CALCULO DIFERENCIAL 101 52 Clases Laboratorio Otono 2008 CALCULO DIFERENCIAL 102 53 Clases Laboratorio Otono 2008 CALCULO DIFERENCIAL 103 52 Clases Laboratorio Otono 2008 CALCULO DIFERENCIAL 104 46 Clases Laboratorio Otono 2008 CALCULO DIFERENCIAL 105 47 Clases Laboratorio Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 151 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Otono 2008 CALCULO DIFERENCIAL 106 45 Clases Laboratorio Otono 2008 CALCULO INTEGRAL 101 37 Clases Laboratorio Otono 2008 CALCULO INTEGRAL 102 47 Clases Laboratorio Otono 2008 CALCULO INTEGRAL 103 46 Clases Laboratorio Otono 2008 CALCULO INTEGRAL 104 47 Clases Laboratorio Otono 2008 CALCULO INTEGRAL 105 47 Clases Laboratorio Otono 2008 CIRCUITOS ELECTRICOS 101 48 Clases Laboratorio Otono 2008 CIRCUITOS ELECTRICOS 102 33 Clases Laboratorio Otono 2008 CIRCUITOS ELECTRICOS 103 48 Clases Laboratorio Otono 2008 CIRCUITOS ELECTRICOS 104 40 Clases Laboratorio Otono 2008 CIRCUITOS ELECTRICOS 105 26 Clases Laboratorio Otono 2008 CIRCUITOS ELECTRICOS 106 23 Clases Laboratorio Otono 2008 COMPILADORES 101 41 Clases Otono 2008 COMPILADORES 102 26 Clases Otono 2008 COMPUTABILIDAD 101 8 Clases Otono 2008 COMPUTABILIDAD 102 26 Clases Otono 2008 CULTURA Y ETICA UNIVERSITARIA 101 33 Clases Otono 2008 CULTURA Y ETICA UNIVERSITARIA 102 35 Clases Otono 2008 CULTURA Y ETICA UNIVERSITARIA 103 41 Clases Otono 2008 CULTURA Y ETICA UNIVERSITARIA 104 28 Clases Otono 2008 CULTURA Y ETICA UNIVERSITARIA 105 30 Clases Otono 2008 DESARROLLO DE EMPRENDEDORES 101 10 Clases Otono 2008 DESARROLLO DE EMPRENDEDORES 102 14 Clases Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 152 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Otono 2008 DISENO AVANZADO DE BASES DE DA 101 32 Clases Otono 2008 DISENO AVANZADO DE BASES DE DA 102 32 Clases Otono 2008 DISPOSITIVOS LOGICOS PROGRAMABLES 101 39 Clases Otono 2008 DISPOSITIVOS LOGICOS PROGRAMABLES 102 47 Clases Otono 2008 ECUACIONES DIFERENCIALES 101 43 Clases Otono 2008 ECUACIONES DIFERENCIALES 102 41 Clases Otono 2008 ECUACIONES DIFERENCIALES 103 27 Clases Otono 2008 ECUACIONES DIFERENCIALES 104 14 Clases Otono 2008 ENSAMBLADOR 101 39 Clases Laboratorio Otono 2008 ENSAMBLADOR 102 40 Clases Laboratorio Otono 2008 ENSAMBLADOR 103 57 Clases Laboratorio Otono 2008 ENSAMBLADOR 104 47 Clases Laboratorio Otono 2008 ENSAMBLADOR 105 52 Clases Laboratorio Otono 2008 ENSAMBLADOR 106 30 Clases Laboratorio Otono 2008 ENSAMBLADOR 107 46 Clases Laboratorio Otono 2008 ETICA Y PRACTICA PROFESIONAL 101 31 Clases Otono 2008 ETICA Y PRACTICA PROFESIONAL 102 25 Clases Otono 2008 ETICA Y PRACTICA PROFESIONAL 103 36 Clases Otono 2008 ETICA Y PRACTICA PROFESIONAL 104 29 Clases Otono 2008 ETICA Y PRACTICA PROFESIONAL 105 21 Clases Otono 2008 FILOSOFIA Y METODOLOGIA DE LA INVESTIGACION EN COMPUTACION 101 33 Clases Otono 2008 FILOSOFIA Y METODOLOGIA DE LA INVESTIGACION EN COMPUTACION 102 8 Clases Otono 2008 FORMAS CANONICAS 101 2 Clases Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 153 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Otono 2008 FUNDAMENTOS LENGUAJES DE PROGRAMACION 101 11 Clases Otono 2008 FUNDAMENTOS DE LENGUAJES DE PROGRAMACION 102 38 Clases Otono 2008 FUNDAMENTOS DE BASES DE DATOS 101 43 Clases Otono 2008 FUNDAMENTOS DE BASES DE DATOS 102 13 Clases Otono 2008 GEOMETRIA ANALITICA CON ALGEBRA LINEAL 101 44 Clases Laboratorio Otono 2008 GEOMETRIA ANALITICA CON ALGEBRA LINEAL 102 47 Clases Laboratorio Otono 2008 GEOMETRIA ANALITICA CON ALGEBRA LINEAL 103 43 Clases Laboratorio Otono 2008 GEOMETRIA ANALITICA CON ALGEBRA LINEAL 104 47 Clases Laboratorio Otono 2008 GEOMETRIA ANALITICA CON ALGEBRA LINEAL 105 43 Clases Laboratorio Otono 2008 GEOMETRIA ANALITICA CON ALGEBRA LINEAL 106 49 Clases Laboratorio Otono 2008 GRAFICACION 101 46 Clases Laboratorio Otono 2008 GRAFICACION 102 23 Clases Laboratorio Otono 2008 GRAFICACION 103 45 Clases Laboratorio Otono 2008 GRAFICACION 104 41 Clases Laboratorio Otono 2008 GRAFICACION 105 50 Clases Laboratorio Otono 2008 GRAFICACION 106 17 Clases Laboratorio Otono 2008 INGENIERIA DE SOFTWARE AVANZADA 101 47 Clases Otono 2008 INGENIERIA DE SOFTWARE AVANZADA 102 42 Clases Otono 2008 INGENIERIA DE SOFTWARE 101 31 Clases Otono 2008 INGENIERIA DE SOFTWARE 102 43 Clases Otono 2008 INGENIERIA DE SOFTWARE 103 21 Salon de Asesorias Otono 2008 INGENIERIA DE SOFTWARE 104 9 Clases Otono 2008 INTRODUCCION A LA DISCIPLINA COMPUTACIONAL 101 42 Clases Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 154 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Otono 2008 INTRODUCCION A LA DISCIPLINA COMPUTACIONAL 102 44 Clases Otono 2008 INTRODUCCION A LA DISCIPLINA COMPUTACIONAL 103 43 Clases Otono 2008 INTRODUCCION A LA DISCIPLINA COMPUTACIONAL 104 44 Clases Otono 2008 INTRODUCCION A LA DISCIPLINA COMPUTACIONAL 105 43 Clases Otono 2008 INTRODUCCION A LA DISCIPLINA COMPUTACIONAL 106 51 Clases Otono 2008 INTRODUCCION A LA DISCIPLINA COMPUTACIONAL 107 44 Clases Otono 2008 INTRODUCCION A LA DISCIPLINA COMPUTACIONAL 108 44 Clases Otono 2008 INTRODUCCION A LA DISCIPLINA COMPUTACIONAL 109 51 Clases Otono 2008 INTRODUCCION A LA DISCIPLINA COMPUTACIONAL 110 46 Clases Otono 2008 INTRODUCCION A LA DISCIPLINA COMPUTACIONAL 111 46 Clases Otono 2008 INTRODUCCION A LA DISCIPLINA COMPUTACIONAL 112 49 Clases Otono 2008 INTRODUCCION A LA DISCIPLINA COMPUTACIONAL 113 45 Clases Otono 2008 INTRODUCCION A LA DISCIPLINA COMPUTACIONAL 114 43 Clases Otono 2008 INTELIGENCIA ARTIFICIAL 101 33 Clases Otono 2008 INTELIGENCIA ARTIFICIAL 102 40 Clases Otono 2008 INTELIGENCIA ARTIFICIAL 103 23 Clases Otono 2008 INTELIGENCIA ARTIFICIAL 104 39 Clases Otono 2008 INTELIGENCIA ARTIFICIAL 105 43 Clases Otono 2008 LENGUA EXTRANJERA I 101 40 Clases Otono 2008 LENGUA EXTRANJERA I 102 39 Clases Otono 2008 LENGUA EXTRANJERA I 103 36 Clases Otono 2008 LENGUA EXTRANJERA I 104 38 Clases Otono 2008 LENGUA EXTRANJERA I 105 30 Clases Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 155 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Otono 2008 LENGUA EXTRANJERA I 106 43 Clases Otono 2008 LENGUA EXTRANJERA I 107 40 Clases Otono 2008 LENGUA EXTRANJERA I 108 37 Clases Otono 2008 LENGUA EXTRANJERA I 109 40 Clases Otono 2008 LENGUA EXTRANJERA I 110 37 Clases Otono 2008 LENGUA EXTRANJERA I 111 39 Clases Otono 2008 LENGUA EXTRANJERA I 112 43 Clases Otono 2008 LENGUA EXTRANJERA I 113 36 Clases Otono 2008 LENGUA EXTRANJERA I 114 38 Clases Otono 2008 LENGUA EXTRANJERA II 101 33 Clases Otono 2008 LENGUA EXTRANJERA II 102 31 Clases Otono 2008 LENGUA EXTRANJERA II 103 30 Clases Otono 2008 LENGUA EXTRANJERA II 104 24 Clases Otono 2008 LENGUA EXTRANJERA III 101 35 Clases Otono 2008 LENGUA EXTRANJERA III 102 35 Clases Otono 2008 LENGUA EXTRANJERA III 103 11 Clases Otono 2008 LENGUA EXTRANJERA III 104 39 Clases Otono 2008 LENGUA EXTRANJERA III 105 18 Clases Otono 2008 LENGUA EXTRANJERA IV 101 36 Clases Otono 2008 LENGUA EXTRANJERA IV 102 38 Clases Otono 2008 LENGUA EXTRANJERA IV 103 34 Clases Otono 2008 LENGUA EXTRANJERA IV 104 36 Clases Otono 2008 LENGUA EXTRANJERA IV 105 33 Clases Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 156 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Otono 2008 LENGUAJES FORMALES Y AUTOMATAS 101 48 Clases Otono 2008 LENGUAJES FORMALES Y AUTOMATAS 102 21 Clases Otono 2008 LOGICA MATEMATICA 101 27 Clases Otono 2008 LOGICA MATEMATICA 102 46 Clases Otono 2008 LOGICA MATEMATICA 103 50 Clases Otono 2008 LOGICA MATEMATICA 104 39 Clases Otono 2008 LOGICA MATEMATICA 105 37 Clases Otono 2008 LOGICA MATEMATICA 106 41 Clases Otono 2008 LOGICA MATEMATICA 107 20 Clases Otono 2008 MATEMATICAS DISCRETAS 101 48 Clases Otono 2008 MATEMATICAS DISCRETAS 102 51 Clases Otono 2008 MATEMATICAS DISCRETAS 103 48 Clases Otono 2008 MATEMATICAS DISCRETAS 104 51 Clases Otono 2008 MATEMATICAS DISCRETAS 105 36 Clases Otono 2008 MATEMATICAS DISCRETAS 106 33 Clases Otono 2008 MATEMATICAS DISCRETAS 107 49 Clases Otono 2008 MATEMATICAS ELEMENTALES 101 48 Clases Otono 2008 MATEMATICAS ELEMENTALES 102 43 Clases Otono 2008 MATEMATICAS ELEMENTALES 103 43 Clases Otono 2008 MATEMATICAS ELEMENTALES 104 44 Clases Otono 2008 MATEMATICAS ELEMENTALES 105 45 Clases Otono 2008 MATEMATICAS ELEMENTALES 106 54 Clases Otono 2008 MATEMATICAS ELEMENTALES 107 45 Clases Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 157 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Otono 2008 MATEMATICAS ELEMENTALES 108 44 Clases Otono 2008 MATEMATICAS ELEMENTALES 109 49 Clases Otono 2008 MATEMATICAS ELEMENTALES 110 46 Clases Otono 2008 MATEMATICAS ELEMENTALES 111 47 Clases Otono 2008 MATEMATICAS ELEMENTALES 112 49 Clases Otono 2008 MATEMATICAS ELEMENTALES 113 43 Clases Otono 2008 MATEMATICAS ELEMENTALES 114 42 Clases Otono 2008 MATEMATICAS ELEMENTALES 115 22 Clases Otono 2008 MICROPROCESADORES E INTERFACES 101 16 Clases Otono 2008 MICROPROCESADORES E INTERFACES 102 47 Clases Otono 2008 MICROPROCESADORES E INTERFACES 103 35 Clases Otono 2008 MICROPROCESADORES E INTERFACES 104 18 Clases Otono 2008 OPTATIVA INTERFACES HUMANO-COMPUTADORA 101 50 Clases Otono 2008 OPTATIVA INTERFACES HUMANO-COMPUTADORA 102 52 Clases Otono 2008 OPTATIVA INTERFACES HUMANO-COMPUTADORA 103 15 Clases Otono 2008 OPTATIVA INTERFACES HUMANO-COMPUTADORA 104 20 Clases Otono 2008 OPTATIVA INVESTIGACION DE OPERACIONES 101 19 Clases Otono 2008 OPTATIVA INVESTIGACION DE OPERACIONES 102 18 Clases Otono 2008 OPTATIVA PROCESAMIENTO DIGITAL DE IMAGENES 101 22 Clases Otono 2008 OPTATIVA PROCESAMIENTO DIGITAL DE IMAGENES 102 39 Salon de Asesorias Otono 2008 OPTATIVA PROCESAMIENTO DIGITAL DE IMAGENES 103 16 Clases Otono 2008 OPTATIVA TOPICOS SELECTOS DE LA COMPUTACION II 101 22 Clases Otono 2008 OPTATIVA ESTADISTICA 101 26 Clases Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 158 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Otono 2008 OPTATIVA ESTADISTICA 102 18 Clases Otono 2008 OPTATIVA METODOS FORMALES 101 1 Clases Otono 2008 PROBABILIDAD 101 28 Clases Otono 2008 PROBABILIDAD 102 14 Clases Otono 2008 PROGRAMACION CONCURRENTE Y PARALELA 101 20 Clases Otono 2008 PROGRAMACION CONCURRENTE Y PARALELA 102 43 Clases Otono 2008 PROGRAMACION CONCURRENTE Y PARALELA 103 35 Clases Otono 2008 PROGRAMACION CONCURRENTE Y PARALELA 104 39 Clases Otono 2008 PROGRAMACION CONCURRENTE Y PARALELA 105 48 Clases Otono 2008 PROGRAMACION 101 44 Clases Laboratorio Otono 2008 PROGRAMACION 102 52 Clases Laboratorio Otono 2008 PROGRAMACION 103 44 Clases Laboratorio Otono 2008 PROGRAMACION 104 50 Clases Laboratorio Otono 2008 PROGRAMACION 105 43 Clases Laboratorio Otono 2008 PROGRAMACION 106 53 Clases Laboratorio Otono 2008 PROGRAMACION 107 49 Clases Laboratorio Otono 2008 PROGRAMACION 108 45 Clases Laboratorio Otono 2008 PROGRAMACION 109 57 Clases Laboratorio Otono 2008 PROGRAMACION 110 53 Clases Laboratorio Otono 2008 PROGRAMACION 111 46 Clases Laboratorio Otono 2008 PROGRAMACION 112 49 Clases Laboratorio Otono 2008 PROGRAMACION 113 46 Clases Laboratorio Otono 2008 PROGRAMACION 114 48 Clases Laboratorio Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 159 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Otono 2008 PROGRAMACION 115 44 Clases Laboratorio Otono 2008 PROGRAMACION AVANZADA 101 51 Clases Laboratorio Otono 2008 PROGRAMACION AVANZADA 102 47 Clases Laboratorio Otono 2008 PROGRAMACION AVANZADA 103 23 Clases Laboratorio Otono 2008 PROGRAMACION AVANZADA 104 51 Clases Laboratorio Otono 2008 PROGRAMACION AVANZADA 105 50 Clases Laboratorio Otono 2008 PROGRAMACION AVANZADA 106 30 Clases Laboratorio Otono 2008 PROGRAMACION DE SISTEMAS 101 43 Clases Otono 2008 PROGRAMACION DE SISTEMAS 102 35 Clases Otono 2008 PROGRAMACION DE SISTEMAS 103 44 Clases Otono 2008 PROGRAMACION DE SISTEMAS 104 45 Clases Otono 2008 PROGRAMACION DE SISTEMAS 105 30 Clases Otono 2008 PROGRAMACION DE SISTEMAS 106 40 Clases Otono 2008 REDES DE COMPUTADORAS 101 28 Clases Otono 2008 REDES DE COMPUTADORAS 102 40 Clases Otono 2008 SIMULACION 101 42 Clases Otono 2008 SIMULACION 102 24 Clases Otono 2008 SISTEMAS OPERATIVOS CENTRALIZADOS Y DISTRIBUIDOS 101 40 Clases Otono 2008 SISTEMAS OPERATIVOS CENTRALIZADOS Y DISTRIBUIDOS 102 42 Clases Otono 2008 SISTEMAS OPERATIVOS CENTRALIZADOS Y DISTRIBUIDOS 103 45 Clases Otono 2008 SISTEMAS DE TIEMPO REAL 101 36 Clases Otono 2008 SISTEMAS DE TIEMPO REAL 102 32 Clases Otono 2008 SISTEMAS DIGITALES 101 43 Clases Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 160 Periodo CURSO Grupo No. de Alumnos Tipo de Aula Otono 2008 SISTEMAS DIGITALES 102 41 Clases Otono 2008 SISTEMAS DISTRIBUIDOS 101 43 Clases Otono 2008 SISTEMAS DISTRIBUIDOS 102 34 Clases Otono 2008 SISTEMAS OPERATIVOS 101 8 Clases Otono 2008 SISTEMAS OPERATIVOS 102 25 Clases Otono 2008 TENDENCIAS DE BASES DE DATOS 101 35 Clases Otono 2008 TENDENCIAS DE BASES DE DATOS 102 13 Clases Otono 2008 TEORIA DE CONTROL 101 30 Clases Laboratorio Otono 2008 TEORIA DE CONTROL 102 17 Clases Laboratorio Otono 2008 TOPICOS SELECTOS DE LA COMPUTACION I 101 22 Clases Laboratorio Otono 2008 TOPICOS SELECTOS DE LA COMPUTACION I 102 23 Clases Laboratorio Otono 2008 VARIABLE COMPLEJA 101 8 Salon de Asesorias (Se anexa horario de cursos ofertados en los periodos de primavera y otono de 2008, ver apendice 7.21.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 161 7.22. El programa debe disponer de al menos una aula con equipo de computo y audiovisual permanentemente instalado que podra ser utilizada para cursos normales y especializados. Numero de aulas con equipo de computo 8 Se cuenta con ocho laboratorios con equipo de computo, estos son los modulos I al IV y los dos laboratorios de Hardware que se encuentran en el edificio 104C, el laboratorio de Bases de Datos y Laboratorio de Educacion Continua. Numero de aulas con equipo audiovisual 17 Existen 8 laboratorios de computo que tiene equipo audiovisual de manera permanente, siendo estos los modulos I al IV, el Laboratorio de Educacion Continua, el Laboratorio de Base de Datos, Laboratorio de Hardware y el Laboratorio de Microprocesadores, tambien se cuenta con equipo en las areas de Diplomado y Posgrado. Por otro lado se tiene el auditorio y la sala de usos multiples que son utilizados para la presentacion de trabajos de los alumnos y conferencias dirigidas a la comunidad de FCC, estas areas cuentan con las condiciones para usar equipo de computo y audiovisual. En la secretaria Administrativa, se encuentran 4 canones, que pueden ser utilizados en el auditorio y la sala de usos multiples, asi como en los salones de clase. Tambien existen 23 canones asignados a diferentes profesores para la imparticion de su clase, cabe mencionar que los salones cuentan con pantalla para la proyeccion del canon. AULAS CON EQUIPO AUDIOVISUAL LUGAR No. DE CANONES MODULO I 1 MODULO II 2 MODULO III 2 MODULO IV 2 LAB. DE BASE DE DATOS 1 LAB. DE EDUCACION CONTINUA 1 LAB. DE MICROPROCESADORES 1 LAB. DE HARDWARE 1 POSGRADO 2 DIPLOMADO 1 SECRETARIA ADMINISTRATIVA 4 PROFESORES 23 SALONES DE CLASE 16 AUDITORIO 1 TOTAL 58 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 162 Cubiculos 7.23. Los profesores de tiempo completo, tres cuartos y medio tiempo deben contar con cubiculos. El resto de los profesores deben contar con lugares adecuados para su trabajo. ?Que tipo de profesores cuenta con cubiculos? Todos los profesores de la FCC de tiempo completo y medio tiempo cuentan con cubiculo, en los cuales pueden preparar sus clases y trabajos de investigacion, asi como asesorias a sus alumnos. ?Que otro tipo de lugar existe para trabajo del resto de los profesores? Los profesores de Hora Clase cuentan con un cubiculo comunitario, en el cual se tienen tres computadoras, para apoyo en sus actividades academicas. Asi tambien se dispone de un salon de asesorias, el cual es principalmente utilizado para dar asesorias grupales. (Se anexa la lista de profesores y el numero de su cubiculo, ver apendice 7.23.1) (Se anexa lista de profesores hora clase, ver apendice 7.23.2) (Se anexa nomenclatura y planimetria de la FCC, ver apendice 7.23.3) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 163 7.24. Deben existir espacios para asesorias a estudiantes. ?Existen espacios para asesorias a estudiantes? En caso afirmativo, describalos: Las asesorias se imparten principalmente en los cubiculos de los profesores, ademas existe otra area junto a la secretaria administrativa que se utiliza tambien para impartir asesorias. El salon 104A/217 (anteriormente 135/217), que cuenta con sillas de paleta, un pizarron, condiciones adecuadas de iluminacion y ventilacion. (Se anexa nomenclatura y planimetria de la Facultad de Ciencias de la Computacion, ver apendice 7.24.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 164 Auditorios y Salas 7.25. El programa debe disponer de auditorios y/o salas debidamente acondicionados para actividades academicas, investigacion, y de preservacion y difusion de la cultura. Proporcione una relacion de los auditorios y/o salas para actividades academicas, investigacion, y de preservacion y difusion de la cultura, describiendo sus principales caracteristicas y uso que se les da con relacion a estas actividades. A) En la FCC se cuenta con el auditorio Albert Einstein, que es utilizado para diversas actividades academicas, de investigacion y culturales. El auditorio cuenta con una superficie de 100.4 m2, espacio suficiente para albergar 87 personas para las diferentes actividades desarrolladas en la facultad, como son: Platicas de divulgacion. Presentacion de trabajos de alumnos. Examenes profesionales. Conferencias de diversos temas. Foros. Cine club. Presentaciones musicales, danza y teatro. B) Se tiene la sala de Usos multiples, con un area de 104 m2 y con una capacidad para 90 personas. En este salon se hacen reuniones de CUA, reuniones de profesores, de comisiones y examenes profesionales. C) Ademas se cuenta con un salon de asesorias con un area de 16.5 m2 en el que se realizan reuniones de profesores, y de comisiones. Este lugar tiene una capacidad para 10 personas. (Se anexa bitacora de uso del auditorio Albert Einstein, ver apendice 7.25.1) (Se anexa planimetria y nomenclatura de la FCC, ver apendice 7.25.2) (Se anexan tripticos, carteles y oficios de eventos culturales realizados en las instalaciones de la FCC, ver apendice 7.25.3) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 165 7.26. En los espacios mencionados en el criterio anterior, se debe tener un lugar comodo por cada diez estudiantes inscritos en el programa, ofreciendo las condiciones adecuadas de higiene y seguridad. De los espacios mencionados anteriormente mencionar: Numero de lugares disponibles: 187 Ofrece condiciones adecuadas de higiene Si No Ofrece condiciones adecuadas de seguridad Si No El auditorio Albert Einstein cuenta con 87 lugares, la sala de usos multiples 90 lugares y el salon de asesorias 10 lugares; por lo que se tiene un total de 187 lugares que cumplen con las condiciones de higiene y seguridad. El total de alumnos inscritos en el programa es de 1532, por lo se supera el minimo del 10%. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 166 Sanitarios y servicios medicos 7.27. Las facilidades sanitarias para los alumnos y profesores del programa deben ser adecuadas. ?Considera las facilidades sanitarias adecuadas? Si No En caso afirmativo sustente su respuesta. El servicio sanitario en la FCC, se considera adecuado ya que se cuentan con instalaciones sanitarias en los cuatro edificios que conforman nuestra facultad. El aseo de los sanitarios se realiza todos los dias, y estos estan dotados de papel, jabon y secadora. Constantemente se les da mantenimiento preventivo y correctivo. (Se anexa planimetria de las instalaciones sanitarias, ver apendice 7.27.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 167 7.28 Debe existir un lugar apropiado que cuente con medicamentos y material requerido para primeros auxilios, que esten al servicio y alcance del personal academico, administrativo y alumnos. ?Existe un servicio medico o material para primeros auxilios? Si No En caso afirmativo, describalo brevemente Dentro de las instalaciones de Ciudad Universitaria se encuentran cuatro modulos donde se da el servicio medico gratuito y medicamentos, y la facultad tambien cuenta con cinco botiquines de primeros auxilios. ?Este servicio es accesible al personal academico, administrativo y alumnos? Si No En caso afirmativo sustente su respuesta. La Facultad de Ciencias de la Computacion se encuentra localizada dentro del area de Ciudad Universitaria, en la cual existen cuatro modulos de atencion medica, uno de ellos se encuentra localizado frente a la facultad de derecho a 700 metros de la FCC, el segundo modulo se encuentra localizado frente a facultad de Fisico Matematicas a 600 metros de la FCC, el tercer modulo y el mas cercano a la facultad se encuentra localizado a 400 metros frente a las facultades de Ingenieria Quimica y Electronica, y el cuarto modulo se encuentra en el area deportiva y es el mas lejano a la facultad. Cada modulo cuenta con medico y medicamentos basicos, su servicio es sin costo alguno. Para hacer uso de este servicio no se necesita de requisito alguno solo estar dentro de las instalaciones de CU, el horario de atencion es de 7 de la manana a 9 de la noche. Estos modulos estan coordinados por la Direccion de Proteccion Universitaria (DPU). Ademas existe una ambulancia disponible para cualquier eventualidad dentro de CU. Los botiquines de primeros auxilios se encuentran ubicados de acuerdo a las recomendaciones del plan de contingencia realizado por el personal de la DPU, y disponibles para el personal administrativo, academico y alumnos en general, con supervision. En caso de requerir de una atencion medica mayor, todos los trabajadores Universitarios, profesores, administrativos y alumnos, cuentan con el servicio medico, en algunos casos en el hospital Universitario y otros en el IMSS. (Se anexa contrato colectivo de trabajo, ver apendice 7.28.1) (Se anexa oficio de la DAE con explicacion acerca de la cedula de registro ante el IMSS, ver apendice 7.28.2) (Se anexa proceso para obtener el seguro social universitario para alumnos, ver apendice 7.28.3) (Se anexa informacion de la DPU, ver apendice 7.28.4) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 168 Areas recreativas 7.29. La institucion debe contar con un minimo de instalaciones para el fomento de practicas deportivas y actividades culturales. Haga una relacion de las instalaciones para actividades culturales y practicas deportivas u otras para el fomento de la vida academica, indicando a cuantos usuarios brindan simultaneamente en cada caso. En Ciudad Universitaria se tiene el complejo Universitario y de Alto rendimiento en donde se imparten las siguientes disciplinas: Ajedrez, Atletismo, Baloncesto, Beisbol y Softbol, Box, Deporte Especial Scout, Fisicoculturismo, Fitness, Fronton, Frontenis, Futbol Americano, Futbol Soccer y Rapido, Gimnasia Aerobica y Reductiva, Handbol, Hockey sobre ruedas, Karate Do, Kick Boxing y Full Contact, Lucha Olimpica y Grecorromana, Montanismo, Natacion, Baile Salsa, Pilates, Step Latin Dance, Stretching, Tenis de Mesa, Tenis de Campo, Tiro con Arco, Voleibol de Sala y Playa, Wu Shu (arte marcial chino), Yoga, Zumba y Zumba Acuatica. Cuenta con las siguientes instalaciones Campo de futbol americano, Cancha de futbol rapido con gradas y alumbrado Cancha de tenis Cancha de voleibol de playa Cancha para hockey sobre ruedas Cancha de baloncesto con gradas y alumbrado Cancha de frontenis Cancha de futbol soccer con alumbrado Dojo de karate y kendo Estadio y campo de Beisbol Gimnasio de Judo Gimnasio de lucha olimpica y grecorromana Gimnasio de pesas Gimnasio polideportivo de duela NBA Salon de aerobics y ademas se ofrece los siguientes servicios a ninos y jovenes, que pertenezcan o no a la universidad ESCUELAS INFANTILES DE INICIACION DEPORTIVA. En donde se imparten las siguientes disciplinas Baloncesto (7 a 15 anos), Clavados (6 a 12 anos), Esgrima (9 a 14 anos), Futbol (6 a 13 anos), Gimnasia Ritmica (4 a 8 anos), Lucha Olimpica (8 a 14 anos), Tae Kwon Do (6 a 12 anos), Tenis de Campo (6 a 13 anos), Tenis de mesa (9 a 14 anos) y Tiro con Arco (9 a 14 anos). ESCUELA DE GIMNASIA INFANTIL (3 anos en adelante) CENTRO DE FORMACION LOBOS BUAP (5 hasta 21 anos de edad) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 169 CENTRO DE DESARROLLO DE ARTES MARCIALES En donde se imparte Karate Do, Tae Kwon Do, Esgrima, Judo y Kendo. CENTRO TENISTICO UNIVERSITARIO CENTRO ACUATICO UNIVERSITARIO El cual cuenta con las siguientes instalaciones Alberca olimpica, Fosa de clavados, Chapoteadero con calefaccion, Banos de vapor, Vestidores y lockers. (Se anexa oficio de la Direccion de Cultura Fisica, ver apendice 7.29.1) (Se anexa folleto de difusion de los servicios que ofrece el Complejo Deportivo Universitario y de Alto Rendimiento, ver apendice 7.29.2) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 170 Biblioteca 7.30. Se debe contar con instalaciones apropiadas para biblioteca, ubicadas lo mas cerca posible de aquellas donde se realizan las actividades academicas y con espacios suficientes para proporcionar servicio simultaneamente, como minimo al 10% del alumnado, asi como con lugares adecuados para la prestacion de otros servicios como: cubiculos para grupos de estudio, lugar para exposiciones, hemeroteca, videoteca, etc. ?Las instalaciones de la biblioteca en que se apoya el programa se encuentran en la zona donde la poblacion estudiantil realiza sus actividades academicas? Si No El Sistema Bibliotecario BUAP esta compuesto por 54 bibliotecas que atienden a universitarios de nivel medio superior, licenciaturas, posgrados y doctorados. En particular la FCC apoya su programa de Licenciatura en Ciencias de la Computacion en dos bibliotecas cercanas al area, la primera, la Biblioteca la cual pertenece al Area de Ciencias Naturales y Exactas y la segunda, la ubicada en las instalaciones de la Facultad de Ciencias de la Computacion. En caso negativo, indique a que distancia se encuentra la biblioteca de las areas academicas donde se desarrolla el programa. Los servicios bibliotecarios de que dispone el programa son de caracter: Institucional Si Con un acervo de 23550 ejemplares Con capacidad para atender a 75 usuarios simultaneamente Con sistemas de estanteria abierta Si No Con servicios de: Consulta, prestamo, apartado y renovacion de libros, autoprestamo, prestamo interbibliotecario, hemeroteca, tesiteca, Internet alambrico e inalambrico, revistas impresas, catalogo y acceso en linea de revistas electronicas. De la Unidad Academica Si Con un acervo de 6672 ejemplares Con capacidad para atender a 142 usuarios simultaneamente Con sistemas de estanteria abierta Si No Con servicios de: Consulta a toda la comunidad universitaria, prestamo y renovacion de libros, tesiteca, fotocopiado, Internet, consulta por Internet, Ademas cuenta con catalogo en linea de revistas digitales. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 171 ?Que otros servicios presta la biblioteca en que se apoya el programa a la comunidad estudiantil? (material audiovisual, salas de proyeccion, cubiculos para grupos de estudio, equipos de mecanografia e impresion, equipos de computo para consulta, consulta via Internet, salas de exposiciones, lugar para exposiciones, hemeroteca, videoteca, etc.) n los siguientes servicios: area de computo para realizar consultas, distribucion de software licenciado para los profesores de la FCC, servicio de impresion, tesiteca y servicio de red inalambrica. La biblioteca cuenta con los servicios de sala de computo, fotocopiado, sala de proyecciones, hemeroteca, tesiteca, bases de datos de revistas digitales, cubiculos para grupos de estudio y catalogo en linea. (Se anexa descripcion de los servicios ofrecidos por la Biblioteca de Ciencias Naturales y Exactas , ver apendice 7.30.1) (Se anexa planimetria de la , ver apendice 7.30.2) (Se anexa folleteria utilizada para la difusion de los servicios bibliotecarios, ver apendice 7.30.4) (Se anexa Reglamento Interno de la Direccion General de Bibliotecas, ver apendice 7.30.5) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 172 7.31. La institucion debe elegir y cumplir las normas estandares, para el establecimiento y funcionamiento de las bibliotecas de caracter general y especificas que den servicio al programa. ?La Biblioteca de caracter general y las especificas que dan servicio al programa que se evalua cumplen las normas de la Asociacion de Bibliotecarios de Instituciones de Ensenanza Superior y de Investigacion (ABIES) en sus puntos fundamentales? Si No Incluya la documentacion de soporte correspondiente. (Se anexa oficio que corrobora que las Bibliotecas de la BUAP cumplen con las normas de la ABIES, ver apendice 7.31.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 173 7.32. La biblioteca debe contar con titulos de los textos de referencia usados en las asignaturas del programa, para al menos el 10% de los alumnos inscritos en estas. El material bibliografico existente en la biblioteca en que se apoya el programa dispone de: Textos de referencia senalados en las asignaturas de los planes de estudio Si No Titulos diferentes por cada asignatura que se imparte en el programa Si No Porcentaje de alumnos que pueden hacer uso simultaneo de los textos de referencia disponibles 17% ?Se tienen suscripciones a publicaciones periodicas del area de especialidad y de Ciencias Basicas? Si No La biblioteca Institucional cuenta con una diversidad de revistas impresas y digitales de ciencias basicas como son: Web of Science, IEEE Xplore, American Physical Society, Computer & Applied Sciences Complete, por mencionar algunas. La biblioteca de unidad academica tiene acceso a todas las revistas digitales de la ACM, mediante la direccion www.acm.org. La biblioteca institucional cuenta con acceso a 75 revistas relacionadas con la Licenciatura en Ciencias de la Computacion. (Se anexa hoja de trabajo con la que se realizo la estimacion, ver apendice 7.32.1) (Se anexa relacion de revistas electronicas a las que se tiene acceso mediante el sitio web de la Direccion General de Bibliotecas, ver apendice 7.32.2) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 174 7.33. Se debe contar con infraestructura para acceso a acervos digitales por medio de Internet. La biblioteca dispone de: Infraestructura para acceso a acervos digitales por medio de Internet Si No El portal web de la Direccion General de Bibliotecas (DGB) de la BUAP www.bibliotecas.buap.mx ofrece los siguientes servicios: Catalogo de libros BUAP (Busquedas en todas las bibliotecas de la BUAP o por alguna biblioteca en particular), Busquedas de materiales, tales como: Libros, revistas, libro electronico, partituras, mapas, audio, video, disco compacto, dvd; Catalogo de Tesis y Catalogo de revistas impresas; Biblioteca Digital para acceder a: Revistas electronicas mediante busquedas A a la Z o por areas. En este portal tambien se provee informacion acerca del reglamento, prestamo, renovacion y liberacion de material bibliografico. Para poder hacer uso de dicho portal la biblioteca . Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 175 7.34. La biblioteca debera poder proporcionar el acceso a publicaciones y revistas periodicas relevantes en el area de informatica y computacion. El material bibliografico existente en la biblioteca en que se apoya el programa dispone de: Acceso a publicaciones y revistas periodicas relevantes en el area de informatica y computacion Si No Anexar una lista de las publicaciones periodicas relacionadas con informatica y computacion. (Se anexa listado de revistas relacionadas con la Licenciatura en Ciencias de la Computacion, ver apendice 7.34.1) (Se anexa copia de la suscripcion a las revistas de ACM, ver apendice 7.34.2) (Se anexa Factura de renovacion de acceso a la base de datos que provee EBSCO a la BUAP (Versiones electronicas de revistas especializadas, ver apendice 7.34.3) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 176 7.35. La biblioteca debe contar con colecciones de obras de consulta que incluyan manuales tecnicos, enciclopedias generales y especiales, diccionarios, estadisticas, etcetera; que apoyen al programa. El material bibliografico existente en la biblioteca en que se apoya el programa dispone de Manuales tecnicos del area Si No Colecciones de consulta como diccionarios y enciclopedias generales y especiales Si No Publicaciones Estadisticas Si No (Se anexa lista con los titulos de los diccionarios, enciclopedias y manuales tecnicos disponibles en la , ver apendice 7.35.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 177 7.36. El acervo bibliografico y las suscripciones a las revistas deberan estar sujetos a renovacion permanente. ?Existe renovacion permanente del acervo bibliografico y las suscripciones a las revistas? Si No ?Como se efectua la renovacion del acervo bibliografico y las suscripciones a publicaciones periodicas? La renovacion del acervo bibliografico se realiza en base a tres aspectos: Demanda, deterioro o perdida de algun libro. El proceso de compra de material bibliografico se efectua de la siguiente manera: La Direccion General de Bibliotecas de la BUAP cuenta con recursos extraordinarios que le otorga el gobierno, a traves de los PIFIs, a su vez cada Unidad Academica cuenta con recursos propios para la adquisicion de material bibliografico. La Subdireccion de Desarrollo de Colecciones (SDC) de la DGB de la BUAP es la que se encarga de realizar el proceso de compra mediante Ferias de libros, se convoca al personal de cada Unidad Academica para que acuda a este evento y es la Unidad Academica quien decide cual material bibliografico va a comprar, si acuden los Profesores o solo mandan su lista del material Bibliografico que requiere. Se proporciona a la Unidad Academica un Formato donde se les solicitan datos como: numero de titulos y Numero de ejemplares por titulo que la Unidad Academica necesita, Titulo, Autor, Editorial Edicion, ISBN, Ano. La renovacion de las suscripciones a las revistas IEEE y ACM se realiza anualmente. Se tiene un aproximado de 400 revistas. La suscripcion se realiza a traves de la Secretaria de Investigacion. (Se anexa listado de revistas disponibles con la suscripcion con ACM, ver apendice 7.36.1) Las suscripciones a revistas se realizan de manera anual mediante paquetes (journals y magazines) y se llevan a cabo de manera electronica. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 178 7.37. Se debe contar con medios electronicos que permitan la consulta automatizada del acervo bibliografico. La biblioteca dispone de: Medios electronicos que permitan la consulta automatizada del acervo bibliografico Si No La Direccion General de Bibliotecas tiene a disposicion de la comunidad universitaria un portal para la consulta del material bibliografico, al cual se puede tener acceso mediante la direccion: www.bibliotecas.buap.mx. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 179 7.38 Se deben llevar registros y estadisticas actualizados de los servicios prestados, entre ellos el numero de usuarios y el tipo de servicio que prestan. Esta informacion debe procesarse de manera automatizada La biblioteca en que se apoya el programa dispone de registros actualizados de los servicios bibliotecarios prestados en los ultimos periodos escolares: Si No En caso afirmativo proporcionar los datos correspondientes a los ultimos tres periodos escolares: Biblioteca Niels Bhor: Tipo de servicio Usuarios generales Usuarios del programa Periodos escolares Prestamo 33501 3852 Otono 2007 Prestamo 24045 2765 Primavera 2008 Prestamo 27230 3131 Otono 2008 Biblioteca Alejandro Reyes Cristiani Tipo de servicio Usuarios generales Usuarios del programa Periodos escolares Prestamo 4822 4339 Primavera 2008 Prestamo 7559 6803 Otono 2008 Los prestamos en la Biblioteca Alejandro Reyes Cristiani iniciaron a partir del periodo Primavera 2008. (Se anexan estadisticas proporcionadas por la Direccion General de Bibliotecas de la BUAP, ver apendice 7.38.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 180 7.39. El personal academico debe participar en el proceso de seleccion de material bibliografico. Describa brevemente el proceso de seleccion de material bibliografico, y quienes participan en el. La Direccion General de Bibliotecas de la BUAP cuenta con recursos que le otorga el gobierno, a traves de los PIFIs, a su vez cada Unidad Academica cuenta con recursos propios para la adquisicion de material bibliografico. La Subdireccion de Desarrollo de Colecciones de la DGB de la BUAP es la que se encarga de realizar el proceso de compra mediante ferias de libros, se convoca al personal de cada Unidad Academica para que acuda a este evento y es la Unidad Academica quien decide cual material bibliografico va a comprar, si acuden los Profesores o solo mandan su lista del material bibliografico que requiere. Se proporciona a la Unidad Academica un formato donde se les solicitan datos como: numero de titulos y numero de ejemplares por titulo que la Unidad Academica necesita, Titulo, Autor, Editorial y ordinal y ano de Edicion, ISBN, Ano. (Se anexa oficio de la DGB, en donde se especifica el proceso de seleccion del material bibliografico, ver apendice 7.39.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 181 7.40. Debe existir un mecanismo eficiente de adquisicion de material bibliografico que satisfaga las necesidades del programa. Describa brevemente el mecanismo de adquisicion de material bibliografico, y la manera como este satisface las necesidades del programa. Cuando va a realizar un evento de compra, la SDC informa a la Unidad Academica con cuantos recursos economicos cuenta para adquirir material bibliografico actualizado, posteriormente los profesores de cada unidad academica proponen el material requerido y finalmente las sugerencias son turnadas a la SDC para que haga la compra, este mecanismo satisface las necesidades del programa ya que mas del 10% de los alumnos inscritos en cada materia tienen acceso simultaneo al material bibliografico.
50b442485fa735169f000082 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 209 11 VINCULACION CON EL SECTOR PRODUCTIVO O DE SERVICIOS E INVESTIGACION 11.1. Es recomendable que el personal academico que se dedique fundamentalmente a la docencia realicen actividades de vinculacion con el sector productivo o de servicios. Incluya una relacion del personal academico que realiza actividades de vinculacion con el sector productivo o de servicios. Indique el tipo de actividad. Nombre Actividad M.C. Alma Delia Ambrosio Vazquez Coordinacion de Vinculacion M.C. Beatriz Beltran Martinez Coordinacion de Diplomado Lic. Yolanda Ramirez Encarnacion Coordinacion de Educacion Continua M.C. Rafael de la Rosa Flores Coordinacion del Centro de Tecnologias de la Informacion y Comunicacion M.C Rafael de la Rosa Flores Coordinacion de Fabricas de Software Lic. Consuelo Molina Garcia Coordinacion de Servicio Social M.C. Alma Delia Ambrosio Vazquez Coordinacion de practicas profesionales M.C. Elsa Chavira Martinez Coordinacion de Emprendedores (Se anexa listado de las comisiones y coordinaciones existentes en la Facultad de Ciencias de la Computacion, ver apendice 11.1.1) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 210 11.2. En forma explicita, el programa debe tener estrategias de vinculacion con los sectores social y productivo. Existen estrategias de vinculacion claramente definidas. Si No Explique brevemente en que consisten estas estrategias Promover los servicios que ofrece la Facultad de Ciencias de la Computacion y con ello generar ingresos propios que permitan fortalecer nuestra infraestructura. Establecer convenios especificos de colaboracion con instituciones de gobierno, educativas, centros de investigacion, iniciativa privada y sociedad en general. Fortalecer la integracion de los estudiantes y egresados al medio laboral mediante la realizacion de practicas profesionales y el uso y divulgacion de la Bolsa de Trabajo Universitaria. Realizar actividades de vinculacion que permitan satisfacer las necesidades de capacitacion de los distintos sectores. Fortalecer la experiencia academica y profesional de los alumnos, profesores y egresados mediante su participacion en proyectos de desarrollo tecnologico, actividades de capacitacion y educacion continua. (Se anexa Plan Estrategico de Desarrollo de la FCC 2007-2011, ver apendice 11.2.1) (Se anexan convenios generales de colaboracion y cartas intencion con la FCC, ver apendice 11.2.2) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 211 11.3. Es recomendable que en la institucion haya un programa vinculacion con el sector productivo o de servicios e investigacion, el cual cuente con: 11.3.1 Un grupo de personal academico de carrera, de los cuales, al menos una persona con posgrado en el area de la especialidad del programa, profesores, profesionistas y estudiantes. 11.3.2 Una infraestructura suficiente y pertinente en cuanto a espacios y equipos para la vinculacion con el sector productivo o de servicios. Incluya una relacion de los espacios fisicos y equipos exclusivamente para la vinculacion con el sector productivo o de servicios. Indique cuantas personas utilizan esta infraestructura. 1. La institucion cuenta con el CUV (Centro Universitario de Vinculacion) el cual tiene mil 500 metros cuadrados en su edificio corporativo y mil metros cuadrados de laboratorios. En este centro trabajan 42 personas encargadas de gestionar, formalizar y dar seguimiento a los proyectos de vinculacion. Dependiente a cada proyecto se incorporan alumnos de diferentes disciplinas. (Se anexa primer informe de labores del Rector de la BUAP, ver apendice 11.3.2.1) 2. Particularmente la Facultad de Ciencias de la Computacion para cada uno de sus proyectos de vinculacion cuenta con la siguiente infraestructura: Educacion Continua. El laboratorio cuenta con capacidad para atender a 30 usuarios los cuales pueden ser: alumnos, profesores y publico en general. Cantidad Descripcion 22 CPU PENTIUM HT IV DD 80 GB RAM 512 MB 7 CPU CORE 2DUO DD250GB RAM 2GB 1 CPU PENTIUM IV DD 40 GB RAM 256 MB 2 CPU PENTIUM IV DD 80 RAM 512 MB 21 MONITOR HP S7500 7 MONITOR HP L1706 2 MONITOR LG 1 MONITOR HP 54 6 MESAS COLOR: BLANCO 1 PIZARRON BLANCO FOMES No. 3650 1 GABINETE (DE DOS PUERTAS) 1 VENTILADOR DE PEDESTAL 50 SILLAS (COLOR NEGRO) 1 MESA (MADERA) 1 ESTANTE 1 LOCKER CHICO DE 3 GABETAS 15 REGULADORES DE VOLTAJE 1 IMPRESORA (B/N) LASER JET 4050/C4251A HP 1 PROYECTOR PARA COMP.(CANON) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 212 Cantidad Descripcion 1 IMPRESORA DESKJET 950C HP 1 IMPRESORA (B/N) Laser jet 2300d HP 16 MESAS PARA COMPUTADORA 1 VIDEOPROYECTOR (Se anexa inventario del Modulo de Educacion Continua de la Facultad de Ciencias de la Computacion, ver apendice 11.3.2.2) Centro de Tecnologias de la Informacion y Comunicacion (CTIC). En este espacio trabajan los alumnos que son seleccionados para formar parte de los proyectos de creacion, generacion y/o aplicacion de las Tecnologias de la Informacion y Comunicacion. Cantidad Descripcion 1 IMPRESORA HEWLETT PACKARD 1 SCANNER SCANJET 3200C HEWLETT PACKARD 1 ARCHIVERO 1 CPU CORE 2DUO DD 250GB 2 CPU PENTIUM IV DD 80GB 512 RAM 6 MESAS PARA COMPUTADORA 5 MONITORES 7 SILLAS (Se anexa convocatoria y lista de aceptados en proyectos del CTI, ver apendice 11.3.2.3, paginas 4-6) (Se anexa plan de trabajo del responsable del Centro de Tecnologias de la Informacion y de la Comunicacion, ver apendice 11.3.2.4) (Se anexa inventario del Centro de Tecnologias de la Informacion y de la Comunicacion, ver apendice 11.3.2.5) Modulo I. El laboratorio cuenta con capacidad para atender a 35 usuarios los cuales pueden ser: alumnos, profesores y publico en general. Cantidad Descripcion 20 CPU PENTIUM IV DD80GB 512 RAM 15 CPU CORE 2DUO DD250GB 2GB RAM 34 MONITORES 1 ARCHIVERO 1 BANCO 1 CAMARA 2 EXTINTORES 1 IMPRESORA HP Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 213 Cantidad Descripcion 1 LIBRERO 1 LOCKER 1 MESA 2 PANTALLAS 2 PINTARRONES 44 MESAS PARA COMPUTADORA 39 SILLAS (Se anexa inventario del Modulo I de la Facultad de Ciencias de la Computacion, ver apendice 11.3.2.6) Modulo II. El laboratorio cuenta con capacidad para atender a 42 usuarios los cuales pueden ser: alumnos, profesores y publico en general. Cantidad Descripcion 2 ARCHIVEROS 2 BOCINAS 42 CPU PENTIUM IV DD80GB 512 RAM 2 CAMARAS AXIS 2 EXTINTORES 4.5 KG. 1 IMPRESORA HP 1 IMPRESORA HEWLETT PACKARD 46 MESAS PARA COMPUTADORA 19 MONITOR CRT 22 MONITOR LCD 1 NO BREAK 1 PANTALLA 1 PINTARRON 1 PIZARRON ELECTRONICO CON BASE 3 PROYECTORES 2 RUTEADORES 1 SERVIDOR DE AGUA 44 SILLAS 2 VENTILADORES (Se anexa inventario del Modulo II de la Facultad de Ciencias de la Computacion, ver apendice 11.3.2.7) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 214 Modulo III. El laboratorio cuenta con capacidad para atender a 42 usuarios los cuales pueden ser: alumnos, profesores y publico en general. Cantidad Descripcion 10 CPU CORE 2 DUAL DD500GB 2GBRAM 5 CPU CORE 2DUO DD250GB 2GB RAM 6 CPU PENTIUM IV DD 80GB 1GB RAM 21 CPU PENTIUM IV DD80GB 512 RAM 43 MONITORES LCD 1 PINTARRON 1 CAMARA 1 EXTINTOR 1 GABINETE UNIVERSAL 1 IMPRESORA 2 LOCKERS 1 PANTALLA 1 PIZARRON 51 MESAS PARA COMPUTADORA 47 SILLAS (Se anexa inventario del Modulo III de la Facultad de Ciencias de la Computacion, ver apendice 11.3.2.8) Modulo IV. El laboratorio cuenta con capacidad para atender a 31 usuarios los cuales pueden ser: alumnos, profesores y publico en general. Cantidad Descripcion 26 CPU PENTIUM IV DD 80GB 512 RAM 14 CPU CORE 2DUO DD 250GB 1 CAMARA AXIS 41 MESAS PARA COMPUTADORA 22 MONITOR LCD 19 MONITOR CRT 48 SILLAS 1 GABINETE 1 VENTILADORES 1 CAMARA 2 EXTINTORES 1 GRABADORA 1 PROYECTOR 1 TP-LINK 1 VIDEOPROYECTOR Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 215 (Se anexa inventario del Modulo IV de la Facultad de Ciencias de la Computacion, ver apendice 11.3.2.9) Base de Datos. El laboratorio cuenta con capacidad para atender a 23 usuarios los cuales pueden ser: alumnos y profesores. Cantidad Descripcion 15 CPU CORE 2DUO DD250GB 2GB RAM 7 CPU PENTIUM4 DD80GB 512RAM 7 MONITOR S7500 HP 1 IMPRESORA 4100N HP 1 AIRE ACONDICIONADO 1 BOTIQUIN 1 EXTINTOR 1 GABINETE UNIVERSAL 1 GARRAFON DE AGUA 1 LOCKER METALICO 25 MESAS 15 MONITOR HP L1706 2 MONITOR SAMSUMG 1 VITRINA 1 PANTALLA PARA PROYECTOR 1 PIZARRON 1 PROYECTORNEC 1 RUTEADOR 40 SILLAS FORRADAS 1 VENTILADOR (Se anexa inventario del Laboratorio de Base de Datos de la FCC, ver apendice 11.3.2.10) 11.3.3 Una politica institucional que fije claramente la normatividad para los proyectos de vinculacion Existe una politica institucional que fije claramente las la normatividad para los proyectos de vinculacion. Si No En caso afirmativo describa brevemente en que consiste esta politica: Consolidar la vinculacion con otras instituciones y con los sectores productivos para el desarrollo y la oferta de servicios atendiendo las necesidades especificas y sustentables del pais y la region. Colaboracion entre la Universidad y su entorno en un alto nivel de corresponsabilidad para dar cabida a iniciativas y proyectos de beneficio mutuo, aprovechando las capacidades con la que cuentan sus investigadores, profesores y su infraestructura. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 216 Fortalecer la economia institucional generando recursos financieros derivados de fuentes alternas e incluyendo los ingresos propios con el objetivo de plantear una buena economia universitaria basada en la calidad del trabajo academico y sus resultados, pero tambien por sus innovaciones en materia de programas y servicios, por su inteligencia organizacional, su eficiencia administrativa y por la transparencia en el manejo de los recursos. Promover la transferencia de tecnologica a traves de la cual se logre un impacto social, concretando los desarrollos en investigacion realizados por la BUAP. Impulsar la gestion del conocimiento para emigrarlo a la solucion de problemas reales del entorno nacional. (Se anexa copia del Premio Nacional de Vinculacion otorgado a la BUAP, ver apendice 11.3.3.1) (Se anexa politica institucional del CUV, ver apendice 11.3.3.2, pagina 4 y 5) 11.3.4 Un proyecto que defina la funcionalidad, organizacion y aplicacion de recursos de los proyectos de vinculacion. Existe un reglamento institucional que defina claramente la funcionalidad y organizacion de los proyectos de vinculacion. Si No En caso afirmativo, anexar el reglamento (Se anexa Reglamento de Vinculacion Universitaria, ver apendice 11.3.4.1) 11.3.5 Personal de apoyo suficiente, en funcion del tamano e importancia de cada proyecto. Incluya una relacion del personal de apoyo. Cada modulo cuenta con un profesor responsable y un grupo de alumnos colaboradores Modulo I Nombre Cargo MC. Rogelio Gonzalez Velazquez Coordinador del laboratorio Jesus Lazcano Abascal Alumno colaborador Arturo Perez Mixcoatl Alumno colaborador Marco Antonio Bonifacio Maceda Alumno colaborador Martin Reyes Elizalde Alumno colaborador Miguel Angel Susano Aguilar Alumno colaborador Braulio Garcia Martinez Alumno colaborador Gammaliel Piedra Sanchez Alumno colaborador Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 217 Modulo II Nombre Cargo MC. Mario Anzures Garcia Coordinador del laboratorio Alma Rosa Hernandez Enriquez Alumno colaborador Jorge Castellanos Hernandez Alumno colaborador Maria Isabel Sandoval Ponce Alumno colaborador Antonio Cid Ramos Alumno colaborador Jose Gonzalez Gaspar Alumno colaborador Mijail Mendez Martinez Alumno colaborador Luis Alberto Hernandez Ramirez Alumno colaborador Felix Garrido Alumno colaborador Jose Antonio Flores Castillo Alumno colaborador Ubaldo Salazar Garcia Alumno colaborador Fabian Garcia Tochihuitl Alumno colaborador Jose de Jesus Hernandez Cuahquentzi Alumno colaborador Jose Manuel Benitez Nieto Alumno colaborador Modulo III Nombre Cargo Yolanda Moyao Martinez Coordinadora del laboratorio Roberto Bouchot Mancera Alumno colaborador Raymundo Perez Sanchez Alumno colaborador Jose Alfredo Villela Rodriguez Alumno colaborador Giovanni Cisneros Ahuactzi Alumno colaborador Erika Cotlame Cervantes Alumno colaborador Aaron Meis Sanchez Alumno colaborador Antonio Sosa Sanchez Alumno colaborador Hugo Gabriel Martinez Banfi Alumno colaborador Lopez Hernandez Edgar Alumno colaborador Anibal Santiago Morales Alumno colaborador Francisco Ramirez Vicente Alumno colaborador Rigoberto Torres Rodriguez Alumno colaborador Fernando Juarez Varela Alumno colaborador Jesus Enriquez Vazquez Molina Alumno colaborador Jose Luis Moreno Partido Alumno colaborador Fernanda Linares Diaz Alumno colaborador Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 218 Modulo IV Nombre Cargo MC. Yalu Galicia Hernandez Coordinadora del laboratorio Luis Erik Ponce Alumno colaborador Alejandro Mendoza C. Alumno colaborador Angel Hernandez del Angel Alumno colaborador Angel Ivan Perez Morales Alumno colaborador Ariana Bernal Sanchez Alumno colaborador Ivan Perez Posadas Alumno colaborador Jose Ignacio Lopez Rodriguez Alumno colaborador Jose Manuel Osornio Lara Alumno colaborador Josephe Adrian Cruz Gonzalez Alumno colaborador Luis Josue Olmos Alumno colaborador Monica R. Mora Hernandez Alumno colaborador Mucio Homero Palacios Olivares Alumno colaborador Pablo Camarillo Ramirez Alumno colaborador Paul Michel Letechipia Alumno colaborador Rodolfo Ulbrich Mendez Alumno colaborador Stephany Iris Tlahuizo Soria Alumno colaborador Base de Datos Nombre Cargo Dra. Maria Josefa Somodevilla Garcia Coordinadora del laboratorio Jose Antonio Oropeza Herrera Alumno colaborador Ivana Donovan Narvaez Hernandez Alumno colaborador Miguel Antonio Juarez Cabildo Alumno colaborador Carlos Corte Correa Alumno colaborador Educacion Continua Nombre Cargo Yolanda Ramirez Encarnacion Coordinadora del laboratorio Lopez Vichique Ruth Alumno colaborador Manzano Espindola Silvia Cristina Alumno colaborador De la Rosa Zacarias Luz Guadalupe Alumno colaborador Martinez de Jesus Sandy Alumno colaborador Martinez Marcos Raymundo Alumno colaborador Maldonado Ulloa Jimmy Alejandro Alumno colaborador Asencio Hernandez Alberto Alumno colaborador Vazquez Castillo Jose Emilio Alumno colaborador Arriaga Martinez Alexander Alumno colaborador Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 219 Nombre Cargo Cervantes aguila Javier Arturo Alumno colaborador Aroche Villaroel Argenis Aldair Alumno colaborador Cruz Ramos Andy Alumno colaborador Morales Garcia Horacio Alumno colaborador Garcia Tecpa Omar Yafer Alumno colaborador Centro de Tecnologias de la Informacion Nombre Cargo MC. Rafael de la Rosa Flores Coordinador del laboratorio Aroche Barreto Leticia Alumno colaborador Cruz Mendez Noemi Alumno colaborador Cruz Sanchez Ivan Alumno colaborador Cruz Rosales Xavier Alumno colaborador Juarez Rocha Carlos Daniel Alumno colaborador Mellado Mateos Carlos Eduardo Alumno colaborador Perez Valadez Andrea Alumno colaborador Reyes Aburo Marcos Ignacio Alumno colaborador Lima Romero Carlos Daniel Alumno colaborador Vera Guevara Alberto Alumno colaborador 11.3.6 Fondos suficientes dedicados exclusivamente a cada proyecto, independientemente de que el origen sea interno o externo. En terminos generales todos los proyectos de vinculacion cuentan con fondos suficientes y exclusivos para cada proyecto. Como un ejemplo tenemos el caso del Diplomado, cuyos ingresos siempre han sido superiores a sus egresos. (Se anexa informe financiero del Diplomado, ver apendice 11.3.6.1, paginas 10 y 15) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 220 11.4. Es recomendable que el personal academico que se dedique fundamentalmente a la investigacion, imparta docencia. Incluya una relacion del personal academico que realiza actividades de investigacion. No. de Profesor Grado Nombre Cuerpo Academico SNI/IBUAP/PROMEP 100221911 D Colmenares Guillen Luis Enrique Sistemas de Informacion IBUAP 100128244 D Guillen Galvan Carlos IBUAP 100237033 DG Pinto Avendano David Eduardo Sistemas de Informacion IBUAP/PROMEP 100223144 DG Altamirano Robles Luis Carlos 100178444 DG Bautista Ramos Cesar SNI/IBUAP/PROMEP 100076511 DG Bermudez Juarez Maria Blanca del Carmen Computacion Matematica SNI/IBUAP/PROMEP 100005888 DG Bustillo Diaz Mario Mauricio Ingenieria Computacional IBUAP/PROMEP 100036755 DG Castro Cardona Mauricio Sistemas de Informacion PROMEP 100238800 DG Cortez Jose Italo Ingenieria Computacional IBUAP/PROMEP 100038766 DG De Ita Luna Guillermo Sistemas de Informacion IBUAP/PROMEP 100190255 DG Garcia Juarez Pedro 100100788 DG Leon Chavez Miguel Angel Sistemas Distribuidos IBUAP/PROMEP 100100011 DG Martin Ortiz Manuel Isidro Sistemas Distribuidos IBUAP/PROMEP 100443488 DG Olmos Pineda Ivan SNI/IBUAP 100408933 DG Perez de Celis Herrero Maria de la Concepcion Sistemas de Informacion PROMEP 100130900 DG Pineda Torres Ivo Humberto Sistemas Distribuidos PROMEP 100067111 DG Rangel Huerta Jose Alejandro Ingenieria Computacional SNI/IBUAP/PROMEP 100210533 DG Rossainz Lopez Mario Sistemas Distribuidos IBUAP/PROMEP 100319188 DG Rubin Falfan Manuel Ingenieria Computacional SNI/IBUAP/PROMEP 100223622 DG Sanchez Lopez Abraham Computacion Matematica SNI/IBUAP/PROMEP 100334100 DG Sanchez Rinza Barbara Emma Sistemas Distribuidos IBUAP/PROMEP 100064377 DG Sandoval Solis Maria de Lourdes Computacion Matematica SNI/IBUAP/PROMEP 100036799 DG Somodevilla Garcia Maria Josefa Sistemas de Informacion IBUAP/PROMEP 100409411 DG Vilarino Ayala Darnes Sistemas de Informacion IBUAP/PROMEP 100207133 DG Zacarias Flores Fernando Sistemas de Informacion IBUAP/PROMEP 100443477 DG Zepeda Cortez Claudia SNI/IBUAP 100003911 MG Ata Perez Apolonio Ingenieria Computacional PROMEP 100299377 MG Bello Lopez Pedro IBUAP/PROMEP 100239644 MG Beltran Martinez Beatriz Sistemas de Informacion IBUAP/PROMEP 100207200 MG Bernabe Loranca Maria Beatriz Computacion Matematica PROMEP 100299344 MG Carrillo Ruiz Maya Sistemas Distribuidos PROMEP 100238122 MG Castillo Zacatelco Hilda Sistemas Distribuidos PROMEP 100430944 MG Contreras Gonzalez Meliza IBUAP 100119488 MG Gonzalez Velazquez Rogelio Computacion Matematica IBUAP 100203188 MG Lavalle Martinez Jose de Jesus 100231977 MG Lopez Andrade Carlos Alberto 100190544 MG Sanchez Galvez Alba Maribel Computacion Matematica IBUAP/PROMEP 100409344 MG Tovar Vidal Mireya Sistemas de Informacion IBUAP/PROMEP 100038455 MG Vazquez Flores Jose Andres Sistemas de Informacion PROMEP 100203199 MG Vera Cervantes Eugenia Erica Sistemas de Informacion IBUAP/PROMEP Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 221 11.5. Es recomendable que en la institucion haya un programa de investigacion, el cual cuente con 11.5.1 Un grupo de personal academico de carrera, integrado para desarrollar actividades de investigacion, constituido por un minimo de una persona con posgrado en el area de la especialidad del programa, preferentemente con el grado de doctor, y al menos tres profesores, profesionistas o estudiantes. La Vicerrectoria de Investigacion y Estudios de Posgrado es el organismo institucional orientado a alcanzar y mantener el liderazgo de la BUAP en el desarrollo cientifico y tecnologico. Esta Vicerrectoria esta fundamentada en los Cuerpos Academicos (CA) y en las lineas de investigacion consolidadas de las diferentes Unidades Academicas. Es asi, que a traves de los CA se pretende impulsar el desarrollo tecnologico de la region y el pais en un ambiente de etica, equidad y justicia social, buscando como resultado la formacion de jovenes investigadores altamente calificados, creativos e innovadores, capaces de proporcionar soluciones sustentadas cientificamente y con aportes tecnologicos importantes. En su constitucion los CA estan integrados por profesores investigadores de tiempo completo con posgrado, principalmente con doctorado, los cuales lideran proyectos en el area de especialidad de los programas academicos. Cabe mencionar que en los diferentes proyectos de los CA se incorporan, generalmente como parte del equipo de colaboradores, a profesores y alumnos de los programas de la Unidad Academica. 11.5.2 Una infraestructura suficiente y pertinente en cuanto a espacios y equipos para la investigacion. El area de investigacion y estudios de posgrado cuenta con la siguiente infraestructura: Laboratorios de Posgrado Cantidad Descripcion 8 ARCHIVEROS 26 C.P.U. INTEL CORE 2DUO DD250GB 2GB RAM 1 EQUIPO DE AIRE ACONDICIONADO 1 ESCANER 1 ESCRITORIO 2 ESCRITORIO EJECUTIVO 18 ESCRITORIO SECRETARIAL 1 IMPRESORA CANON 1 IMPRESORA HEWLETT PACKARD 1 IMPRESORA HP Q2665A 1 IMPRESORA HP LASER JET2100 1 IMPRESORA LEXMARK 1 IMPRESORA MULTIFUNCIONAL 1 LIBRERO 1 MESA 10 MESA PARA COMPUTADORA 23 MONITOR DELL Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 222 Cantidad Descripcion 1 NO BREAK TRIPLITE 3 PINTARRON 1 PIZARRON 1 PROYECTOR 1 REGULADOR DE VOLTAJE 13 SILLAS Laboratorio de Servidores SUN Cantidad Descripcion 1 C.P.U.ATHLON DD120GB 512RAM 1 IMPRESORA LASSERJET 4000TN 2 MONITOR 1 MONITOR SVGA 1 NO BREAK 2 SERVER 2*1.05GHz ultraSPARC III Cu processors with 8MB 4 GB 1 SERVIDOR XEON 3.2 DD660GB RAM 4GB 1 ARCHIVERO 2 C.P.U.PENTIUM III DD40GB 128RAM 2 CONCENTRADOR DE RED 1 ESCRITORIO 2 ESTACION DE TRABAJO 1 GABINETE UNIVERSAL 1 LIBRERO VERTICAL 1 MONITOR 2 PINTARRON 3 MESAS 2 AIRE ACONDICIONADO 5 SILLAS (Se anexa inventario de los laboratorios de posgrado, ver apendice 11.5.2.1) (Se anexa inventario del laboratorio de servidores SUN, ver apendice 11.5.2.2) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 223 Incluya una relacion de los espacios fisicos y equipos exclusivamente para la vinculacion con el sector productivo o de servicios. Indique cuantas personas utilizan esta infraestructura. 1. La institucion cuenta con el CUV el cual tiene mil 500 metros cuadrados en su edificio corporativo y mil metros cuadrados de laboratorios. En este centro trabajan 42 personas encargadas de gestionar, formalizar y dar seguimiento a los proyectos de vinculacion. Dependiente a cada proyecto se incorporan alumnos de diferentes disciplinas. (Se anexa primer informe de labores del Rector de la BUAP, ver apendice 11.5.2.3) 2. Particularmente la Facultad de Ciencias de la Computacion para cada uno de sus proyectos de vinculacion cuenta con la siguiente infraestructura: Educacion Continua. El laboratorio cuenta con capacidad para atender a 30 usuarios los cuales pueden ser: alumnos, profesores y publico en general. Cantidad Descripcion 22 CPU PENTIUM HT IV DD 80 GB RAM 512 MB 7 CPU CORE 2DUO DD250GB RAM 2GB 1 CPU PENTIUM IV DD 40 GB RAM 256 MB 2 CPU PENTIUM IV DD 80 RAM 512 MB 21 MONITOR HP S7500 7 MONITOR HP L1706 2 MONITOR LG 1 MONITOR HP 54 6 MESAS COLOR: BLANCO 1 PIZARRON BLANCO FOMES No. 3650 1 GABINETE (DE DOS PUERTAS) 1 VENTILADOR DE PEDESTAL 50 SILLAS (COLOR NEGRO) 1 MESA (MADERA) 1 ESTANTE 1 LOCKER CHICO DE 3 GABETAS 15 REGULADORES DE VOLTAJE 1 IMPRESORA (B/N) LASER JET 4050/C4251A HP 1 PROYECTOR PARA COMP.(CANON) 1 IMPRESORA DESKJET 950C HP 1 IMPRESORA (B/N) Laser jet 2300d HP 16 MESAS PARA COMPUTADORA 1 VIDEOPROYECTOR (Se anexa inventario del Modulo de Educacion Continua de la Facultad de Ciencias de la Computacion, ver apendice 11.5.2.4) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 224 Centro de Tecnologias de la Informacion (CTI). En este espacio trabajan los alumnos que son seleccionados para formar parte de los proyectos de creacion, generacion y/o aplicacion de las Tecnologias de la Informacion y Comunicacion. Cantidad Descripcion 1 IMPRESORA HEWLETT PACKARD 1 SCANNER SCANJET 3200C HEWLETT PACKARD 1 ARCHIVERO 1 CPU CORE 2DUO DD 250GB 2 CPU PENTIUM IV DD 80GB 512 RAM 6 MESAS PARA COMPUTADORA 5 MONITORES 7 SILLAS (Se anexa convocatoria y lista de aceptados en proyectos del CTI, ver apendice 11.5.2.5, paginas 4-6) (Se anexa plan de trabajo del responsable del Centro de Tecnologias de la Informacion, ver apendice 11.5.2.6) (Se anexa inventario del Centro de Tecnologias de la Informacion, ver apendice 11.5.2.7) Modulo I. El laboratorio cuenta con capacidad para atender a 35 usuarios los cuales pueden ser: alumnos, profesores y publico en general. Cantidad Descripcion 20 CPU PENTIUM IV DD80GB 512 RAM 15 CPU CORE 2DUO DD250GB 2GB RAM 34 MONITORES 1 ARCHIVERO 1 BANCO 1 CAMARA 2 EXTINTORES 1 IMPRESORA HP 1 LIBRERO 1 LOCKER 1 MESA 2 PANTALLAS 2 PINTARRONES 44 MESAS PARA COMPUTADORA 39 SILLAS (Se anexa inventario del Modulo I de la Facultad de Ciencias de la Computacion, ver apendice 11.5.2.8) Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 225 Modulo II. El laboratorio cuenta con capacidad para atender a 42 usuarios los cuales pueden ser: alumnos, profesores y publico en general. Cantidad Descripcion 2 ARCHIVEROS 2 BOCINAS 42 CPU PENTIUM IV DD80GB 512 RAM 2 CAMARAS AXIS 2 EXTINTORES 4.5 KG. 1 IMPRESORA HP 1 IMPRESORA HEWLETT PACKARD 46 MESAS PARA COMPUTADORA 19 MONITOR CRT 22 MONITOR LCD 1 NO BREAK 1 PANTALLA 1 PINTARRON 1 PIZARRON ELECTRONICO CON BASE 3 PROYECTORES 2 RUTEADORES 1 SERVIDOR DE AGUA 44 SILLAS 2 VENTILADORES (Se anexa inventario del Modulo II de la Facultad de Ciencias de la Computacion, ver apendice 11.5.2.9) Modulo III. El laboratorio cuenta con capacidad para atender a 42 usuarios los cuales pueden ser: alumnos, profesores y publico en general. Cantidad Descripcion 10 CPU CORE 2 DUAL DD500GB 2GBRAM 5 CPU CORE 2DUO DD250GB 2GB RAM 6 CPU PENTIUM IV DD 80GB 1GB RAM 21 CPU PENTIUM IV DD80GB 512 RAM 43 MONITORES LCD 1 PINTARRON 1 CAMARA 1 EXTINTOR 1 GABINETE UNIVERSAL 1 IMPRESORA 2 LOCKERS 1 PANTALLA Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 226 Cantidad Descripcion 1 PIZARRON 51 MESAS PARA COMPUTADORA 47 SILLAS (Se anexa inventario del Modulo III de la Facultad de Ciencias de la Computacion, ver apendice 11.5.2.10) Modulo IV. El laboratorio cuenta con capacidad para atender a 31 usuarios los cuales pueden ser: alumnos, profesores y publico en general. Cantidad Descripcion 26 CPU PENTIUM IV DD 80GB 512 RAM 14 CPU CORE 2DUO DD 250GB 1 CAMARA AXIS 41 MESAS PARA COMPUTADORA 22 MONITOR LCD 19 MONITOR CRT 48 SILLAS 1 GABINETE 1 VENTILADORES 1 CAMARA 2 EXTINTORES 1 GRABADORA 1 PROYECTOR 1 TP-LINK 1 VIDEOPROYECTOR (Se anexa inventario del Modulo IV de la Facultad de Ciencias de la Computacion, ver apendice 11.5.2.11) Base de Datos. El laboratorio cuenta con capacidad para atender a 23 usuarios los cuales pueden ser: alumnos y profesores. Cantidad Descripcion 15 CPU CORE 2DUO DD250GB 2GB RAM 7 CPU PENTIUM4 DD80GB 512RAM 7 MONITOR S7500 HP 1 IMPRESORA 4100N HP 1 AIRE ACONDICIONADO 1 BOTIQUIN 1 EXTINTOR 1 GABINETE UNIVERSAL 1 GARRAFON DE AGUA Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 227 Cantidad Descripcion 1 LOCKER METALICO 25 MESAS 15 MONITOR HP L1706 2 MONITOR SAMSUMG 1 VITRINA 1 PANTALLA PARA PROYECTOR 1 PIZARRON 1 PROYECTORNEC 1 RUTEADOR 40 SILLAS FORRADAS 1 VENTILADOR (Se anexa inventario del Laboratorio de Base de Datos de la FCC, ver apendice 11.5.2.12) 11.5.3 Una politica institucional que fije claramente las lineas de investigacion y la normatividad. Si el programa cuenta con lineas de investigacion definidas, enumerelas y describalas en forma sintetica. En la Facultad de Ciencias de la Computacion tenemos cuatro cuerpos academicos en fase de consolidacion, reconocidos por el Programa de Mejoramiento del Profesorado (PROMEP) agrupados en dos lineas de investigacion: I) Tecnologias de Software y II) Computacion Aplicada a las Ciencias y a la Ingenieria. Tecnologias de Software. Investigaciones y aplicaciones que utilizan eficientemente los diferentes modelos, metodos, tecnicas y algoritmos computacionales para el desarrollo de Sistemas de Software. Agrupa a los cuerpos academicos: 1. Computacion Distribuida. Enfocado al estudio de los modelos y metodologias para el desarrollo de Sistemas cuyo unico medio para compartir informacion es el intercambio de mensajes. 2. Sistemas de Informacion. Enfocado al estudio de modelos y metodologias para el manejo y administracion de grandes cantidades de informacion, incluyendo tecnicas eficientes de recuperacion de la misma. Computacion Aplicada a las Ciencias y a la Ingenieria. Investigaciones y aplicaciones de las Ciencias de la Computacion que utilizan eficientemente tecnicas computacionales que involucran: Analisis Numerico, Simulacion, Optimizacion, Inteligencia Artificial y Geometria Computacional, en el analisis y diseno de sistemas en campos diversos de la ciencia y la ingenieria. Agrupa a los cuerpos academicos: 1. Computacion Matematica. Enfocado a la solucion de problemas que surgen en diversas areas de las ciencias e ingenieria utilizando tecnicas numericas de Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 228 optimizacion o bien la solucion numerica de ecuaciones diferenciales ordinarias y parciales. 2. Ingenieria Computacional. Enfocado a la aplicacion del computo numerico en algunas areas de la ingenieria, utilizando tecnicas y herramientas de computo, tales como: Simulacion, Optimizacion, Control e Inteligencia Artificial. (Se anexa listado de los cuerpos academicos existentes en la Facultad de Ciencias de la Computacion, ver apendice 11.5.3.1) 11.5.4 Lideres vinculados a las lineas de investigacion que posean los grados academicos pertinentes. Haga una relacion de los lideres de proyectos vinculados a las lineas de investigacion, e indique el nivel de los grados academicos que tiene cada uno (maestria, doctorado). Nombre del Lider de Proyecto Linea de Investigacion Grado Academico Somodevilla Garcia Maria Josefa Sistemas de Informacion Doctorado Rangel Huerta Jose Alejandro Ingenieria Computacional Doctorado Martin Ortiz Manuel Isidro Sistemas Distribuidos Doctorado Osorio Lama Maria Auxilio Computacion Matematica Doctorado 11.5.5 Normatividad expresa y aprobada para su desarrollo. ?En la Institucion esta explicita y debidamente aprobada la normatividad relativa las tareas de investigacion? Si No En caso afirmativo, exponga los puntos mas importantes. Como se menciono en el inciso 11.5.1 la Vicerrectoria de Investigacion y Estudios de Posgrado (http://www.viep.buap.mx/) es el organismo institucional encargado de propiciar las tareas de investigacion al interior de la BUAP, para lo que hasta el momento ha implementado los siguientes programas: 1. Padron de Investigadores BUAP. El Padron de las Academias de Investigacion y Posgrado por area de conocimiento, estara conformado por todos los ProfesoresInvestigadores (PI) de Tiempo Completo y Medio Tiempo que hayan desarrollado labores de investigacion y de docencia de posgrado en forma regular. 2. Programa Institucional de Fomento a la Investigacion y Consolidacion de los Cuerpos Academicos. Este programa convoca a los miembros del Padron de Investigadores de la BUAP a solicitar apoyos financieros para sus proyectos de investigacion, los cuales son sometidos a concurso en las siguientes categorias: 3. Sub-Programa de aseguramiento de investigadores consolidados. Dirigido a miembros del SNI (Niveles II y III o a Niveles I con trayectoria reconocida) Los proyectos podran ser individuales o de grupo. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 229 4. Sub-Programa para la consolidacion de investigadores jovenes. Dirigido a Candidatos a Investigador Nacional o a Investigadores Nivel I (menores de 40 anos) Los proyectos deberan ser Individuales. 5. Sub-Programa de apoyo al desarrollo de la Investigacion. Dirigido a investigadores miembros del Padron que aun no han ingresado al SNI. Se dara preferencia a investigadores con doctorado. Los proyectos deberan ser Individuales. Se cuenta tambien institucionalmente con la Direccion de Capacidad y Competitividad Academica que depende de la Vicerrectoria de Docencia quienes se encargan gestionar y propiciar proyectos de investigacion apoyados por PROMEP. Al interior de la Facultad de Ciencias de la Computacion se cuenta tambien con lineamientos para proyectos internos de investigacion a traves del ejercicio anual de los PIFI, en los cuales se destina una parte considerable a impulsar y estimular la investigacion, poniendo enfasis en que los proyectos de investigacion involucren a estudiantes. Por otra parte se cuenta con un programa de posgrado que tiene entre sus objetivos la formacion de jovenes investigadores en el area de las Ciencias de la Computacion. (Se anexa convocatoria del Programa Padron de Investigadores BUAP, ver apendice 11.5.5.1) (Se anexa convocatoria del Programa Institucional de Fomento a la Investigacion y a la Consolidacion de Cuerpos Academicos, ver apendice 11.5.5.2) (Se anexa convocatoria del Programa Jovenes Investigadores, ver apendice 11.5.5.3) (Se anexa listado de proyectos financiados por la VIEP, ver apendice 11.5.5.4) 11.5.6 Personal de apoyo suficiente, en funcion del tamano e importancia de cada proyecto. No se cuenta con la figura de asistente de investigador dentro de las categorias del personal academico universitario, sin embargo dentro de los diferentes programas disenados para propiciar y fomentar la investigacion en nuestra institucion, se cuenta con partidas destinadas para becarios a nivel tanto licenciatura y maestria, asi como para realizar estancias cortas de investigadores y movilidad tanto estudiantil, como del profesorado involucrado en los diferentes proyectos. Por otra parte cuando es requerido se cuenta con el apoyo de la Direccion General de Relaciones Internacionales e Intercambio Academico y de la Abogada General para el tramite y la firma de convenios de colaboracion academica. 11.5.7 Fondos suficientes dedicados exclusivamente a cada proyecto, independientemente de que el origen sea interno o externo. Tanto Institucionalmente como al interior de la FCC los presupuestos relativos a cada proyecto se realizan por los investigadores integrantes del mismo. Posteriormente estos presupuestos, y la documentacion completa del proyecto, se someten a los mecanismos que la institucion cuenta para el patrocinio de los diferentes proyectos de investigacion. Dado lo anterior y despues de la evaluacion de la pertinencia e importancia del proyecto se le asignan los recursos conforme a la documentacion presentada y a los recursos Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 230 disponibles. Existen tambien apoyos anuales, otorgados por PROMEP para la consolidacion de los cuerpos academicos, los cuales se distribuyen al interior de los diferentes cuerpos academicos de acuerdo a las necesidades de los proyectos inscritos en el mismo. (Se anexa listado de apoyos otorgados por el PROMEP, ver apendice 11.5.7.1) (Se anexa listado de proyectos financiados por la VIEP, ver apendice 11.5.7.2) (Se anexa listado de apoyos otorgados por PIFI, ver apendice 11.5.7.3) (Se anexa listado de apoyos otorgados por la FCC, ver apendice 11.5.7.4) Proporcionar los proyectos de investigacion vinculados con el programa en las siguientes formas: Tabla de Proyecto Cronograma por trimestres Relacion de proyectos de investigacion terminados en los ultimos cinco anos. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 231 Nombre del proyecto: Especificacion y verificacion formal. Fecha de inicio del proyecto 21 / 05 / 01 Fecha programada de terminacion 21 / 05 / 06 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Contribuir en la difusion, desarrollo y aplicacion de los metodos formales Desarrollar prototipos para la verificacion y especificacion, basados en distintos formalismos y para diferentes tipos de sistemas Responsable del proyecto Jose Lavalle Martinez Tiempo de dedicacion 4 hrs/semana Participantes en proyecto Cesar Bautista Ramos Tiempo de dedicacion 4 hrs/semana Jose Palacios Perez Tiempo de dedicacion 8 hrs/semana M.C. Carlos Guillen Galvan Tiempo de dedicacion 8 hrs/semana M.C. Mireya Tovar Vidal Tiempo de dedicacion 8 hrs/semana Fuentes de financiamiento: Ninguno Produccion relacionada con: Tesis Nivel: Licenciatura 5 Maestria 1 Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Analisis X Diseno X Implementacion X Escritura del reporte X Trabajo de investigacion y direccion de Tesis X X X X X X X X X X X X X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 232 Nombre del proyecto: Mejoramiento del Rendimiento para Sistemas Operativos tipo Linux Fecha de inicio del proyecto: 25/05/2004 Fecha programada de terminacion: 25/05/2005 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Proyecto cuya tematica se encuentra en la linea de investigacion de Sistemas operativos cuyo origen tiene que ver con el mejoramiento del desempeno de las redes de computadoras. Actualmente el proyecto se ha concluido y se han obtenido como resultado un mejor entendimiento de los sistemas operativos tipo Linux a traves de un seminario. Han resultado dos tesis de licenciatura terminadas. Responsable del proyecto Castillo Zacatelco Hilda Tiempo de dedicacion (hrs/semana) 20 Participantes en proyecto David Pinto Avendano Tiempo de dedicacion (hrs/semana) 8 Beatriz Beltran Tiempo de dedicacion (hrs/semana) 8 Fuentes de financiamiento: No financiado Produccion relacionada con: Tesis Nivel: Licenciatura 2 Maestria Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Seminario X X X X Tesis X X X X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 233 Nombre del proyecto: Linda BUAP: Sistema de Procesamiento paralelo con arquitectura MIMD y memoria virtual compartida. Fecha de inicio del proyecto: 25/05/2004 Fecha programada de terminacion:25/05/2005 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Construir software de alto rendimiento basado en el modelo LINDA. El proyecto se presento en el IV Foro de proyectos de la FCC BUAP siendo aprobado como proyecto no financiado. Actualmente el proyecto ha sido concluido. Los resultados se reportaron en varios eventos academicos y congresos, ademas se concluyeron tres tesis de licenciatura. Responsable del proyecto Graciano Cruz Almanza Tiempo de dedicacion (hrs/semana) 20 Participantes en proyecto Manuel Martin Ortiz Tiempo de dedicacion (hrs/semana) 4 Liliana Olguin Gil Tiempo de dedicacion (hrs/semana) 20 Irene Garcia Ortega Tiempo de dedicacion (hrs/semana) 20 Ana Claudia Zenteno Tiempo de dedicacion (hrs/semana) 20 Fuentes de financiamiento: no financiado Produccion relacionada con: Tesis Nivel: Licenciatura 1 Maestria 2 Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Preparacion de articulos de memorias y ponencias relacionadas X X X X Direccion de tesis de Licenciatura y maestria X X X X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion 1 Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 234 Nombre del proyecto: Analisis y revision de aspectos metodologicos para el diseno curricular Fecha de inicio del proyecto: 25/05/2004 Fecha programada de terminacion:25/05/2005 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Proyecto institucional motivado por la insercion de la Universidad en la problematica y dinamica social. Proyecto terminado con propuestas especificas plasmadas en el plan de desarrollo de la BUAP denominado proyecto Minerva. El cual ha sido aprobado por la institucion como base para el desarrollo institucional en los proximos anos. Responsable del proyecto Jimenez Gonzalez Jorge Tiempo de dedicacion (hrs/semana) 20 Participantes en proyecto Apolonio Ata Perez Tiempo de dedicacion (hrs/semana) 8 Rocio Boone Rojas Tiempo de dedicacion (hrs/semana) 8 Yolanda Ramirez Encarnacion Tiempo de dedicacion (hrs/semana) 8 Olivia Romero Tehuitzil Tiempo de dedicacion (hrs/semana) 8 Manuel Rubin Falfan Tiempo de dedicacion (hrs/semana) 8 Fuentes de financiamiento: No financiado Produccion relacionada con: Tesis Nivel: Licenciatura Maestria Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Reuniones de trabajo y disertacion X X X X Escritura de la propuesta de desarrollo institucional X X X X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 235 Nombre del proyecto: Solucion de diferentes tipos de problemas de optimizacion usando algoritmos paralelos. Fecha de inicio del proyecto: 25/05/2004 Fecha programada de terminacion: 25/05/2005 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): La motivacion del proyecto consiste en presentar una metodologia de optimizacion usando diferentes tecnicas de la programacion paralela. Actualmente el proyecto ha sido concluido y las principales metas se han alcanzado, especificamente se han reportado dos articulos de investigacion y cuatro tesis entre licenciatura y postgrado. Responsable del proyecto Darnes Vilarino Ayala Tiempo de dedicacion (hrs/semana) 20 Participantes en proyecto Mireya Tovar Vidal Tiempo de dedicacion (hrs/semana) 8 Ma. Auxilio Osorio Lama Tiempo de dedicacion (hrs/semana) 8 David Pinto Avendano Tiempo de dedicacion (hrs/semana) 8 Fuentes de financiamiento: No financiado Produccion relacionada con: Tesis Nivel: Licenciatura 1 Maestria 3 Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Preparacion y escritura de articulo de investigacion X X X X Asesoria y seguimiento de tesis de licenciatura y maestria X X X X Tipo de publicacion proyectada: Articulo Cientifico 2 Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 236 Nombre del proyecto: Arquitectura calidad de servicio y seguridad en las redes de comunicacion. Fecha de inicio del proyecto: 25/05/2004 Fecha programada de terminacion: 25/05/2005 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Este proyecto tiene como objetivo especificar-verificar y modelar arquitecturas de Calidad de Servicio y Seguridad en tres tipos de redes: TCP/IP, buses de campos, e inalambricas (IEE 802.11 y Bluetooth). Estado Actual: En proceso Metas de acuerdo a las lineas de Investigacion: 1. Especificar arquitecturas 2. Verificar arquitecturas 3. Modelar arquitecturas Responsable del proyecto Miguel A Leon Chavez Tiempo de dedicacion (hrs/semana) 4 Participantes en proyecto Sugehi Merino Higareda Tiempo de dedicacion (hrs/semana) 8 Rocio Aldeco Perez Tiempo de dedicacion (hrs/semana) 8 Ernesto Tovar Vazquez Tiempo de dedicacion (hrs/semana) 8 Francisco Rodriguez Henriquez Tiempo de dedicacion (hrs/semana) 8 Fuentes de financiamiento: Proyecto financiado VIEP BUAP clave 4/G/ING/05 Produccion relacionada con: Tesis Nivel: Licenciatura 1 Maestria 2 Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Elaboracion de trabajos de investigacion y escritura de articulos X X X X Asesoria de dos tesis de maestria X X X X Especificacion X X X Verificacion X X X Modelado X X X Tipo de publicacion proyectada: Articulo Cientifico 17 Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 237 Nombre del proyecto: Proyecto de Investigacion VIEP III9-04/ING/G. Fecha de inicio del proyecto: 25/05/2004 Fecha programada de terminacion: 25/05/2005 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Representar textos con elementos semanticos a partir de extractos SRI y relaciones en la asignacion de sentido con pesos asignados por frase nominal. El proyecto se encuentra concluido y las principales metas fueron alcanzadas. Responsable del proyecto Hector Jimenez Salazar Tiempo de dedicacion (hrs/semana) 20 Participantes en proyecto Beatriz Beltran Martinez Tiempo de dedicacion (hrs/semana) 8 David Pinto Avendano Tiempo de dedicacion (hrs/semana) 8 Elena Franco Carcedo Tiempo de dedicacion (hrs/semana) 8 Fuentes de financiamiento: Proyecto financiado VIEP BUAP clave III9-04/ING/G Produccion relacionada con: Tesis Nivel: Licenciatura Maestria 2 Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Elaboracion de trabajos de investigacion y escritura de articulos X X X X Asesoria de dos tesis de maestria X X X X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso 12 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 238 Nombre del proyecto: Tecnicas de deduccion y razonamiento automatico. Fecha de inicio del proyecto: 25/05/2004 Fecha programada de terminacion:25/05/2005 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Proponer soluciones sobre las tecnicas de deduccion y razonamiento automatico como herramientas de capacidades cognitivas fundamentales para el desarrollo de agentes inteligentes. El proyecto actualmente ha sido concluido. Las metas son la preparacion de algunos articulos de investigacion y presentacion de conferencias internacionales. Responsable del proyecto Carmen Santiago Diaz Tiempo de dedicacion (hrs/semana) 20 Participantes en proyecto Luis Altamirano Robles Tiempo de dedicacion (hrs/semana) 8 Carlos Guillen Galvan Tiempo de dedicacion (hrs/semana) 8 Mireya Tovar Vidal Tiempo de dedicacion (hrs/semana) 8 Erica Vera Cervantes Tiempo de dedicacion (hrs/semana) 8 Guillermo De Ita Luna Tiempo de dedicacion (hrs/semana) 8 Beatriz Perez Rojas Tiempo de dedicacion (hrs/semana) 8 Fuentes de financiamiento: Fondos propios FCC Produccion relacionada con: Tesis Nivel: Licenciatura Maestria Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Preparacion y escritura de articulo en congreso X X X X Asistencia y participacion en seminarios X X X X Asistencia y participacion en Conferencia internacional X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso 1 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 239 Nombre del proyecto: Creacion y edicion de videos, software educativo y aplicaciones para la educacion presencial y a distancia. Fecha de inicio del proyecto: 25/05/2004 Fecha programada de terminacion:25/05/2005 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): La aplicacion de la web para propositos educativos es un campo de gran importancia en la actualidad. Este proyecto se enfoca sobre aplicaciones de herramientas multimedia al desarrollo de aplicaciones educativas dentro del proceso de ensenanza aprendizaje. Este proyecto tiene como objetivo realizar un portal de educacion en linea Estado Actual: En proceso Metas de acuerdo a las lineas de Investigacion: 1. Realizacion del portal 2. Realizacion de un tutorial para la materia de Programacion 3. Realizacion de un tutorial para diseno de diagramas de flujo 4. Registro de documentos de educacion a distancia Responsable del proyecto Erica Vera Cervantes Tiempo de dedicacion (hrs/semana) 4 Participantes en proyecto Mario Rossainz Lopez Tiempo de dedicacion (hrs/semana) 4 Carmen Ceron Garnica Tiempo de dedicacion (hrs/semana) 4 Alfred Zehe Tiempo de dedicacion (hrs/semana) 4 Fuentes de financiamiento: No financiado Produccion relacionada con: Tesis Nivel: Licenciatura 6 Maestria Doctorado Patentes Prototipos 4 Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Elaboracion de herramientas multimedia para la ensenanza X X X X Elaboracion de tesis de licenciatura X X X X Portal web X X X Tutorial Programacion X X X Tutorial Diagrama de Flujo X X X Registro de documentos X X X X X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso 2 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 240 Nombre del proyecto: Bases De Datos Especiales y Analisis De Imagenes Fecha de inicio del proyecto 01/01/2004 Fecha programada de terminacion 01/12/2006 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Este proyecto surge dada la necesidad de las aplicaciones actuales de modelar fenomenos geograficos. Por otra parte pretende vincular los trabajos de los cuerpos academicos de Sistemas de informacion y Sistemas Distribuidos. Las areas de investigacion abiertas son: 1. Analisis de Imagenes y Mineria de Datos para datos biologicos. 2. Bases de Datos Espaciales Se realiza el scontrolar el grado de avance. Estado Actual: En proceso Metas de acuerdo a las lineas de Investigacion: 1. Modelado espacial y temporal de una region vaga usando Logica Difusa. 2. Representacion del conocimiento espacial y temporal a traves de reglas de asociacion. 3. Desarrollo de mecanismos de indexado de objetos geograficos contenidos en las regiones vagas. Responsable del proyecto Dra. Maria Josefa Somodevilla Garcia Tiempo de dedicacion 4 hrs/semana Participantes en proyecto Dr. Ivo Humberto Pineda Torres Tiempo de dedicacion 4 hrs/semana Fuentes de financiamiento: Interno Produccion relacionada con: Tesis Nivel: Licenciatura 4 Maestria 3 Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Analisis de Imagenes X X X Compresion de Imagenes X X X Analisis de datos biologicos X X X Tipo de publicacion proyectada: Articulo Cientifico 6 Divulgacion Memorias de Congreso 4 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 241 Nombre del proyecto: Reconocimiento de Patrones Usando FPGAs Fecha de inicio del proyecto 01/01/2004 Fecha programada de terminacion 01/12/2006 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Este proyecto tiene como objetivo Estado Actual: En proceso Metas de acuerdo a las lineas de Investigacion: 1. Biparticion de Grafos usando Redes Neuronales Artificiales. 2. Definicion y simulacion de controles difusos. 3. Sintesis en FPGAs de funciones de transferencia para redes neuronales artificiales. Responsable del proyecto M.C. Alba Maribel Sanchez Galvez Tiempo de dedicacion 4 hrs/semana Participantes en proyecto M.C. Maria Eugenia Sanchez Galvez Tiempo de dedicacion 4 hrs/semana M.C. Ricardo Alvarez Gonzalez Tiempo de dedicacion 4 hrs/semana M.C. Elsa Chavira Martinez Tiempo de dedicacion 4 hrs/semana Dr.Manuel Rubin Falfan Tiempo de dedicacion 4 hrs/semana Fuentes de financiamiento: Interno Produccion relacionada con: Tesis Nivel: Licenciatura 1 Maestria 2 Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Biparticion de grafos X X X Definicion y simulacion de controles X X X Sintesis en FPGAs X X X Tipo de publicacion proyectada: Articulo Cientifico 4 Divulgacion Memorias de Congreso 9 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 242 Nombre del proyecto: Modelado Hidrodinamico y Simulacion de Termotransporte Electronico en Semiconductores. Fecha de inicio del proyecto 01/01/2004 Fecha programada de terminacion 01/12/2006 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Desde hace algunos anos hemos trabajado sobre el desarrollo del modelo hidrodinamico del termo-transporte de electrones en semiconductores. A partir de la ecuacion cinetica de Boltzman y el metodo de momentos, podemos obtener una jerarquia d ecuaciones hidrodinamicas para el transporte de portadores de carga. Este modelo ha sido adaptado para hacer un estudio de termo-potencia en materiales semiconductores y dispositivos microelectronicas de baja dimension. Recientemente hemos desarrollado un modelo analitico para modelar los tiempos de relajacion electronica en semiconductores polares. Estado Actual: En proceso Metas de acuerdo a las lineas de Investigacion: 1. Basados en ecuaciones cinetica, desarrollar un esquema hidrodinamico 2. Simulacion y transporte de electrones Responsable del proyecto Dr. Alejandro Rangel Huerta Tiempo de dedicacion (hrs/semana) 4 Participantes en proyecto Dr. R. M. Velasco Belmont Tiempo de dedicacion (hrs/semana) 4 Dr. Carlos Celaya Borges Tiempo de dedicacion (hrs/semana) 4 Dr. M. Rodriguez Meza Tiempo de dedicacion (hrs/semana) 4 Fuentes de financiamiento: VIEP Produccion relacionada con: Tesis Nivel: Licenciatura 3 Maestria 2 Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Desarrollo de modelo hidrodinamico X X Adaptacion de algoritmo de Montecarlo X X Implementacion de modelado y simulacion X X Elaboracion de reportes X X X Tipo de publicacion proyectada: Articulo Cientifico 5 Divulgacion Memorias de Congreso 4 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 243 Nombre del proyecto: Estudio de Metodologias en la Elaboracion de Software Educativo para Nivel Preescolar. Fecha de inicio del proyecto 01/01/2004 Fecha programada de terminacion 01/12/2006 Resumen (Gestacion, Evaluacion, Estado A ctual y Metas): Este proyecto tiene como objetivo usar la computacion como apoyo a procesos de aprendizaje. Su asimilacion dentro de las instituciones educativas ha aumentado en los ultimos anos, por lo cual la demanda de este tipo de software de alta calidad es cada vez mayor. Estado Actual: Terminado Metas de acuerdo a las lineas de Investigacion: 1. Investigar acerca del comportamiento educacional en ninos. 2. Estudiar metodologias actuales 3. Vincular comportamiento con metodologias. 4. Realizar analisis, diseno e implementacion del software Responsable del proyecto M.C. Beatriz Beltran Martinez Tiempo de dedicacion (hrs/semana) 4 Participantes en proyecto M.C. David Pinto Avendano Tiempo de dedicacion (hrs/semana) 4 M.C. Hilda Castillo Zacatelco Tiempo de dedicacion (hrs/semana) 4 Fuentes de financiamiento: Interno Produccion relacionada con: Tesis Nivel: Licenciatura 2 Maestria Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Investigacion comportamiento X X X Estudio de metodologias X X Vinculacion comportamiento metodologias X X X X Implementacion X X X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion 1 Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 244 Nombre del proyecto Especificacion y Verificacion Formal de Sistemas. Fecha de inicio del proyecto 01/01/2004 Fecha programada de terminacion 01/12/2006 Resumen (Gestacion, Evaluacion, Estado A ctual y Metas): Este proyecto tiene como objetivo es profundizar en los modelos de estructura heterogenea de varianzas y covarianzas en presencia de medidas repetidas y realizar aplicaciones en varios campos d la ciencia. Estado Actual: Terminado Metas de acuerdo a las lineas de Investigacion: 1. Estudio de modelos de estructura heterogenea. 2. Realizar aplicaciones cientificas Responsable del proyecto Dra. Gladis Linares Fleites Tiempo de dedicacion (hrs/semana) 4 Participantes en proyecto M.C. Eduardo Calderon Fabian Dr. Lourdes Sandoval Solis M.C. Marco Antonio Marin Castro Fuentes de financiamiento: Interno Produccion relacionada con: Tesis Nivel: Licenciatura 1 Maestria Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Estudio de modelos de estructura heterogenea X X X Realizacion de aplicaciones X X X X X Tipo de publicacion proyectada: Articulo Cientifico 1 Divulgacion Memorias de Congreso 2 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 245 Nombre del proyecto: Especificaciones, Extensiones y Ramificaciones del Modelo Relacional. Fecha de inicio del proyecto 01/01/2004 Fecha programada de terminacion 01/12/2006 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Este proyecto tiene como objetivo desarrollar un marco de evaluacion para integridad y seguridad para DBMS relacionales. Estado Actual: En proceso Metas de acuerdo a las lineas de Investigacion: 1. Desarrollar marco de evaluacion. 2. Desarrollar aplicaciones cliente-servidor Responsable del proyecto Lic. Maria del Rocio Boone Rojas Tiempo de dedicacion (hrs/semana) 4 Participantes en proyecto Lic. Jorge Jimenez Gonzalez Tiempo de dedicacion (hrs/semana) 4 M.C. Beatriz Bernabe Loranca Tiempo de dedicacion (hrs/semana) 4 M.C. Marco Antonio Soriano Ulloa Tiempo de dedicacion (hrs/semana) 4 M.E. Carmen Ceron Garnica Tiempo de dedicacion (hrs/semana) 4 Fuentes de financiamiento: VIEP Produccion relacionada con: Tesis Nivel: Licenciatura 10 Maestria Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Marco de Evaluacion X X X Aplicaciones X X X X X Tipo de publicacion proyectada: Articulo Cientifico 6 Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 246 Nombre del proyecto: Un Modelo de Procesos para Centros de Desarrollo Pequenos. Fecha de inicio del proyecto 01/01/2004 Fecha programada de terminacion 01/12/2006 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Este proyecto tiene como objetivo MODELAR PROCESOS EN CENTROS DE DESARROLLO PEQUENOS Estado Actual: En proceso Metas de acuerdo a las lineas de Investigacion: 1. Programar sistema para la administracion de oficios. 2. Programar pagina FET 2006 Responsable del proyecto M.C. Maya Carrillo Ruiz Tiempo de dedicacion (hrs/semana) 4 Participantes en proyecto M.C. Yalu Galicia Hernandez Tiempo de dedicacion (hrs/semana) 4 M.C. Pedro Bello Lopez Tiempo de dedicacion (hrs/semana) 4 M.C. Rafael de la Rosa Flores Tiempo de dedicacion (hrs/semana) 4 Fuentes de financiamiento: Interno Produccion relacionada con: Tesis Nivel: Licenciatura Maestria Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Sistema Administracion de Oficios X X X X X Pagina FET 2006 X X X X X Tipo de publicacion proyectada: Articulo Cientifico 1 Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 247 Nombre del proyecto: Estudio de las Distribuciones de Probabilidad a traves de Metodos Empiricos. Fecha de inicio del proyecto 01/01/2004 Fecha programada de terminacion 01/12/2006 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Este proyecto tiene como objetivo estudiar los metodos de estimacion puntual para las distribuciones de probabilidad mas usuales. Estado Actual: Terminado Metas de acuerdo a las lineas de Investigacion: 1. Estudiar, programar y aplicar el metodo de Bootstrap para calcular el error y los intervalos de confianza. 2. Aplicar Bootstrap para analisis de textos. 3. Aplicar Bootstrap para matematica educativa. Responsable del proyecto M.C. Martin Estrada Analco Tiempo de dedicacion (hrs/semana) 4 Participantes en proyecto M.C. Rogelio Gonzalez Velazquez Tiempo de dedicacion (hrs/semana) 4 Fuentes de financiamiento: VIEP Produccion relacionada con: Tesis Nivel: Licenciatura 1 Maestria Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Bootstrap - error X X X Bootstrap analisis de textos X X X Bootstrap matematica educativa X X X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso 5 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 248 Nombre del proyecto: Filtrado de imagenes en el espacio directo y en espacios alternativos. Fecha de inicio del proyecto: 01/06/2004 Fecha programada de terminacion: 31/05/2006 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Resumen: El filtrado de imagenes se ha desarrollado normalmente en el espacio directo, tambien conocido como espacio de representacion RGB. Pero existen tambien otros espacios como el espacio de frecuencias o espacio de Fourier, en el cual se pueden implementar filtros para la eliminacion de ruido e interferencia con cierta facilidad. Existen otros espacios menos conocidos como con los espacios HSI, HSV y el LaLbc. En estos es posible separar la informacion de luminosidad de la cromatica y realizar procesos especiales. La idea central del proyecto es estudiar estos espacios y proponer tecnicas de filtrado novedosas. Objetivo general: Proponer soluciones de filtrado novedosas en el espacio directo y en espacios alternativos. Objetivos especificos: 1) Compilar informacion sobre filtrado de imagenes en espacios alternativos. 2) Estudiar los filtros en espacios alternativos y compararlos con los documentados en el espacio directo. 3) Desarrollar una biblioteca modular que ofrezca los filtros base en espacios alternativos. 4) Crear una aplicacion de prueba que permita probar el efecto de estos filtros en imagenes especificas. 5) Probar el sistema para la mejora de imagenes medicas. 6) Incorporar la biblioteca al Sistema de Procesamiento de Imagenes FCC. Responsable del proyecto: Dr. Manuel Martin Ortiz Tiempo de dedicacion (hrs/semana) 20 Participantes en proyecto Dra. Maria Josefa Somodevilla Garcia Tiempo de dedicacion 10 Dr. Ivo Humberto Pineda Torres 10 M.C. Graciano Cruz Almanza 10 Lic. Jose Luis Meza Leon 5 M.C. Sully Sanchez Galvan 5 Fuentes de financiamiento: FCC Produccion relacionada con: Tesis Nivel: Licenciatura: 9 Maestria: Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Recopilacion y organizacion de informacion 06-07-08/2004 Fundamentacion teorica e implementacion 09-10/04 Pruebas del prototipo A 01-03/2005 Preparacion de ponencias 04-05/05 Propuesta de nuevas aplicaciones 06-08/05 Reesctructuracion de la biblioteca 09-11/05 Pruebas del prototipo B 01-02/2006 Documentacion final 03-05/06 Seminario 06/04-05/06 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 249 Nombre del proyecto: Desarrollo de Aplicaciones Distribuidas Agentes y Paralelizacion de Algoritmos de Optimizacion Fecha de inicio del proyecto: 03/05/2004 Fecha programada de terminacion: 28/04/2006 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Objetivos generales: 1) Desarrollo de aplicaciones distribuidas por medio de agentes. Disenar e implementar agentes capaces de participar en el TAC SCM y en el TAC Clasico. Ademas de desarrollar agentes moviles que permitan recuperar e integrar informacion, provenientes de fuentes heterogeneas de la Web, siguiendo diferentes metodologias y algoritmos, considerando el perfil del usuario y sin tenerlo en cuenta. Otra linea importante es el desarrollo de Agentes que sean capaces de visitar sitios que contengan informacion geografica y aplicar los algoritmos para generalizar los mapas. 2) Desarrollo de Aplicaciones Paralelas. Disenar e implementar algoritmos paralelos para resolver determinados tipos de problemas de optimizacion. Desarrollar una metodologia para la paralelizacion de diferentes tipos de algoritmos, haciendo enfasis en algoritmos de optimizacion para resolver problemas enteros y binarios, que como sabemos son de orden exponencial. Responsable del proyecto Dra. Darnes Vilarino Ayala Tiempo de dedicacion (hrs/semana) 20 Participantes en proyecto Dr. Mario Rossainz Lopez Tiempo de dedicacion 10 Dra. Maria Josefa Somodevilla Garcia 10 Dr. Ivo Pineda Torres 10 M.C. Mireya Tovar Vidal 10 M.C. Hilda Castillo Zacatelco 10 Dra. Fabiola Lopez y Lopez 5 Fuentes de financiamiento: FCC Produccion relacionada con: Tesis Nivel: Licenciatura 1 Maestria 4 Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Documentacion X X X Analisis X X Diseno X X X X Implementacion X X X X Pruebas X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 250 Nombre del proyecto: Estudio de Metodologias en la Elaboracion de Software Educativo para nivel Primaria Fecha de inicio del proyecto: 03/05/2004 Fecha programada de terminacion: 28/04/2006 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Objetivo general: Desarrollar un estudio metodologico del aprendizaje de los ninos en los dos primeros anos del nivel primaria para elaborar software educativo mediante metodologias actuales. Objetivos particulares: 1) Realizar una investigacion acerca de los modelos educativos que se han implantado tanto en la SEP, como aquellos modelos planteados por distintos pedagogos, para el desarrollo del conocimiento, habilidades y actitudes; mediante experiencias de aprendizaje que favorezcan dicho desarrollo integral proporcionando ambientes de aprendizaje de acuerdo a los contenidos de aprendizaje, para definir las actividades que se incluiran en el software. 2) Vincular los modelos educativos que se investigaron, con las diversas metodologias dirigidas a la elaboracion de software educativo para su implementacion. 3) Realizar el analisis y diseno de software educativo para ninos que se encuentran en los dos primeros anos de primaria conforme a los modelos estudiados y las metodologias; aplicados estos, a las materias de espanol y matematicas; ademas de analisis de nuevas tecnologias para el desarrollo de software educativo. 4) Implementacion de herramientas haciendo uso de las metodologias dirigidas a la elaboracion de software educativo. 5) Realizar pruebas de campo tanto en escuelas primarias de gobierno como en particulares para realizar una evaluacion y valoracion del software educativo propuesto; mediante rubricas, examenes o competencias. Responsable del proyecto M.C. Beatriz Beltran Martinez Tiempo de dedicacion (hrs/semana) 20 Participantes en proyecto Dr. Mario Rossainz Lopez Tiempo de dedicacion (hrs/semana) 4 M.C. Hilda Castillo Zacatelco 10 M.C. Pedro Bello Lopez 10 M.C. Jose Andres Vazquez Flores 4 M.C. Ma. Del Carmen Ceron Garnica 10 Fuentes de financiamiento: FCC Produccion relacionada con: Tesis Nivel: Licenciatura 2 Maestria Doctorado Patentes Prototipos 1 Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 Investigacion del comportamiento educacional en ninos de nivel primaria. X X Estudio de las metodologias para la elaboracion de software educativo. X X Vinculacion del comportamiento educacional de ninos de nivel primaria con diversas metodologias para la elaboracion de software. X X Analisis y diseno de software educativo para ninos de nivel primaria, ademas de analisis de nuevas tecnologias para el desarrollo de software educativo. X X Implementacion de herramientas haciendo uso de las metodologias para la elaboracion de software educativo. X X Escritura del reporte final. X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 251 Nombre del proyecto: Implantacion de un Prototipo de un Sistema Gestor de Base de Datos Distribuidas. Fecha de inicio del proyecto: 03/05/2004 Fecha programada de terminacion: 28/04/2006 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Objetivo general. Realizar la implementacion de un Sistema Gestor de Bases de Datos Distribuidas (SGBDD) y realizar un estudio comparativo de algunas herramientas ya existentes. Objetivos particulares: 1) Analizar las caracteristicas propias de las bases de datos distribuidas. 2) Estudiar el comportamiento de un Gestor de Bases de Datos Distribuida ya existente con la finalidad de verificar si cumple con las caracteristicas propias de dichas bases de datos. 3) Analizar los posibles lenguajes de programacion y/o herramienta a utilizar que sean adecuados para la implementacion de este tipo de software. 4) Realizar el analisis y diseno de un sistema Gestor de Bases de Datos Distribuidas propio. 5) Realizar la implementacion del SGBDD. 6) Sentar las bases para el desarrollo futuro de sistemas distribuidos dentro de la Facultad. Responsable del proyecto M.C. Hilda Castillo Zacatelco Tiempo de dedicacion (hrs/semana) 20 Participantes en proyecto M.C. Mireya Tovar Vidal Tiempo de dedicacion (hrs/semana) 10 Dr. Mario Rossainz Lopez 4 M.C. Beatriz Beltran Martinez 10 M.C. Pedro Bello Lopez 10 M.C. Rafael de la Rosa Flores 10 M.C. Jose Andres Vazquez Flores 4 Fuentes de financiamiento: FCC Produccion relacionada con: Tesis Nivel: Licenciatura 4 Maestria Doctorado Patentes Prototipos 1 Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 Analisis de las bases de datos distribuidas. X X Estudio de un Gestor de BDD ya existente. X X X Analisis de los lenguajes de programacion y/o herramientas a utilizar. X Analisis y diseno de un SGBDD. X X X Implementacion del SGBDD. X X X Escritura de reporte final. X X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 252 Nombre del proyecto: Guia didactica para Circuitos Electricos Fecha de inicio del proyecto: 01/06/2006 Fecha programada de terminacion: 31/05/2008 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Objetivos generales: 1) Desarrollar una guia didactica para la materia de Circuitos Electricos. 2) Proporcionar al alumno el conocimiento de la electronica basica. 3) Desarrollar en el alumno la habilidad en el manejo de instrumentos y equipo de medicion en el laboratorio. 4) Generar los conocimientos y habilidades en el alumno para su desarrollo profesional. Objetivos particulares: 1) Teoria necesaria para cada contenido de la correspondiente asignatura. 2) Los temas contenidos en la guia se reforzaran con una serie de ejercicios resueltos. 3) En cada tema se proponen practicas de n de circuitos. 5) Ejercicios y practicas propuestos para los estudiantes. Responsable del proyecto Dr. Gregorio Trinidad Garcia Tiempo de dedicacion (hrs/semana) 20 Participantes en proyecto Dr. Manuel Rubin Falfan Tiempo de dedicacion (hrs/semana) 10 Dr. Esteban Molina Flores 10 Fuentes de financiamiento: FCC Produccion relacionada con: Tesis Nivel: Licenciatura 4 Maestria Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 Planeacion y propuestas 05-08/06 Desarrollo de la presentacion y del capitulo 1 09-12/06 Propuesta de los ejercicios R, RC, RL, RLC, con diodos y transistores y sus respectivas soluciones. 01-05/07 Propuesta de software 06-08/07 Integracion y revision de la guia 09-12/07 Revision y presentacion de la guia 01-05/08 Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 253 Nombre del proyecto: Analisis y diseno de un sistema gestor de bases de datos distribuidas Fecha de inicio del proyecto: 19 de mayo de 2006 Fecha programada de terminacion: 19 de mayo de 2008 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Realizar la implementacion de un sistema gestor de bases de datos distribuidas y realizar un estudio comparativo de alguna herramienta ya existente Responsable del proyecto MC Andres Vazquez Flores Tiempo de dedicacion 10hrs/semana Participantes en proyecto MC. Hilda Castillo Zacatelco Tiempo de dedicacion 8hrs/semana MC. Mireya Tovar Vidal Tiempo de dedicacion 8hrs/semana Dr. Mario Rossainz Lopez Tiempo de dedicacion 8hrs/semana MC. Beatriz Beltran Martinez Tiempo de dedicacion 8hrs/semana MC Pedro Bello Lopez Tiempo de dedicacion 8hrs/semana MC. Rafael de la Rosa Flores Tiempo de dedicacion 8hrs/semana Fuentes de financiamiento: Ninguna Produccion relacionada con: Tesis Nivel: Licenciatura Maestria Doctorado Patentes Prototipos Cronograma Cuatrimestral ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Analisis X X Estudiar el comportamiento gestor X X X Analizar los posibles lenguajes X Analisis y diseno del sistema X X X Implementacion X X X Escritura del reporte X X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 254 Nombre del proyecto: Desarrollo de notas para el area de hardware Fecha de inicio del proyecto: 25 de mayo de 2006 Fecha programada de terminacion25 de mayo de 2008 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): El proyecto tiene como fin, generar un texto de ayuda para las materias: Mecanica electricidad y magnetismo, circuitos electricos dispositivos electronicos Responsable del proyecto MC. Gregorio Trinidad Garcia Tiempo de dedicacion 8hrs/semana Participantes en proyecto Dr. Manuel Rubin Falfan Tiempo de dedicacion 4hrs/semana Dr. Esteban Molina Flores Tiempo de dedicacion 4hrs/semana Fuentes de financiamiento: Ninguna Produccion relacionada con: Tesis Nivel: Licenciatura Maestria Doctorado Patentes Prototipos Cronograma Trimestral ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Formar grupos de trabajo X Desarrollo de la presentacion X Propuesta de ejercicios X X Desarrollo de material para la asignatura de dispositivos electronicos X Practicas de laboratorio X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 255 Nombre del proyecto: Especificaciones, extensiones y ramificaciones del modelo Relacional Fecha de inicio del proyecto: 3 de mayo de 2004 Fecha programada de terminacion: 19 de mayo de 2008 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Se desarrollaran un conjunto de aplicaciones cliente-servidor y de base de datos y web, se hara la propuesta de un marco de evaluacion para integridad y otorgar seguridad para DBMS relacionales, se desarrollaron propuestas complementarias para integridad de base de datos relacionales. Los resultados se han reportado en 14 trabajos dirigidos por los participantes del proyecto y presentados en ponencias y publicaciones. Responsable del proyecto Lic. Maria del Rocio Boone Rojas Tiempo de dedicacion 10hrs/semana Participantes en proyecto MC. Maria Beatriz Bernabe Loranca Tiempo de dedicacion 6 hrs/semana MC. Carmen Ceron Garnica Tiempo de dedicacion 6 hrs/semana Lic. Jorge Jimenez Gonzalez Tiempo de dedicacion 6 hrs/semana Lic. Marco Antonio Soriano Ulloa Tiempo de dedicacion 6 hrs/semana Fuentes de financiamiento: Ninguna Produccion relacionada con: Tesis Nivel: Licenciatura Maestria Doctorado Patentes Prototipos Cronograma Cuatrimestral ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Analisis X X X X Diseno X X Implementacion X X X X Escritura del reporte X X X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 256 Nombre del proyecto: Sistema para el perforado automatico de circuitos impresos. Fecha de inicio del proyecto: 3 de mayo de 2004 Fecha programada de terminacion: 28 de mayo de 2006 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Realizar una placa mecanica, realizar el sistema electrico del taladro, se creo los movimientos basicos del taladro a partir de comandos HPGL y se programara las subrutinas basicas de movimiento Responsable del proyecto MC. Ata Perez Apolonio Tiempo de dedicacion 8hrs/semana Participantes en proyecto MC. Francisco Javier Amaro Sanchez Tiempo de dedicacion 6 hrs/semana Dr. Guillermo Perez Luna Tiempo de dedicacion 6 hrs/semana Fuentes de financiamiento: Ninguna Produccion relacionada con: Tesis Nivel: Licenciatura 1 Maestria Doctorado Patentes Prototipos Cronograma Trimestral ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Prueba y Mtto. De Sistema mecanico. X X Prueba y Mtto. De Sistema electrico X X Prueba de potencia de motores. X X Programacion de las subrutinas basicas de movimiento X X X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso 1 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 257 Nombre del proyecto: Analisis y aplicacion de tecnicas en mineria de datos. Fecha de inicio del proyecto 3 de mayo de 2004 Fecha programada de terminacion 28 de abril de 2006 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Se analiza 2 tecnicas de clasificacion Concentracion binaria y estudio de clasificacion de datos poblacionales y zonas geograficas Responsable del proyecto MC Maria Beatriz Bernabe Loranca Tiempo de dedicacion 10hrs/semana Participantes en proyecto Dr. Ramon Aguirre Vara Tiempo de dedicacion 8hrs/semana Lic. Maria del Rocio Boone Rojas Tiempo de dedicacion 8hrs/semana Lic. Marco Antonio Soriano Ulloa Tiempo de dedicacion 8hrs/semana Fuentes de financiamiento: Ninguna Produccion relacionada con: Tesis Nivel: Licenciatura Maestria Doctorado Patentes Prototipos Cronograma Cuatrimestral ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Analisis y diseno del sistema X X Implementacion X X Escritura del reporte X X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 258 Nombre del proyecto: Matrices de covarianza heterogeneas en el modelo de analisis de varianza de medidas repetidas Fecha de inicio del proyecto 3 de mayo de 2004 Fecha programada de terminacion28 de abril de 2006 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Se colectan muestras de tejido muscular de bovinos en los municipios de Tecamachalco, Tehuacan, Tepango, Tepeaca y Tlacotepec para evaluar el contenido de metales pesados por medio de espectrofotometria de absorcion atomica. Responsable del proyecto Dra. Gladis Linares Fleites Tiempo de dedicacion 8 hrs/semana Participantes en proyecto Eduardo Calderon Fabian Tiempo de dedicacion 8hrs/semana Marco Antonio Marin Castro Tiempo de dedicacion 8hrs/semana Dra. Sandoval Solis Maria Lourdes Tiempo de dedicacion 8hrs/semana Fuentes de financiamiento: Ninguna Produccion relacionada con: Tesis Nivel: Licenciatura Maestria Doctorado Patentes Prototipos Cronograma Cuatrimestral ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Analisis y diseno del sistema X X Implementacion X X X Escritura del reporte X X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 259 Nombre del proyecto: Analisis de los diferentes factores que influyen en los problemas educativos a nivel superior Fecha de inicio del proyecto 19 de mayo de 2004 Fecha programada de terminacion28 de abril de 2006 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Elaborar un software del sistema de percepciones de la ensenanza, considerando los estilos de ensenanza de los profesores de la FCC. Resumen: Este trabajo es en torno a la tutoria en la formacion integral del estudiante. Se ha creado un instrumento para conocer las caracteristicas que influyeron en el para la eleccion de su vocacion para conducirlo a una correcta eleccion o reflexion acerca de la carrera que esta estudiando actualmente. Nuestro principal objetivo es conocer los factores que influyen en el alto indice de desercion que en particular se vive en la FCC de la BUAP. Este proyecto incluye un analisis, siendo las variables de atribucion externas establecidas por 18 preguntas: Categoria I (factores socioculturales) y categoria II (factores familiares). Las variables internas que se identificaron en 12 preguntas, establecidas en la categoria III (factores internos). Objetivo: Conocer las atribuciones que hacen los alumnos del primer cuatrimestre de las carreras de la FCC, a la eleccion de su carrera profesional. Que factores son los que mayor peso tienen los estudiantes en la eleccion de su carrera profesional y cuales son los que afectan en la desercion y cuales los que ayudan en la no desercion. Responsable del proyecto MC. Carmen Ceron Garnica Tiempo de dedicacion 4 hrs/semana Participantes en proyecto MC. Etelvina Archundia Sierra Tiempo de dedicacion 4 hrs/semana Eugenia Perez Bonilla Tiempo de dedicacion 4 hrs/semana MC. Erica Vera Cervantes Tiempo de dedicacion 4 hrs/semana Arturo Reyes Lazalde Tiempo de dedicacion 10 hrs/semana Fuentes de financiamiento: Ninguna Produccion relacionada con: Tesis Nivel: Licenciatura 1 Maestria Doctorado Patentes Prototipos 1 Cronograma Cuatrimestral ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Analisis y diseno del sistema X X Implementacion X X Escritura del reporte X X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 260 Nombre del proyecto: Optimizacion Aplicada Fecha de inicio del proyecto 3 de mayo de 2004 Fecha programada de terminacion 28 de abril de 2006 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Elaborar un software del sistema de percepciones de la ensenanza, considerando los estilos de ensenanza de los profesores de la FCC. Responsable del proyecto Dra. Maria Auxilio Osorio Lama Tiempo de dedicacion 12 hrs/semana Participantes en proyecto MC Rogelio Gonzalez Velazquez Tiempo de dedicacion 4 hrs/semana MC. David Eduardo Pinto Avendano Tiempo de dedicacion 4 hrs/semana MC. Andres Vazquez Flores Tiempo de dedicacion 4 hrs/semana Fuentes de financiamiento: Ninguna Produccion relacionada con: Tesis Nivel: Licenciatura Maestria Doctorado Patentes Prototipos Cronograma Cuatrimestral ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Analisis y diseno del sistema X X Implementacion X X Escritura del reporte X X Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 261 Nombre del proyecto: Adquisicion y procesamiento de imagenes usando FPGAs Fecha de inicio del proyecto: 10/julio/06 Fecha programada de terminacion: 10/mayo/08 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Proponer una arquitectura FPGA para la adquisicion y procesamiento de imagenes digitales usando herramientas de Logica Programable. C) Objetivos Particulares: Este proyecto esta enfocado principalmente para trabajar con dos tipos de imagenes: en escala de grises y binarias (blanco y negro) e imagenes a color. El tipo de procesamiento que se aplicara a las imagenes sera el siguiente: rotacion, erosion, dilatacion, binarizacion de una imagen en escala de grises, aumento/disminucion de contraste y brillo, aplicar filtros espaciales tanto lineales como no lineales, entre otras. Con esto, se tiene la finalidad de proponer una forma de implementar operaciones de procesamiento de imagenes a nivel hardware. Implementar las operaciones seleccionados de procesamiento de imagenes, usando MATLAB. Para despues realizar la validacion y comparacion de los algoritmos a nivel hardware. Implementar una arquitectura para procesamiento de imagenes en un FPGA, usando las herramientas Xilinx System Generador (XSG) y VHDL. Caracterizar y comparar los resultados obtenidos con los reportados en la literatura para su publicacion posterio Responsable del proyecto MC. Alba Maribel Sanchez Galvez Tiempo de dedicacion (4hrs/semana) Participantes en proyecto MC. Ricardo Alvarez Gonzalez Tiempo de dedicacion (4hrs/semana) MC. Maria Eugenia Sully Sanchez Galvez Tiempo de dedicacion (4hrs/semana) Fuentes de financiamiento: Interno Produccion relacionada con: 1. Tesis Nivel: Licenciatura 3 Maestria Doctorado 2. Patentes 3. Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Revision teorica del procesamiento de imagenes X Realizacion de la interfaz para la adquisicion de imagenes X Diseno de la Arquitectura FPGA en System Generator y VHDL X X X Pruebas y contrastes de resultados X X X X Publicacion de resultados X Tipo de publicacion proyectada: Articulo Cientifico 2 Divulgacion 2 Memorias de Congreso 2 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 262 Nombre del proyecto: COMPUTACION QUANTICA Y TEMAS RELACIONADOS Fecha de inicio del proyecto: 15/10/2006 Fecha programada de terminacion:15/10/2007 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): En el presente proyecto de investigacion nos proponemos estudiar los temas relacionados con computacion cuantica como son: 1.- Algoritmos de busqueda 2.- Automatas 3.-Correccion de errores 4.- Protocolo de comunicacion Aunque es dificil predecir los resultados especificos que podriamos obtener, esperamos lo siguientes resultados generales: 1.-Tesis 2.-Articulos de investigacion 3.-Participacion en congresos nacionales e internacionales Responsable del proyecto Dr. Cesar Bautista Ramos Tiempo dedicacion (4hrs/semana) Participantes en proyecto Mauricio Cardona Castro Tiempo de dedicacion (4 hrs/semana) Cecilia Pani Gutierrez Tiempo de dedicacion (4 hrs/semana) Fuentes de financiamiento: Interno Produccion relacionada con: Tesis Nivel: Licenciatura 1 Maestria Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Estudio computacion quantica X X X X Algoritmos de busqueda quanticos X X X X X Escritura de articulos y tesis X X X X X Tipo de publicacion proyectada: Articulo Cientifico 2 Divulgacion 4 Memorias de Congreso 4 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 263 Nombre del proyecto Disenos de algoritmos basados en el conocimiento y deteccion de defectos en superficies concavas-energias renovables. Fecha de inicio del proyecto: 15/01/2007 Fecha programada de terminacion: 15/12/2008 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Los problemas de defectos en los productos que provienen de un proceso productivo estan determinados por las fallas dentro del mismo proceso o bien por el estado de las instalaciones industriales. Algunos ejemplos son: la produccion de balines, de tuberias metalicas, etc. que deben de cumplir con estandares de calidad de superficie, de forma, etc. La calidad de estos productos en distintos procesos industriales se mide de manera diferente. En el proceso de produccion de balines, los estandares se relacionan con las caracteristicas de su superficie y forma. Al proceso de revisar el estado de la superficie de estos productos se llama inspeccion. El objetivo de realizar la inspeccion es detectar anomalias en la superficie de los balines. Responsable del proyecto Dr. Mario Bustillo Diaz Tiempo de dedicacion (4hrs/semana) Participantes en proyecto Alejandro Rangel Huerta Tiempo de dedicacion (4hrs/semana) Apolonio Ata Perez Tiempo de dedicacion (4hrs/semana) David Vazquez H Luz Tiempo de dedicacion (4hrs/semana) Guillermo Jimenez de los Santos Tiempo de dedicacion (4hrs/semana) Javier Caldera Miguel Tiempo de dedicacion (4hrs/semana) Fuentes de Financiamiento: Interno Produccion relacionada con: 4. Tesis Nivel: Licenciatura 3 Maestria Doctorado 5. Patentes 1 6. Prototipos 1 Cronograma Trimestres: ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Caracterizacion de sensores X Diseno de tarjetas de adquisicion X X X Diseno de algoritmos e implementacion X X X Clasificacion y caracterizacion de defectos X X X Publicacion de material e investigacion X X X X Evaluacion de parametros de medicion X X X X Construccion de bases difusas de conocimiento para los modelos mandani y Takaji-Sujeno X X X X X Pruebas y resultados X X X X X X X X X X X Tipo de publicacion proyectada: Articulo Cientifico 8 Divulgacion Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 264 Nombre del proyecto: APLICACIONES Y DESARROLLOS DE LAS BASES DE DATOS RELACIONALES Fecha de inicio del proyecto: 08/01/2007 Fecha programada de terminacion: 23/11/2007 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Las Bases de Datos Relacionales constituyen la tendencia dominante en el mercado. En este proyecto se estudian, documentan y experimentan las tecnologias que permiten la fusion de las tecnologias de las Bases de Datos Relacionales y Web, basadas principalmente en Software Libre. Asi como la aplicacion de diversas disciplinas a las Bases de datos Relacionales, tales como la Mineria de Datos y la Logica Difusa. Se han desarrollado un conjunto de aplicaciones de B.D. y Web cuyos resultados se han reportado en trabajos de tesis y publicaciones. Por otra parte se ha desarrollado una aplicacion de Bases de Datos Relacionales y Logica difusa, se espera extender la aplicacion a un problema de agrupamiento. Responsable del proyecto BOONE ROJAS, MARIA DEL ROCIO Tiempo de dedicacion hrs/semana 10 Participantes en proyecto JIMENEZ GONZALEZ, JORGE Tiempo de dedicacion hrs/semana 4 SORIANO ULLOA, MARCO ANTONIO Tiempo de dedicacion hrs/semana 4 GARCIA JUAREZ, PEDRO Tiempo de dedicacion hrs/semana 4 CERON GARNICA, CARMEN Tiempo de dedicacion hrs/semana 4 BERNABE LORANCA, MARIA BEATRIZ Tiempo de dedicacion hrs/semana 4 CARRILLO RUIZ, MAYA Tiempo de dedicacion hrs/semana 4 HERNANDEZ JUAREZ HECTOR Tiempo de dedicacion hrs/semana 8 GARCIA LOPEZ LUCIO Tiempo de dedicacion hrs/semana 8 FLORES FLORES FELIX Tiempo de dedicacion hrs/semana 8 DIAZ SANCHEZ ROSA AMELIA Tiempo de dedicacion hrs/semana 8 ARAGON VERGARA RAIMUNDO Tiempo de dedicacion hrs/semana 8 JUAREZ CABALLERO JAVIER Tiempo de dedicacion hrs/semana 8 Fuentes de financiamiento: Interna Produccion relacionada con: Tesis Nivel: Licenciatura 3 Maestria Doctorado Patentes: 0 Prototipos: 0 Cronograma Cuatrimestral ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Especificaciones X Diseno x Implementacion x x Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso 1 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 265 Nombre del proyecto: ANALISIS Y ESTUDIO COMPARATIVO DE ALGORITMOS DE AGRUPAMIENYTO EN WEKA, SPSS Y MATLAB. CASO ESTUDIO EL ALGORITMO K.-MEDIAS Fecha de inicio del proyecto: 09/01/2007 Fecha programada de terminacion: 09/07/2008 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Tanto del punto de vista teorico como computacional, el algoritmo para tareas de agrupamiento, k-medias, posee propiedades interesantes que lo han hecho motivo de diversos estudios y propuestas de mejora. En esta investigacion proponemos realizar una implantacion del algoritmo de k-medias y realizar un analisis y estudio comparativo de otras implementaciones actualmente disponibles, tales como en los paquetes/suites weka, spss y matlab. Aplicado a bases de datos relacionales y poblacionales, en principio para identificar las causas de mortandad y su distribucion, en nuestro pais, a partir de datos censales. Actualmente se han realizado pruebas experimentales en Weka y en Matlab, sobre bases de datos del repositorio de la UCI, del instituto de Salud y del INEGI de Mexico. Los resultados se encuentran en reportes tecnicos internos, reporte de servicio Social y en Memorias de Congreso. Responsable del proyecto BOONE ROJAS, MARIA DEL ROCIO Tiempo de dedicacion hrs/semana 4 Participantes en proyecto RAYMUNDO ARAGON VERGARA Tiempo de dedicacion hrs/semana 8 RODRIGUEZ TAPIA MIGUEL ANGEL Tiempo de dedicacion hrs/semana 8 Fuentes de financiamiento: Interno Produccion relacionada con: Tesis Nivel: Licenciatura 2 Maestria Doctorado Patentes: 0 Prototipos: 0 Cronograma Cuatrimestral ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Especificaciones x Diseno x Experimentacion x x Reportes Resul. x x x Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso 2 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 266 Nombre del proyecto: Especificaciones, Extensiones y Ramificaciones del Modelo Relacional Fecha de inicio del proyecto: 01/06/2006 Fecha programada de terminacion: 30/05/2008 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Motivado por problemas a los que se han enfrentado nuestros egresados en el ambito laboral con respecto al desarrollo de Aplicaciones de la Bases de Datos y Web y al Manejo de Integridad y de Seguridad, por una falta de la aplicacion de metodologias y de capacitacion especializada en el sustento y manejo de los mecanismos asociados al soporte y control de Integridad y de Seguridad en las Bases de Datos Relacionales, en el presente proyecto se pretende conjugar, aplicar y extender un conjunto de resultados de los estudios posteriores a la definicion del Modelo Relacional establecida por Codd. En tales estudios se experimentan bajo un enfoque metodologico, diversas tecnologias asociadas con el desarrollo de aplicaciones de Bases de Datos Relacionales y Web. Se analizan, evaluan y experimentan los mecanismos asociados a la especificacion, soporte y manejo de la Integridad y Seguridad en Bases de Datos Relacionales. Cuyos resultados se han reportado en los trabajos de tesis y publicaciones. Responsable del proyecto: BOONE ROJAS, MARIA DEL ROCIO Tiempo de dedicacion hrs/semana 10 Participantes en proyecto SORIANO ULLOA, MARCO ANTONIO Tiempo de dedicacion hrs/semana 4 BERNABE LORANCA, MARIA BEATRIZ Tiempo de dedicacion hrs/semana 4 CARRILLO RUIZ, MAYA Tiempo de dedicacion hrs/semana 4 FERRER ZEPEDA, MIGUEL ANGEL Tiempo de dedicacion hrs/semana 8 FLORES HUERTA, LORENA Tiempo de dedicacion hrs/semana 8 URIBE CAMACHO, VICENTE RAFAEL Tiempo de dedicacion hrs/semana 8 PASTRANA CRUZ, JESUS ARMANDO Tiempo de dedicacion hrs/semana 8 DORADO LUNA, MIGUEL ANGEL Tiempo de dedicacion hrs/semana 8 CRUZ CASTANEDA, WILLIAM Tiempo de dedicacion hrs/semana 8 Fuentes de financiamiento: Interna Produccion relacionada con: Tesis Nivel: Licenciatura 2 Maestria Doctorado Patentes: 0 Prototipos: 0 Cronograma Cuatrimestral ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Especificaciones x x x Diseno x x x Implantacion x x x x x x Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso 3 Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 267 Nombre del proyecto: Arquitecturas de Calidad de Servicio y Seguridad de las Redes de Comunicacion. Fecha de inicio del proyecto: 01/05/2006 Fecha programada de terminacion: 30/04/2007 Resumen (Gestacion, Evaluacion, Estado A ctual y Metas): Este proyecto tiene como objetivo especificar-verificar y modelar arquitecturas de Calidad de Servicio y Seguridad en tres tipos de redes: TCP/IP, buses de campos, e inalambricas (IEE 802.11 y Bluetooth). Estado Actual: Terminado Metas de acuerdo a las lineas de Investigacion: 4. Especificar arquitecturas 5. Verificar arquitecturas 6. Modelar arquitecturas Responsable del proyecto Tiempo de dedicacion (hrs/semana) Dr. Miguel Angel Leon Chavez 4 Participantes en proyecto Veronica Edith Bautista Lopez 8 Maria de Lourdes Lopez Garcia 8 Jose Roberto Perez Cruz 4 Alejandro Romero Sansalvador 4 Dr. Francisco Rodriguez Henriquez 4 Fuentes de financiamiento: VIEP Produccion relacionada con: Tesis Nivel: Licenciatura 2 Maestria 2 Doctorado Patentes Prototipos Cronograma Trimestres ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Especificacion x X X Verificacion X X X Modelado X X X Tipo de publicacion proyectada: Articulo Cientifico 10 Divulgacion Memorias de Congreso Publicaciones: 2006-2007 2006 - Moreno, V., Carrillo, M., Leon, M. y Boone, R. Modelo en UML para obtener una llave de sesion en IPv6. En 7th Congreso de Computacion, CIC-IPN (CORE-2006). Mayo 2006, Cd. Mexico. ISBN: 970-36-0332-7. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 268 - Perez R. y M. Leon. Modelo UML del estandar IEEE802.15.4. En 4th Congreso Nacional en Ciencias de la Computacion, La Computacion en Puebla en el siglo XXI, Vol. II, pp. 56-64, Nov., 2006, Puebla, Mexico. ISBN: 968 9182 30-7. - Lopez L. y M. Leon. Sistema de Votacion por Internet para la Eleccion de Presidente de Mexico. En 4th Congreso Nacional en Ciencias de la Computacion, La Computacion en Puebla en el siglo XXI, Vol. II, pp. 116-121, Nov., 2006, Puebla, Mexico. ISBN: 968 9182 30-7. - Bautista, V., F. Rodriguez y M. Leon. Implementacion de un monedero digital para el pago de gasolina usando vales electronicos. En 4th Congreso Nacional en Ciencias de la Computacion, La Computacion en Puebla en el siglo XXI, Vol. II, pp. 110-115, Nov., 2006, Puebla, Mexico. ISBN: 968 9182 30-7. - Proceedings of 6th International Conference on Fieldbus Systems and their Applications . Ed. Elsevier. ISBN10: 0-08-045364-3 (Book/paper), ISBN: 978-0-08-045364-4. Nov., 23, 2006. 2007 - Cinvestav. Computacion: Tecnologias de la Informacion. Vol. 26, Num. 2, pp. 76-77, Abril-Junio 2007. - Leon, M., F. Rodriguez, and E. Lopez. AES-CCM implementations for the IEEE 802.15.4 devices. In Proc. of 7th IFAC Fieldbus and Networks in Industrial and Embedded Applications (FeT'2007). pp. 223-229. Toulouse, France, Nov. 7-9, 2007. - Galan, J. C. y M. Leon. Modelo UML de Moodle. En La Computacion en Puebla en el siglo XXI, Vol. IV, pp. 67-75, Nov., 2007, Puebla, Mexico. ISBN: 968863588X. - Lopez-Garcia M.L., Leon Chavez M.A. and Rodriguez Henriquez F. A Secure Electronic Election System for the Mexican Presidential Election. In Research in Computing Science, Special Issue: Advances in Computer Science and Engineering, Vol. 29, 2007, pp. 171-182. ISSN: 1870-4069. Asesor de tesis de Licenciatura: - Modelo UML de los Servicios de Seguridad del IEEE 802.15.4. Perez Cruz Jose Roberto. Nov. 2006. - Analisis de Rendimiento del Servicio de Confidencialidad en CAN. Romero Sansalvador Alejandro. Dic. 2006. Asesor de tesis de maestria: - Sistema electronico de compra y venta de servicios utilizando dispositivos moviles ligeros. Veronica Edith Bautista Lopez. Marzo, 2007 - Sistema Electronico de Votacion. Maria de Lourdes Lopez Garcia. Enero, 2007. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 269 Nombre del proyecto: Desarrollo de Aplicaciones Seguras sobre Redes de Comunicacion Fecha de inicio del proyecto: 02/05/2007 Fecha programada de terminacion: 30/04/2008 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): Este proyecto presenta el desarrollo de aplicaciones seguras sobre tres redes de comunicacion: la red Internet, las redes inalambricas y los buses de campo (Fieldbus). El proyecto utiliza una aproximacion descendente y ascendente, en el primer caso se realiza un analisis de los requerimientos en seguridad de la aplicacion a desarrollar y se determina si la red de comunicacion satisface o no estos requerimientos. En caso de que la red no los satisfaga o lo haga parcialmente se determina la conveniencia de implementar los servicios de seguridad a nivel protocolario o a nivel de la aplicacion. Ejemplos de esta aproximacion son las aplicaciones Sistema de Pago Electronico Movil (SPEM) y Sistema Electronico de Votacion por Internet (SEVI). En la aproximacion ascendente se realiza un analisis de los servicios de seguridad que la red de comunicaciones provee, se determinan las vulnerabilidades en la implementacion de estos servicios y se proponen soluciones a nivel protocolario para que las aplicaciones hagan uso de estos servicios. Ejemplos de ello son las aplicaciones seguras sobre el IEEE 802.11, IEEE 802.15.4, IEEE 1609 y CAN (Controller Area Network). Podemos resumir los objetivos del proyecto de la siguiente manera: 1) Desarrollar aplicaciones seguras sobre las siguientes redes de comunicacion: i) Internet o Modelo TCP/IPv6 ii) Redes de campo (Fieldbus) iii) Redes inalambricas 2) Especificar y verificar o modelar las aplicaciones seguras usando: i) SDL (Lenguaje de Especificacion y Descripcion) ii) UML (Lenguaje Unificado de Modelado). 3) Analizar el funcionamiento y el rendimiento de las aplicaciones seguras desarrollado modelos de implementacion o construyendo prototipos. Responsable del proyecto Dr. Miguel Angel Leon Chavez Tiempo de dedicacion (hrs/semana) 8 Participantes en proyecto Dr. Francisco Rodriguez Henriquez 4 M.C. Veronica Edith Bautista Lopez 4 Participantes alumnos Juan Carlos Galan Hernandez 8 Silviana Juarez Chalini 8 Maribel Lopez y Lopez 4 Fuentes de financiamiento: BUAP-FCC Produccion relacionada con: 7. Tesis Nivel: Licenciatura 2 Maestria 2 Doctorado 8. Patentes 9. Prototipos Cronograma Mensual (mayo 2007-abril 2008) ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Desarrollo del Sistema de Pago Electronico Movil (SPEM) X X X X X X X X X X X Desarrollo del Sistema Electronico de X X X X X X X X X X X Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 270 Votacion por Internet (SEVI). Desarrollo de Aplicaciones seguras sobre el IEEE 802.15.4 X X X X X X X X X X X Desarrollo de Aplicaciones seguras sobre Moodle. X X X X Desarrollo de Aplicaciones seguras sobre CAN e IEEE 1609 X X X X X X X X X X X Tipo de publicacion proyectada: Articulo Cientifico 4 Divulgacion Memorias de Congreso 3 Publicaciones: 2007-2008 - Lopez-Garcia, L., F. Rodriguez-Henriquez, and M. Leon-Chavez. An E-voting protocol based on blind pairing signatures. In International Conference on Security and Cryptography (SECRYPT) as part of International Join Conference on e-Business and Telecommunications (ICETE), Porto, Portugal. Julio 26-29, 2008, pp. 214-217. ISBN: 978-989-8111-62-3. - Lopez-Garcia, L., F. Rodriguez-Henriquez y M. Leon-Chavez. Sistema Electronico de Votacion basado en firmas a ciegas con emparejamientos. En Actas de la X Reunion Espanola sobre Criptologia y Seguridad de la Informacion, Salamanca, Espana. Sep. 2-5, 2008, pp. 217-225. ISBN: 978-84-691-5325-3. - Galan, J. C. and M. Leon. UML Model of Moodle for mobile phones. En Teoria, Algoritmos y Aplicaciones en Computacion, Nov. 5-7, 2008, pp. 92-97, Puebla, Mexico. ISBN 978-607-7451-89-9 - Galan, J. C. and M. Leon. Moodle Security Vulnerabilities. In Proc. of the 5th International Conference on Electrical Engineering, Computing Science and Automatic Control (CEE), pp. 124-129. Nov. 12-14, 2008. Mexico City, Mexico, pp. 352-357. ISBN: 978-1-4244-2499-3. IEEE Catalog Number: CFP08827-CDR. Asesor de tesis de Licenciatura: - Sistema de Control Bibliotecario. Maribel Lopez y Lopez. Mayo, 2008. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 271 Nombre del proyecto: RFID PARA LOCALIZACION DE OBJETOS Fecha de inicio del proyecto: 08/01/2007 Fecha programada de terminacion: 18/12/2012 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): . Los principales beneficios que se obtuvieron de este proyecto fue hacia los hospitales es la actualizacion y el facil manejo de los expedientes, aplicando este sistema se puede obtener una reduccion de costos, ya que se ahorraria dinero en mano de obra y papel. Existe un ahorro de tiempo para el medico ya que puede acezar a la informacion desde cualquier lugar que cuente el sistema. El uso de la tecnologia RFID es de gran utilidad para diferentes areas como lo puede ser el area de la salud, en esta area, los medicos o los encargados de recopilar la informacion en el hospital en cuestion tendian control de la informacion y los pacientes, incluyendo pacientes en estado grave de salud en salas de urgencia. Actualmente se cuenta con un gran avance en este proyecto ya que se han obtenido 2 tesis de licenciatura y 1 de maestria que se titularon en 2009 y estan por presentar una tesis de maestria y otra de3 licenciatura .para el 2010, publicaciones se obtuvo dos internacional, y una nacional en 2009. Es lo que se lleva hasta este momento Responsable del proyecto SANCHEZ RINZA, BARBARA EMMA Tiempo de dedicacion 6 hrs/semana Participantes en proyecto Dr. Alonso Corona Chavez Martin Cano Contreras Elizabeth Lopez Melendez Carmen Campos Quiroz Fuentes de financiamiento: PROMEP Produccion relacionada con: Tesis Nivel: 2 tesis de Licenciatura concluidas 1 tesis de Maestria concluida 3 tesis de Licenciatura en proceso 1 tesis de Maestria en proceso Patentes: Prototipos: Cronograma Cuatrimestral ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Revision bibliografica x Analisis y diseno x x x x implementacion x x x x x x Resultados x x x Conclusiones x x Tipo de publicacion proyectada: 2 Articulo Cientifico (internacional) aceptados 1 Memorias de Congreso Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 272 Nombre del proyecto: Automatizacion de los procesos administrativos y operativos en la educacion continua Fecha de inicio del proyecto: 01/06/2006 Fecha programada de terminacion: 30/05/2008 Resumen (Gestacion, Evaluacion, Estado Actual y Metas): La Educacion Continua ha requerido dentro de sus procesos internos, avanzar en el aspecto de la actualizacion y la automatizacion de sus procesos administrativos y operativos, con el objetivo de coadyuvar en el ejercicio de criterios e indicadores que sigan manteniendo su efectividad, asimismo seguir en apego al objetivo de alcanzar la competitividad y excelencia en el entorno globalizado, a traves de la implantacion de Bases de Datos via WEB, que faciliten de una manera rapida, segura, compacta, menos laboriosa y actualizada la informacion pertinente y relevante a esta area. ETAPA 1. Estado: concluida. 1. Se realizo la implantacion de Bases de Datos mediante la cual se puede administrar, generar y compartir informacion colectiva de los proyectos educativos, impartidos en el marco de la Educacion Continua. Cabe senalar que se por acuerdo de ambas instancias participantes en el Convenio de colaboracion, se acordo realizar cambios no establecidos en el convenio, por lo que el desarrollo del software se realizo en mas tiempo del estipulado. ETAPA II. Estado: concluida al 90%. 2. Se realizo el desarrollo con base en la informacion de la Base de Datos a implantar, para la generacion de los estadisticos pertinentes, que coadyuven a la implementacion de estrategias a corto y largo plazo, con proyeccion tanto en el marco global y local. 3. Se realizo el desarrollo del modulo que automatiza la generacion de documentos, relevantes a la oferta educativa e institucional de la Educacion continua. 4. Se realizo tambien el desarrollo de un chat interno de comunicacion instantanea. Cabe senalar que este software, ya esta funcionando com un portal en un servidor de la FCC. Trabajo Restante: 1. Una segunda etapa de capacitacion 2. Realizacion del documento de liberacion por parte de la Jefatura de Educacion Continua. Responsable del proyecto AMBROSIO VAZQUEZ, ALMA DELIA Tiempo de dedicacion 4 hrs/semana Participantes en proyecto SOMODEVILLA GARCIA, MA. JOSEFA Tiempo de dedicacion 4 hrs/semana ANA LUISA CALDERON BENITEZ Tiempo de dedicacion 4 hrs/semana JUAN JOSE NOCEDAN AGUILAR Tiempo de dedicacion 4 hrs/semana EDER CORDERO GARCIA Tiempo de dedicacion 4 hrs/semana JOCELYN ARROYO E3SPINOZA Tiempo de dedicacion 4 hrs/semana LUIS ANDRES ROJAS JIMENEZ Tiempo de dedicacion 4 hrs/semana Fuentes de financiamiento: Produccion relacionada con: Tesis Nivel: Licenciatura Maestria Doctorado Patentes: Prototipos: Software: Gestor Web para Automatizacion de los Procesos Administrativos y Operativos en la Jefatura de Educacion Continua - BUAP Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 273 Cronograma Cuatrimestral ACTIVIDAD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Capacitacion x x x x Validacion final x x x x Liberacion x x x x x Tipo de publicacion proyectada: Articulo Cientifico Divulgacion Memorias de Congreso Gestor Web para Automatizacion de los Procesos Administrativos y Operativos en la Jefatura de Educacion Continua - BUAP M.C. Alma Delia Ambrosio Vazquez, P.T.I. Eder Jose Cordero* G.,Lic. Juan Jose Nocedal A.*, Dra. Maria Josefa Somodevilla G. * Estudiante de la BUAP Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion Edificio 135, 14 sur y Avenida San Claudio, Ciudad Universitaria. Puebla, Puebla. Telefono: 229-55-00 ext. 7230. ejcgfcc@gmail.com, ambrosio@cs.buap.mx, juan.nocedal@gmail.com, mariasg@cs.buap.mx. Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 274 Relacion de proyectos de investigacion terminados en los ultimos cinco anos Nombre del proyecto Fecha inicio Responsable No. Part. Produccion relacionada con NIVEL TESIS PATENTES PROTOTIPOS INTERNACIONAL NACIONAL LOCAL L M D Especificacion y verificacion formal 2001 MC. Jesus Lavalle Martinez 4 5 1 X Creacion del grupo de interes en planificacion de movimientos 2003 Dr. Abraham Sanchez Lopez 4 4 X Diseno y construccion de una tarjeta electronica de control para aplicaciones en robotica modular 2004 Dr. Manuel Rubin Falfan 4 1 X Tecnicas de deduccion y razonamiento automatico 2004 MC Maria del Carmen Santiago Diaz 6 0 0 X Mejoramiento del Rendimiento para Sistemas Operativos tipo Linux 2004 MC. Castillo Zacatelco Hilda 3 2 X Linda BUAP: Sistema de Procesamiento paralelo con arquitectura MIMD y memoria virtual compartida 2004 MC. Cruz Almanza Graciano 4 1 2 1 X Modelado Hidrodinamico y Simulacion de Termotransporte Electronico en Semiconductores 2004 Dr. Alejandro Rangel Huerta 4 3 2 X X Filtrado de imagenes en el espacio directo y en espacios alternativos 2004 Dr. Manuel Martin Ortiz 6 9 X Desarrollo de Aplicaciones Distribuidas Agentes y Paralelizacion de Algoritmos de Optimizacion 2004 Dra. Darnes Vilarino Ayala 7 1 4 X Matrices de covarianza heterogeneas en el modelo de analisis de varianza de medidas repetidas 2004 Dra. Gladis Linares Fleites 7 1 2 X Especificacion y Verificacion Formal de Sistemas 2004 Dra. Gladis Linares Fleites 3 2 1 X Optimizacion Aplicada 2004 Dra. Maria Auxilio Osorio Lama 12 6 2 X Sistema de Gestion Integral de Colecciones 2004 Dra. Maria de la Concepcion Perez de Celis Herrero 1 2 X Bases de Datos Espaciales y Analisis de Imagenes 2004 Dra. Maria Josefa Somodevilla Garcia 1 4 3 X Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 275 Nombre del proyecto Fecha inicio Responsable No. Part. Produccion relacionada con NIVEL TESIS PATENTES PROTOTIPOS INTERNACIONAL NACIONAL LOCAL L M D Proyecto de Investigacion VIEP III9-04/ING/G 2004 Dr. Hector Jimenez Salazar 4 0 2 X Analisis y revision de aspectos metodologicos para el diseno curricular 2004 Lic. Jimenez Gonzalez Jorge 6 0 0 X Arquitectura calidad de servicio y seguridad en las redes de comunicacion 2004 Dr. Leon Chavez Miguel 1 1 2 X Especificaciones, extensiones y ramificaciones del modelo Relacional 2004 Lic. M. Rocio Boone Rojas 9 10 X X Reconocimiento de Patrones usando FPGAs 2004 M.C. Alba Maribel Sanchez Galvez 5 1 2 X X Estudio de Metodologias en la Elaboracion de Software Educativo a nivel Preescolar 2004 M.C. Beatriz Beltran Martinez 3 2 X Estudio de Metodologias en la Elaboracion de Software Educativo para nivel Primaria 2004 M.C. Beatriz Beltran Martinez 6 2 1 X Implantacion de un Prototipo de un Sistema Gestor de Base de Datos Distribuidas 2004 M.C. Hilda Castillo Zacatelco 7 4 1 X Estudio de las distribuciones de probabilidad a traves de metodos empiricos 2004 M.C. Martin Estrada Analco 2 X Un modelo de procesos para centros de desarrollo pequenos 2004 M.C. Maya Carrillo Ruiz 3 X Analisis y aplicacion de tecnicas en mineria de datos 2004 MC M. Beatriz Bernabe Loranca 6 2 X Sistema para el perforado automatico de circuitos impresos 2004 MC. Ata Perez Apolonio 4 1 X Analisis de los diferentes factores que influyen en los problemas educativos a nivel superior 2004 MC. Carmen Ceron Garnica 11 7 1 X Creacion y edicion de videos, software educativo y aplicaciones para la educacion presencial y a distancia 2004 MC Vera Cervantes Erica 4 3 0 X Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 276 Nombre del proyecto Fecha inicio Responsable No. Part. Produccion relacionada con NIVEL TESIS PATENTES PROTOTIPOS INTERNACIONAL NACIONAL LOCAL L M D Diseno y construccion de un sistema de acoplamiento y comunicacion entre robots modulares 2005 Dr. Manuel Rubin Falfan 4 2 X Optimizacion y heuristica aplicada 2005 Dr. Abraham Sanchez Lopez 3 X Creacion del grupo de interes en planificacion de movimientos 2005 Dr. Abraham Sanchez Lopez 4 5 X Desarrollo de algoritmos para la planificacion de movimientos 2006 Dr. Abraham Sanchez Lopez 4 4 X Guia didactica para Circuitos Electricos 2006 Dr. Gregorio Trinidad Garcia 3 4 X Analisis y diseno de un sistema gestor de bases de datos distribuidas 2006 MC Andres Vazquez Flores 7 3 X Desarrollo de notas para el area de hardware 2006 MC. Gregorio Trinidad Garcia 3 1 X Adquisicion y procesamiento de imagenes usando FPGAs 2006 MC. Alba Maribel Sanchez Galvez 3 2 X COMPUTACION QUANTICA Y TEMAS RELACIONADOS 2006 Dr. Cesar Bautista Ramos 3 X Arquitecturas de Calidad de Servicio y Seguridad de las Redes de Comunicacion. 2006 Dr. Miguel Angel Leon Chavez 6 3 2 X Automatizacion de los procesos administrativos y operativos en la educacion continua 2006 MC. Alma Delia Ambrosio Vazquez 6 3 X X Disenos de algoritmos basados en el conocimiento y deteccion de defectos en superficies concavas-energias renovables 2007 Dr. Mario Bustillo Diaz 6 2 X X X APLICACIONES Y DESARROLLOS DE LAS BASES DE DATOS RELACIONALES 2007 Lic. Maria del Rocio Boone Rojas 13 2 X ANALISIS Y ESTUDIO COMPARATIVO DE ALGORITMOS DE AGRUPAMIENYTO EN WEKA, SPSS Y MATLAB. CASO ESTUDIO EL ALGORITMO K.-MEDIAS 2007 Lic. Maria del Rocio Boone Rojas 3 2 X Manual del CONAIC - criterios para la acreditacion Formato para ser llenado por la institucion - Pag. FI - 277 Nombre del proyecto Fecha inicio Responsable No. Part. Produccion relacionada con NIVEL TESIS PATENTES PROTOTIPOS INTERNACIONAL NACIONAL LOCAL L M D Especificaciones, Extensiones y Ramificaciones del Modelo Relacional 2007 Lic. Maria del Rocio Boone Rojas 3 2 X Desarrollo de Aplicaciones Seguras sobre Redes de Comunicacion 2007 Dr. Miguel Angel Leon Chavez 6 2 2 X RFID PARA LOCALIZACION DE OBJETOS 2007 Dra. Barbara Emma Sanchez Rinza 5 5 X
50b443555fa735169f000170 1 2Tabla de contenido / Table of contents Bienvenida Welcome -3- Programa general General program -4- Mapa general de ubicacion General location map -6- Conferencias plenarias Invited speakers -7- Consorcio doctoral Doctoral Consortium -9- Torneo de robots limpiadores Cleaning robot tournament -10- Paneles de discusion Discussion panels -10- Talleres Workshops -11- Conferencia ReConFig ReConFig conference -20- Conferencia Internacional ENC ENC main conference -22- Mapas de ubicacion Location maps -24- Comite organizador / Organizing committe SMCC Jesus Favela, Presidente CICESE, Mexico Marcelo Mejia, Vicepresidente ITAM, Mexico Presidente del congreso Miguel Arias-Estrada INAOE, Mexico Comite tecnico Congreso Internacional Vladmir Estivill-Castro Griffith University, Australia Alfredo Sanchez UDLA, Mexico Comite tecnico Reconfig Rene Cumplido, INAOE Claudia Feregrino, INAOE Comite organizador local Abraham Sanchez Lopez Maria Auxilio Osorio Lama Lourdes Sandoval Solis Maria del Carmen Santiago Diaz Universidad Autonoma de Puebla, Mexico Pagina oficial del ENC / Official conference webpage http://enc.smcc.org.mx Comite de publicidad Diana Caballero, UDLA Maria Guadalupe Elizalde Vieyra, UNAM Morelia Gerardo Padilla, CIMAT Guanajuato Talleres Luis Villasenor Pineda, INAOE Ana Martinez Garcia, CICESE Finanzas David Sol, UDLA, Mexico Comite de Carteles Jaime F. Meade Collins, UASLP Luciano Garcia Banuelos, UATX Comite de Charlas Invitadas Isaac Rudomin, ITESM Janeth Cruz, INAOE Comite de Consorcio Doctoral Marcela Rodriguez, UABC Humberto Sossa, CIC-IPN Comite de Tutoriales Manuel Martin, BUAP Luis Gerardo de la Fraga, CINVESTAV Comite de Paneles Mario Moreno, UTM Irma Solis, UTM Norma Roffe, ITESM 3Bienvenida La Sociedad Mexicana de Ciencia de la Computacion (SMCC) les da la bienvenida a la sexta edicion del ENC (Encuentro Internacional de Ciencias de la Computacion). El encuentro ha venido creciendo y este ano concentra: Conferencia Mexicana Internacional en Ciencias Computacionales ENC2005 Conferencia en Computo Reconfigurable ReConFig05 10 Miniconferencias tipo taller 7 Tutoriales El torneo de robots limipadores Sesion de carteles Consorcio doctoral 2 Paneles de discusion 4 Conferencistas invitados Les damos la bienvenida a la historica ciudad de Puebla, y esperamos que su participacion en el ENC2005 sea enriquecedora en nuevas ideas. Welcome The Mexican Society for Computer Science (SMCC) welcomes you to the sixth edition of the ENC (International Computer Science Conference). The ENC'2005 has been growing and this time, the conference gather together the following events: International Conference in Computer Science, ENC2005 Internacional Conference in Reconfigurable Computing, ReConFig05 10 Workshops 7 Tutorials The cleaning robot tournament Poster session Doctoral consortium 2 discussion panels 4 invited speakers We want to welcome you the the city of Puebla, and we hope you will enjoy the conference and will find week full of new ideas. 4Programa de actividades / General activities program Lunes / Monday Martes / Tuesday Hora / Hour 26 SEP 27 SEP Consorcio doctoral Talleres / Workshops Torneo de Robots Limpiadores 8:00 - 9:00 am Registro / Registration 9:00 - 10:45 am CD T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 TR 10:45 - 11:00 am Receso / Break 11:00 - 12:00 am 12:15 - 2:00 pm 2:00 - 4:00 pm Comida / Dinner Comida / Dinner 4:00 - 5:45 pm 5:45 - 6:00 pm Receso / Break 6:00 - 7:00 pm 7:00 - 8:00 pm 8:00 - 9:00 pm Evento / Workshop Salon / Room CD Consorcio Doctoral Verde I (Edif. Carolino) T1 Bioinformatica y Biologia Computacional Biblioteca Lafragua T2 Tecnologia de Objetos de Aprendizaje Auditorio Preparatoria Zapata T3 Computo Movil Verde I (Edif. Carolino) T4 Tecnologias del Lenguaje Humano Aula Magna German Lizt (Edif. Filosofia)T5 Robotica Movil Verde II (Edif. Carolino) T6 Computacion Clinica e Informatica Medica Aula Magna Elena Garro T7 Ingenieria de Software Salon de Proyecciones (Edif. Carolino) T8 Sistemas Cooperativos Multimedia Aula Magna Vasconcelos T9 Tecnicas de Deduccion y Razonamiento Aut.Sala de VIEP T10 Optimizacion y metaheuristicas Paraninfo (Edif. Carolino) TR Torneo de Robots limpiadores Candiles (Edif. Carolino) 5Programa de actividades / General activities program Miercoles / Wenesday Jueves / Thursday Viernes / Friday Hora / Hour 28 SEP 29 SEP 30 SEP ENC Reconfig TRENC Reconfig TRENC Reconfig TR 8:00 - 9:00 am Registro Registro Registro 9:00 - 10:40 am ENC1 ENC2 REC ENC3 ENC4 REC ENC5 ENC6 REC 10:45 - 11:00 am Receso / Break 11:00 - 12:00 am CARTELES PLENARIA 2 PLENARIA 4 12:15 - 2:00 pm ENC1 ENC2 REC ENC3 ENC4 REC PANEL 2 2:00 - 4:00 pm Comida Comida 1:30 pm CLAUSURA / CLOSING 4:00 - 5:40 pm ENC1 ENC2 REC ENC3 ENC4 REC 5:45 - 6:00 pm Receso / Break Receso / Break 6:00 - 7:00 pm PLENARIA 1 PLENARIA 3 7:00 - 8:00 pm Inauguracion / Open speech PANEL 1SMCC 8:00 - 9:00 pm Brindis y evento cultural /cultural event 8:30pm Cena / Dinner Evento / Session Salon / Room Registro Registro / Registration Primer Patio Edif. Carolino Inauguracion Open speech / Inauguracion oficial Salon Barroco (Edif. Carolino) ENC1 ENC Track 1 Wensday / Miercoles Sala de proyecciones (Edif. Carolino)ENC2 ENC Track 2 Wensday / Miercoles Paraninfo (Edif. Carolino) ENC3 ENC Track 3 Thursday / Jueves Auditorio Preparatoria Zapata ENC4 ENC Track 4 Thursday / Jueves Salon Verde 1 (Edif. Carolino) ENC5 ENC Track 5 Friday / Viernes Sala de proyecciones (Edif. Carolino)ENC6 ENC Track 6 Friday / Viernes Salon Verde 1 (Edif. Carolino) REC Reconfig Salon Verde 2 (Edif. Carolino) CARTELES Carteles / Posters Primer Patio (Edif. Carolino) PLENARIA 1 Charla plenaria / Invited speaker 1 Salon Barroco (Edif. Carolino) PLENARIA 2 Charla plenaria / Invited speaker 2 Salon Barroco (Edif. Carolino) PLENARIA 3 Charla plenaria / Invited speaker 3 Salon Barroco (Edif. Carolino) PLENARIA 4 Charla plenaria / Invited speaker 4 Sala de proyecciones (Edif. Carolino)SMCC Reunion anual SMCC Salon Verde 1 (Edif. Carolino) PANEL1 Panel 1 Auditorio Preparatoria Zapata PANEL2 Panel 2 Sala de proyecciones (Edif. Carolino)CLAUSURA Clausura y premiacion / Closing and awardsSala de proyecciones (Edif. Carolino) TR Torneo de Robots limpiadores Candiles (Edif. Carolino) 6Ubicacion / Location 7 Charlas invitadas / Invited speakers Reconciling Logic and Objects. Barroco Room Wensday 18:00OE19:00 (English) Robert Kowalski Imperial College, UK Logic and objects can be combined and reconciled in at least three main ways. The simplest and most conservative way is to use logic to describe OO systems. A more ambitious, but also straight-forward way is to use logic to implement OO methods. This second way reconciles logic and objects by allocating them separate areas of concern: Objects provide semantic structure, and logic provides their syntactic representation. Unfortunately, this second way leaves a major conflict, concerning their different views of atomic facts, unresolved. The third way to reconcile logic and objects is to combine them, but without restricting relationships to properties and without accessing information by message passing. High Performance Computing using Reconfigurable Hardware Barroco Room Thursday 11:00OE12:00 (English) Viktor K. Prasanna University of Southern California, USA Recently, several state of the art high end platforms have incorporated FPGAs for application acceleration. This talk explores optimizations for accelerating linear algebra computations on such systems. We develop algorithmic optimizations for such systems and demonstrate the suitability of FPGAs for floating point intensive computations. We discuss the design of a BLAS library for such systems and develop a highly optimized reduction circuit for such architectures. Using the reduction circuit, we demonstrate superior performance for sparse matrix computations. The performance of FPGAs is also compared against those of state-of-the-art embedded processors, general purpose processors, and DSPs for floating point intensive applications. 8 Charlas invitadas / Invited speakers Model Construction of Nonrigid Biological Objects from Images Barroco Room Thursday 11:00OE12:00 (English) Dmitry Goldgof University of South Florida, USA Being able to accurately model the deformation of biological objects is vital to the success of many multidisciplinary studies such as computer-aided surgery simulation and planning, image-based medical diagnosis, and motion-based human identification etc. Among various modeling techniques, physical model becomes increasingly popular because the physical and mathematical rigors upon which the model is established can ensure physically sound motion predictions. It has been widely recognized that material properties assigned to the physical model could have a significant impact on its prediction accuracy. In this talk we will explore a number of applications of such modeling for burn scar evaluation and breast cancer detection to facial expression analysis and biometrics. Automatic Natural Language Processing: Problems, Ideas and Methods Barroco Room / Salon Barroco Friday 11:00OE12:00 (Spanish) Alexander Gelbukh Centro de Investigacion en Computacion, CIC-IPN, Mexico Natural language processing is a branch of artificial intelligence devoted to enabling computers to meaningfully process texts and speech in human languages which we normally use for communication between people and for reading and writing. While a decade ago it was perceived as part of applied linguistics, now it has converted to a very interesting and motivating application of machine learning. In this talk I will give an introduction to Natural Language Processing, and will briefly comment on the main problems on this technology, some ideas and methods for their solution. I will also present our introductory book on the topic and an international conference to be held soon in Mexico. 9 Consorcio Doctoral / Doctoral Consortium Lunes 26 de Septiembre Salon Verde 1 (Edificio Carolino) Horario Actividad 9:00 - 9:30 Bienvenida y presentacion Integrated Formal Models of Tasks, States and Transformations in the Discovery Method 9:30 - 10:15 Carlos Alberto Fernandez y Fernandez Construccion de Ontologias basada en Agentes para Apoyar la Organizacion de Recursos de Informacion en Bibliotecas Digitales Federadas 10:15 - 11:00 Maria Auxilio Medina Nieto 11:00 - 11:15 RECESO-CAFE Desarrollo de reglas ECA en Bases de Datos Activas, Un enfoque de Red de Petri 11:15 - 12:00 Joselito Medina Marin A new scheme of metrics for the evaluation of spoken dialogue systems 12:00 - 12:45 Javier Velasquez 12:45 - 1:00 RECESO-CAFE 1:00 - 2:00 PANEL DE DISCUSION: fiLa Investigacion en Mexico y los retos que se enfrentan en la actualidadfl 2:00 - 4:00 Comida Modelo de conglomerado en bases de datos con alta dimensionalidad e identificacion de valores atipicos 4:00 - 4:45 Dora Alicia Alvarez Medina Search Graphs Characterization for Combinatorial Problems 4:45 - 5:15 Everardo Gutierrez Lopez PANEL DE DISCUSION: 5:15 - 6:00 fiEl proceso de investigacion durante la Tesis Doctoralfl 10 Torneo de Robots Limpiadores / Cleaning robot tournament 27 al 30 de Septiembre Salon Candiles (Edif. Carolino) Fecha Horario Actividad Martes 27 Sept 8:00 OE 20:00 Pruebas sobre el terreno y sorteo de turnos para las competencias calificatorias de los participantes del Torneo de Robots Limpiadores de Superficies - Categorias A y B - Miercoles 28 Sept 8:00 OE 20:00 Competencias calificatorias de los participantes del Torneo de Robots Limpiadores de Superficies - Categorias A y B - 8:00 OE 20:00 Competencias definitivas -semifinal y final- del Torneo de Robots Limpiadores - Categorias A y B Jueves 29 Sept 8:00 OE 20:00 Pruebas en el ambiente de los participantes de la Exhibicion de Robots Limpiadores Acuaticos (Primer Patio, Edif. Carolino) 9:30-12:30 Exhibicion de Robots Limpiadores Acuaticos (Primer Patio, Edif. Carolino) Viernes 30 Sept 13:30-14:00 Premiacion y Clausura del evento, junto con ENC y ReConFig (Sala de Proyecciones, Edif. Carolino) Paneles de discusion / Discussion panels (in spanish) Primer panel Oportunidades de Negocios: de la A a la Z de las empresas de computo Auditorio Preparatoria Zapata Jueves 19:00OE20:15 (Spanish) ?Como empezar un negocio de desarrollo de software , de venta de equipo y/o consultorias? ?Es una buena idea en estos tiempos? ?Vale la pena? El panel tratara de contestar estas y otras inquietudes que siempre hemos tenido del mundo de los negocios. Los panelistas son experimentados duenos de empresas desarrolladoras de software, comercializacion de equipo y software, asi como consultoras, que compartiran sus experencias con la audiencia. Altamente recomendable. Segundo panel Lo que usted siempre quiso saber de los estudios de Posgrado y no se atrevio a preguntar Salon de proyecciones (Edif. Carolino) Viernes 12:15OE13:45 (Spanish) ?Hay vida despues de unos estudios de posgrado? ?Existen razones para no estudiar en el extranjero? ?Cuantas horas duerme un estudiante de posgrado estos dias? Todo lo que usted quiso saber de los estudios de Posgrado y no se atrevio a preguntar es el titulo de este panel. Reuniremos estudiantes de doctorado y maestria que nos ayudaran a despejar estas y otras dudas, en un panel muy dinamico. Invitamos a todos a participar. 11 Taller 1. Bioinformatica y Biologia Computacional Martes 27 de Septiembre Salon: Biblioteca Lafragua HORA ARTICULO 8:00 - 9:00 Registro An Exploratory Algorithm based on the Ant Colony Optimization Metaheuristic for the Sequencing by Hybridization Problem 9:00 OE 9:30 Luis Carlos Gonzalez- Gurrola Analisis de secuencias de ADN con WinGramm 2 9:35 OE 10:00 Julio Cesar Sandria Reynoso, Miguel Angel Jimenez Montano Consenso de Alfabetos Reducidos de Aminoacidos y su Aplicacion al Diseno de Secuencias de Proteinas Simplificadas 10:00 OE 10:30 Miguel Angel Jimenez Montano, Antero Ramos Fernandez, Hector Rafael Lucio Garcia Construccion, Evaluacion y Manipulacion de Redes Bayesianas a partir de Datos Biologicos 10:35 OE 11:00 Luis Alonso Nava Fernandez, Nicandro Cruz Ramirez 11:00 - 11:15 RECESO-CAFE DNA sequencing by hybridization: A set of probably solvable instances 11:15 - 11:45 H. Jazmin Romero, Carlos A. Brizuela Identificacion de Secuencias Funcionales del Dominio 3-5 Exonucleasa de Polimerasas de ADN (POL C) Mediante Alineamiento y Aplicacion de Alfabetos Reducidos 11:50 OE 12:20 Cristina Barcenas Pazos, Joaquin Cazares Martinez, Sonia Galicia Castellanos, Julio Cesar Sandria Reynoso, Policarpo Ronzon Perez, Miguel Angel Jimenez Montano Is the Signal-to-Noise Distance Enough to Determine the Gene-Markers Class Label? A Preliminary Study Using Bayesian Networks 12:25 - 12:55 Nicandro Cruz-Ramirez, Miguel Angel Ponce-Ruiz, Miguel Angel Jimenez-Montano, Hector Gabriel Acosta- Mesa Regulatory Sequences Search in the Bacillus Subtilis Bacterium GENOME 13:00 13:30 Pablo Mota, Jesus A. Gonzalez, Candelario Vazquez, Beatriz Beltran 13:30 OE 15:30 COMIDA Seleccion de compuestos para la tipificacion, un problema de seleccion de caracteristicas usando GA's y PCA, caso Virus del Papiloma Humano 15:30 OE 16:00 Mariano Rodriguez Muro, Maria del Pilar Gomez Gil, Mauricio Osorio Galindo, Javier Garces, Carolina Castaneda Roldan Studying plasticity in Behavior Networks using Reinforcement Learning: Feeding of Howler Monkeys in computational ethology. 16:05 OE 16:35 Alejandro Guerra-Hernandez, Selene Ivette Jimenez-Castillo, Manuel Martinez- Morales, Fernando M. Monte-Gonzalez, V. Angelica Garcia-Vega The significance of nucleotides within DNA codons: a quantitative approach. 16:35 OE 17:05 Alejandro Guerra-Hernandez, Miguel Angel Jimenez-Montano, Carlos Ruben de la Mora-Basanez 17:05 OE 17:30 MESA REDONDA 17:30 OE 17:45 RECESO-CAFE 17:45 OE 18:30 MESA REDONDA 12 Taller 2. Tecnologia de Objetos de Aprendizaje Martes 27 de Septiembre Salon: Auditorio Preparatoria Zapata HORA ARTICULO 08:00-09:00 Registro 09:00-09:30 Presentacion fiAnalisis de servicios colaborativos de los ambientes de aprendizaje basados en objetos de aprendizajefl, 09:30-10:15 Maribel Romo Contreras, Jaime Munoz Arteaga y Francisco J. Alvarez Rodriguez fiSistema Multiplataforma de Evaluacion en Linea basado en tecnologia Cliente-Servidorfl, 10:15-11:00 J. A. Hernandez, G. N. Burlak 11:00-11:15 RECESO-CAFE fiLa Importancia de la Definicion de la Calidad del Contenido de un Objeto de Aprendizajefl, 11:15-12:00 Cesar Eduardo Velasquez Amador, Jaime Munoz Arteaga, Francisco Alvarez Rodriguez fiModelo de Aprendizaje basado en Mapas Conceptuales y Objetos de Aprendizaje ,MACOBAfl, 12:00-12:45 Ma. de Lourdes Y. Margain Fuentes, Francisco Alvarez Rodriguez, Jaime Munoz Arteaga, J. Pedro Cardona Salas fiPosibilidades de Inclusion de Simulaciones dentro del Estandar actual para e-learning: SCORMfl, 12:45-13:30 Angelica de Antonio Jimenez, Zayra Madrigal Alfaro 13:30-15:30 Comida fi(ECoMOA): Elaboracion Colaborativa de Metadatos de Objetos de Aprendizaje.fl 15:30-16:15 Cesar A. Collazos, Manuel E. Prieto, Manuel Ortega, Antonio Rodriguez, Luciano Dominguez 16:15-16:30 RECESO-CAFE fiMetodologia para el Diseno de Objetos de Aprendizaje en la Ensenanza de Lenguajes de Programacion en Cursos en Lineafl, 16:30-17:15 Juan P. Cardona, Francisco J. Alvarez, Jaime Munoz Arteaga, Cesar Eduardo Velasquez Rodriguez, Lourdes Y. Margain, Carlos Arevalo Mercado. fiA System for the Edition and Publication of Recreational Learning Objectsfl, 17:15-18:00 Gabriel Lopez-Morteo, Victor Sandoval-Soriano, Gilberto Lopez 18:00-18:45 Discusion 13 Taller 3. Computo Movil Martes 27 de Septiembre Salon Verde 1 (Edif. Carolino) HORA ARTICULO 08:00-09:00 Registro 09:00-09:15 Presentacion y orden del dia El Proyecto Edumovil: Consideraciones Iniciales 09:15-09:45 Gabriel Jeronimo-Castillo, Luisa Aquino-Bolanos, Lizeth Becerra-Gonzalez, Ivan Calvo-Larumbe IRIS: Un middleware para el desarrollo de escenarios de colaboracion digital espontanea sobre dispositivos moviles IEEE 09:45-10:15 Silvana Bravo Hernandez, Jorge Alfonso Briones Garcia Sistema de Reuniones: una Alternativa para la Movilidad de los Participantes 10:15-10:45 Gabriel Jeronimo-Castillo, Rubi Santiago-Ramirez, Arlette Fernande- Moreno 10:45-11:00 RECESO-CAFE Charla invitada: Computo ubicuo 11:00-12:30 Dra. Marcela Rodriguez Consideraciones de diseno para el descubrimiento de servicios con base en proximidad fisica 12:30-13:00 Leonardo Galicia Jimenez, Jose Antonio Garcia Macias Consideraciones de seguridad de agentes moviles entre plataformas JADE 13:00-13:30 Marcel-Isabel Juarez-Valdez, Oscar-Ivan Lepe-Aldama 13:30 - 16:00 RECESO-COMIDA mSALSA: Agentes de Software para el Desarrollo de Aplicaciones Moviles 16:00 - 16:30 Irma Amaya, Pedro C. Santana, Marcela D. Rodriguez, Jesus Favela Charla invitada: Redes ad-hoc moviles 16:30 - 17:00 M.C. Dante Arias Torres 17:00 - 18:00 Presentacion de la industria 18:00 Cierre del evento 14 Taller 4. Tecnologias del Lenguaje Humano Martes 27 de Septiembre Salon: Aula Magna German Lizt (Edif. Filosofia) HORA ARTICULO 8:00 - 9:00 Registro 9:00 - 9:30 Bienvenida Sesion I OntoSIR: Servicio de Recuperacion de Registros en Multiples Colecciones para la Iniciativa de Archivos Abiertos Ma. Auxilio Medina, Alfredo Sanchez, Metztli Ibanez Funciones de Cercania Semantica para la Validacion de Respuestas en la Web Antonio Juarez-Gonzalez, Manuel Montes-y-Gomez & Luis Villasenor-Pineda Flexion y Deflexion Lexica del Espanol 9:30 - 11:00 Gabriel Castillo Hernandez, Ana Maria Contreras Ballesteros 11:00 - 11:30 RECESO-CAFE Sesion II Analisis de una representacion de textos mediante su extracto Ernesto Minon Romero, David Pinto & Hector Jimenez-Salazar Definition Question Analysis Employing Machine Learning Carmen Martinez, A. Lopez-Lopez Seleccion de terminos no supervisada para agrupamiento de resumenes Hector Jimenez, David Pinto, Paolo Rosso & Mikhail Alexandrov Cross-language Question Answering: The Key Role of Translation 11:30 - 13:30 S. Larosa, J. Penarrubia, P. Rosso, M. Montes-y-Gomez 13:30 - 15:30 COMIDA Presentacion de Sistemas (30 min. presentaciones, i.e. 10 min. por sistema y 20 min. Preguntas generales) VALIDE Variacion Lexica Internacional del Espanol JIRS: Un Sistema de Recuperacion de Pasajes Orientado a Busqueda de Respuestas 15:30 - 16:30 Etiquetador Morfologico y Desambiguador Manual: Dos Aplicaciones del Analizador Morfologico Automatico para el Espanol 16:30 - 17:00 RECESO-CAFE 17:00 - 18:00 Reunion de la Asociacion Mexicana de Procesamiento de Lenguaje Natural 18:00 Clausura del taller 15 Taller 5. Robotica Movil Martes 27 de Septiembre Salon Verde 2 (Edif. Carolino) HORA ARTICULO 8:00 - 9:00 Registro 9:00 - 9:30 Presentacion del taller Conferencia Magistral: Programacion Bayesiana de Robots 9:30 - 10:30 Ruben Senen Garcia Ramirez 10:45 - 11:00 RECESO-CAFE Presentacion de trabajos Construccion de un sistema robotico de proposito simple Daniel Gustavo Flandes y Fernando Montes Gonzalez RMP3D: A generic platform for motion planning Abraham Sanchez Lopez, Josue Sanchez Texis y Miguel Rodriguez C. Texture segmentation using bayes rule and co-ocurrence matrices Dora Luz Almanza, Victor Ayala, Raul Sanchez y Gabriel Avina Generacion y mantenimiento de formaciones en robotica colectiva Yazid Leon F. y Angelica Munoz M. Seleccion de accion usando redes de comportamiento para la resolucion robotica de una tarea de forrajeo Fernando Montes G. y Erandi Barrientos M. Color reconstruction in outdoor natural images for visual-based navigation 11:00 - 14:00 Gabriel Avina, Raul Sanchez, J Gonzalez y Victor Ayala 14:00 - 16:00 COMIDA Presentacion de trabajos Using of a SOM to classify simple objects with data from simple sonar sensors 16:00 - 16:30 Luis E. Arambula 16:30 - 17:30 Mesa redonda 17:30 - 18:00 Clausura del taller 16 Taller 6. Computacion Clinica e Informatica Medica Martes 27 de Septiembre Salon: Aula Magna Elena Garro Horario Actividad 08:00-09:00 Registro 09:00-09:15 Presentacion del taller Platica invitada: Programa Nacional de Tele-Salud ISSSTE, experiencia 10 anos. 09:15-10:15 Dra. Amanda Gomez, ISSSTE. Sesion de presentacion de articulos Towards an Automated Diagnosis of Epileptic Diseases Based on Dynamical Systems Theory. 10:15-10:40 Azgad Casiano Ramos, Hugo G. Gonzalez-Hernandez. Apoyo a esquemas de trabajo movil en ambientes hospitalarios a traves del uso de sistemas de workflow inalambrico. 10:40 - 11:05 Lizbeth O. Escobedo Bravo, Ana I. Martinez Garcia 11:05 - 11:20 RECESO-CAFE Factores criticos para la adopcion de PDAs en hospitales: Caso de estudio de enfermeras. 11:20-11:45 Elisa B. Moran, Ana I. Martinez, Victor M. Gonzalez, Jesus Favela Experiencias en el Desarrollo e Implantacion de un Sistema PACS/RIS. 11:45-12:10 Alba R. Melendez Islas, C. Feregrino Uribe Platica invitada: Diseno e implementacion del sistema integral electronico de salud para manejo de expedientes clinicos a traves de la tarjeta inteligente de salud en plataforma de Internet. 12:10-12:50 Dr. Ernesto Padilla , M.C. Felix Duenas, IMEDIS Platica invitada: Hacia un expediente medico electronico universal de arquitectura abierta. 12:50-13:30 Dr. Edgar Chavez 13:30-15:30 COMIDA Platica invitada: Cirugia Robotica. Pasado Presente y "Futuro": La interfaseentre el Ingeniero y el Cirujano. 15:30-16:30 Dr. Harry Miller, IMSS Sesion de presentacion de articulos Interaccion Paciente OE Brazo Robotico Soportada por un Sistema de Inferencia Difusa.16:30-16:55 Lucia Rodriguez Vazquez, Malaquias Quintero Flores. Diagnostic Audiometric Medical System (SIMAD). 16:55-17:20 N. Saavedra, Martin M. 17:20-17:35 RECESO-CAFE Presentacion del Consorcio Medica Sur-Conacyt 17:35-18:05 Dr. Arturo Serrano, CICESE Mesa redonda y Conclusiones 18:05-19:30 Dra. Amanda Gomez (Directora del Programa de Telesalud del ISSSTE), Dr. Harry Miller (Medico cirujano, IMSS), Dr. Ernesto Padilla (Director Medico, Imaxess), Dr. Nicolas Gonzalez, (Presidente del Colegio de Radiologos del Estado de Puebla), Dra. Julia Mora (Coordinadora Clinica de Educacion e Investigacion en Salud Hospital No. 8 de Zona 4, IMSS), Dr. Arturo Serrano (Director de Innovacion y Desarrollo, CICESE). 17Taller 7. Ingenieria de Software Martes 27 de Septiembre Salon de Proyecciones (Edif. Carolino) Horario Actividad 08:00 - 09:00 Registro 09:00 - 09:15 Presentacion del taller Presentacion de resultados del taller 2004 09:15 - 10:00 Invitados: Maria de los Angeles Sumano Lopez, Juan Manuel Fernandez Pena (UV) Metricas para la mejora continua aplicadas al desarrollo de software, basadas en agentes 10:00 - 10:30 Autores: Rito Reyes Castillo, Sandra Nava-Munoz, Hector Perez Gonzalez (UASLP) Modelado de un JavaBean de busqueda mediante UML y su implantacion basada en Enterprise JavaBeans 10:30 - 11:00 Autores: Juan Carlos Jimenez Lezama, Maria del Rocio Boone Rojas, Maya Carrillo Ruiz, Beatriz Bernabe Loranca, Marco Antonio Soriano Ulloa (BUAP) 11:00 - 11:15 RECESO - CAFE Creando Matematicas Divertidas Empleando Metodologias de Usabilidad 11:15 - 11:45 Autores: Everth Rocha-Trejo, Francisco Hernandez-Reyes, Gabriel Geronimo-Castillo (UTM) Los Ninos y los PDAs: una Evaluacion de su Uso 11:45 - 12:15 Autores: Gabriel Geronimo-Castillo, G. Ivan Calvo-Larrumbe, Everth H. Rocha-Trejo (UTM) Explorando el Uso de Informacion Semantica en el Diseno de Sistemas Inteligentes de Control de Acceso 12:15 - 12:45 Autores: Grecia Garcia Garcia, Sergio Rajsbaum, Fengzhou Zheng (UNAM - PRINCETON) MoProSoft: pasado, presente y futuro 12:45 - 13:30 Invitada: Hanna Oktaba (UNAM) 13:30 - 15:30 COMIDA El proceso de desarrollo del programa de mejora UAMISoft 15:30 - 16:00 Autores: Humberto Cervantes Maceda, Alfonso Martinez Martinez (UAM) Material Didactico de Ingenieria de Software para Principiantes 16:00 - 16:30 Autores: Guadalupe Ibarguengoitia G. Hanna Oktaba (UNAM) Diseno e implementacion de un programa de Licenciatura en Ingenieria de Software 16:30 - 17:00 Autores: Francisco Madera Ramirez, Carlos Mojica Ruiz, Fernando Curi Quintal (UADY) Aplicacion de MoProSoft en una Dependencia Universitaria 17:00 - 17:30 Autores: Guadalupe Ibaguengoitia G., Matilde Moreno Bello C. (UNAM) 17:30 - 17:45 RECESO - CAFE 17:45 - 19:00 Mesa redonda y Conclusiones 18Taller 8. Sistemas Cooperativos Multimedia y Protocolos de Comunicacion Martes 27 de Septiembre Salon: Aula Magna Vasconcelos Horario Actividad 8:00 - 9:00 Registro Bienvenida Presentacion de objetivos y dinamica del taller 9:00 - 9:30 Dr. Martin Molina Espinosa Dr. Saul Pomares Hernandez Conferencia Magistral Intervals and the Happened-Before Relation in Distributed Systems 9:30 - 10:30 Dr. Saul Pomares HernandezCCC-INAOE 10:30-10:45 RECESO-CAFE Sesion de Ponencias Un enfoque distribuido para mejorar la coordinacion de los sistemas de workflow 10:45 - 11:10 Abdel Mejia1, Ana I. Martinez-Garcia1, Fernando Rojas21Dept. Ciencias de la Computacion, CICESE, 2CCMC, UNAM, Ensenada, A Model and Java Framework Approach to Build Web-based 3DCollaborative Virtual Environments 11:10 - 11:35 Rolando Menchaca Mendez, Leandro Balladares Ocana, Rolando Quintero Tellez, Chadwick Carreto ArellanoComputer Research Center of the National Polytechnic Institute Modelacion de usuarios 11:35 - 12:00 David Escarcega Centeno, Enrique David EspinosaTecnologico de Monterrey Campus Ciudad de Mexico 12:00 - 12:15 RECESO-CAFE Asesor de Conceptos de Negocios Electronicos Basado en Reglas 12:15 - 12:40 Enrique Espinosa, Martin Molina, Ernesto Pacheco, Manuel Cervantes & Erendida RubioTecnologico de Monterrey Campus Ciudad de Mexico, Computer Science Department Videoconferencia Multipunto a Traves del Java Media Framework 12:40 - 13:05 Luis Ivan Ramirez Corona, Hector Hernandez RodriguezTecnologico de Monterrey, Campus Ciudad de Mexico Designing medical support tools for collaborative learning 13:05 - 13:30 Enrique Espinosa, Julieta NoguezTecnologico de Monterrey, Campus Ciudad de Mexico 13:30 - 15:30 COMIDA Estandares para la Creacion de Sistemas de Computo de apoyo al AprendizajeColaborativo. 15:30 - 15:55 Victor Hugo Zarate Silva, David Enrique Gutierrez Gutierrez, Jesus Arturo Perez DiazDivision de Ingenieria y Ciencias, Departamento de Electronica.ITESM Campus Cuernavaca Preliminary Version of an Fault-Tolerant Causal Broadcast Algorithm tobe Applied to Unreliable Networks 15:55 - 16:20 Eduardo Lopez Dominguez, Jorge Estudillo Ramirez, Saul Pomares Hernandez Computer Science Department National Institute of Astrophysics, Optics and Electronics (INAOE) Modelo para la Creacion Adaptativa de Resumenes Video 16:20 - 16:45 Rafael Lozano Espinosa, Carlos Rodriguez LucateroTecnologico de Monterrey, Campus Ciudad de Mexico 16:45 - 18:30 Panel de Presentacion y Establecimiento de Proyectos o Presentacion de trabajos en desarrolloo Propuesta de proyectoso Formacion de grupos de investigacion. 18:30 Clausura 19Taller 9. Tecnicas de Deduccion y Razonamiento Automatico Martes 27 de Septiembre Sala de Juntas de VIEP HORA ARTICULO 8:00 - 10:00 Registro Juego de Domino para Cuatro Jugadores utilizando Agentes Artificiales 10:00 - 10:40 Martinez Carranza Jose, Munoz Melendez Angelica Extending PP language: An answer set planning problem language 10:40 - 11:20 Zepeda Claudia, Osorio Mauricio, Sol David, Christine Solnon Counting the Number of Models of a 2-CF Using Matrix Operators 11:20 - 12:00 Guillen Carlos, De Ita Guillermo, Lopez Aurelio 12:00 - 12:30 RECESO-CAFE Reductions between the Subgraph Isomorphism Problem and Hamiltonian and SAT 12:40 - 13:20 Olmos Ivan, Gonzalez, Jesus A., Osorio Mauricio Razonador Geometrico Aplicado al Caso del Tangrama Chino Simplificado 13:20 - 14:00 Eduardo Valdivia Garcia, Angelica Munoz Melendez, De Ita Guillermo Taller 10. Optimizacion y Metaheuristicas Martes 27 de Septiembre Salon: Paraninfo (Edif. Carolino) HORA ARTICULO 8:00 - 9:00 Registro Biparticion de Grafos con Redes de Hopfield 9:00 - 9:30 Alba Maribel Sanchez Galvez Programacion de la Produccion de un fiJob Shopfl Aplicando la heuristica GRASP 9:30 - 10:00 Maria de los Angeles Santiago Rodriguez Unifying Local and Exhaustive Search 10:00 - 11:00 J. N. Hooker 11:00 - 11:15 RECESO-CAFE Buffers Optimization in Assembly Lines 11:15 - 11:45 Igor S. Litvinchev A Genetic Multiobjective algorithm for the Flowshop Problem 11:45 - 12:15 Magdalena Bandala Una breve introduccion a la optimizacion evolutiva multiobjetivo 12:15 - 13:00 Carlos Coello On Semi-infinite programming problems 13:00 - 13:30 Jan-J Ruckmann 13:30 - 16:00 COMIDA Some Results with Scatter Search applied to Asymmetric TSP. 16:00 - 16:30 Enrique Rivera Introducing LS Interaction for Problems having the fiBig Valleyfl Structure 16:30 - 17:00 Everardo Gutierrez Meta-heuristics Applied to a Logistics Commercial Software 17:00 - 17:30 Erika Velazquez Dominguez Metaheuristica para el problema de asignacion cuadratica estocastico 17:30 - 18:00 Rogelio Gonzalez Velazquez 20ReConfig 05 OE International Conference on Reconfigurable Computing 28-30 September Salon Verde 2 (Edif Carolino) Wensday 28 September 8:00 - 9:00 Conference Registration 9:00 - 9:05 Opening Speech 9:05 - 10:45 Session 1 - Architectures 1. A Handel-C Implementation of the Back-Propagation Algorithm on Field Programmable Gate Arrays Vijay Pandya, Shawki Areibi and Medhat Moussa 2. Rapid Prototyping of a Self-Timed ALU with FPGAs Ortega-Cisneros S., Raygoza-Panduro J.J., Suardiaz Muro J., Boemo E. 3. An FPGA-based Parallel Sorting Architecture for the Burrows Wheeler Transform Jose Martinez, Rene Cumplido, Claudia Feregrino 4. Design and Implementation of an Embedded Microprocessor Compatible With IL Language in Accordance to the Norm IEC 61131-3 Snaider Carrillo L., Agenor Polo Z., Mario Esmeral P. 10:45 - 11:00 Coffee Break 11:00 - 12:00 Talk 1 Vision Sensors using FPGAs Gerardo Sosa, National Institute for Astrophisics, Optics and Electronics 12:00 - 12:15 Coffee Break 12:15 - 14:00 Session 2 - Architectures and Image Processing 1. Real-Time FPGA-Based Architecture for Bicubic Interpolation: An Application for Digital Image Scaling Marco Aurelio Nuno-Maganda, Miguel-O Arias-Estrada 2. An Image Comparison Circuit Design Miguel Angel Sanchez Martinez and Adriano De Luca Pennacchia 3. FPGA-Based Customizable Systolic Architecture for Image Processing Applications Griselda Saldana, Miguel Arias-Estrada 4. FPGA implementation of a synchronous and self-timed neuroprocessor Raygoza-Panduro J.J., Ortega-Cisneros S., Boemo E. 14:00 - 16:00 Lunch break 16:00 - 17:40 Session 3 - Arithmetic 1. An FPGA Arithmetic Logic Unit for Computing Scalar Multiplication using the Half-and-Add Method Sabel Hernandez-Rodriguez, Francisco Rodriguez-Henriquez 2. Hardware signal processing unit for one-dimensional variable-length discrete wavelet transformOrdaz-Moreno Alejandro, Romero-Troncoso Rene de Jesus, Vite-Frias Jose Alberto 3. VHDL Core for 1024-Point Radix-4 FFT Computation Vite-Frias Jose Alberto, Romero-Troncoso Rene de Jesus, Ordaz-Moreno Alejandro 4. FPGA Implementation of an efficient multiplier over finite fields GF(2^m) Mario Alberto Garcia-Martinez, Ruben Posada-Gomez, Guillermo Morales-Luna, Francisco Rodriguez-Henriquez 17:40 -18:00 Coffee Break 18:00 - 19:00 Keynote Speech 1 Reconciling Logic and Objects Robert Kowalski, Imperial College, UK 19:00 - 20:00 Official Opening 20:00 - 21:00 Toast and Cultural Event 21 Thursday 29 September 8:00 - 9:00 Conference Registration 9:00 - 9:05 Welcome Day 2 9:05 - 10:45 Session 4 - Reconfiguration 1. On the Design of Two-Level Reconfigurable Architectures Sebastian Lange, Martin Middendorf 2. A Secure Self-Reconfiguring Architecture based on Open Source Hardware Javier Castillo, Pablo Huerta, Jose Ignacio Martinez 3. Platform for Intrinsic Evolution of Analogue Neural Networks Patrick Rocke, John Maher, Fearghal Morgan 4. Dynamic Voting Schemes to Enhance Evolutionary Repair in Reconfigurable Logic Devices Corey J. Milliord, C. A. Sharma, R. F. DeMara 10:45 - 11:00 Coffee Break 11:00 - 12:00 Keynote Speech 2 High Performance Computing using Reconfigurable Hardware Viktor K. Prasanna, University of Southern California, 12: - 12:15 Coffee Break 12:15 - 14:00 Session 5 - Physical Design 1. Design Space Exploration of Coarse-Grain Reconfigurable DSPs Martin Zabel, Steffen Kohler, Martin Zimmerling, Thomas B. Preusser, Rainer G. Spallek 2. Optimizing Register Binding in FPGAs Using Simulated Annealing Annie Avakian, Iyad Ouaiss 3. Hierarchical FPGA clustering based on a multilevel partitioning approach to improve routability and reduce power dissipation Zied Marrakchi, Hayder Mrabet, Habib Mehrez 4. A novel FPGA Implementation of a Welding Control using a new Bus Architecture Rauma K., Luukko J. , Harkonen T., Pajari, I. and Pyrhonen O. 14:00 - 16:00 Lunch break 16:00 - 17:40 Session 6 - Tools 1. High quality uniform random number generation for massively parallel simulations in FPGAs David Thomas, Wayne Luk 2. VANNGen: a Flexible CAD Tool for Hardware Implementation of Artificial Neural Networks Andre Braga, Carlos Humberto Llanos, Mauricio Ayala-Rincon, Ricardo P. Jacobi 3. Quartz: A Framework for Correct and Efficient Reconfigurable Design Oliver Pell, Wayne Luk 4. Applied VHDL Training Methodology, EDA Framework and Hardware Implementation Platform Fearghal Morgan, Patrick Rocke, Martin O'Halloran 17:40 -18:00 Coffee Break 18:00 - 19:00 Keynote Speech 3 Model Construction of Nonrigid Biological Objects from Images Dmitry Goldgof, University of South Florida 20:30 Dinner Friday 30 September 9:00 - 9:05 Welcome Day 3 9:05 - 10:45 Session 7 - Signal Processing 1. On the design of an FPGA-Based OFDM modulator for IEEE 802.16-2004 Joaquin Garcia, Rene Cumplido 2. FPGA Implementation of DSVPWM Modulator Ossi Laakkonen, Hannu Saren, Kimmo Rauma, Olli Pyrhonen 3. An FPGA-based Coprocessor for the SPHINX Speech Recognition System: Early Experiences Guillermo Marcus, Juan A. Nolazco-Flores 4. Hardware/Software implementation of a Discrete Cosine Transform Algorithm Using SystemC A. Avila, R. Santoyo, S. O. Martinez, G. Dieck 10:45 - 11:00 Coffee Break 11:00 - 12:00 Keynote Speech 4 Automatic Natural Language Processing: Problems, Ideas and Methods (in Spanish) Alexander Gelbuck, IPN Mexico 13:30 - 14:00 ENC / ReConFig Closing Toast and Awards 22ENC 05 OE Mexican International Conference on Computer Science 28-30 September Edificio Carolino Wednesday, Sept. 28 8:45 - 9:00 AM Conference Registration 9:00-10:40 AM Projection Room (Sala de proyecciones) - User interaction and collaboration I Paraninfo Room - Algorithms for Applications 1.- A Probabilistic Relational Student Model for Virtual Laboratories Julieta Noguez, Enrique Sucar 2.- Flexible distribution support for co-authored Web documents Sonia Mendoza, Alberto L. Moran, Dominique Decouchant, Ana M. Martinez 3.- A web-based system to facilitate elders communication with their families living abroad Pedro C. Santana, Marcela D. Rodriguez, Victor M. Gonzalez, Luis A. Castro, Angel G. Andrade, Jesus Favela 1.- Optimal Artificial Chemistries and Metabolic Pathways Liliana Felix, Francesc Rossello, Gabriel Valiente 2.- Feedback Scheduling of Power-Aware Soft Real-Time Tasks Alberto Soria-Lopez, Pedro Mejia-Alvarez, Julio Cornejo 3.- Shape-Based Averaging for Craniofacial Anthropometry J. Marquez Flores1, I. Bloch, T. Bousquet, F. Schmitt, C. Grangeat 10:40 - 11:00 AM Coffee Break 11:00 - 12:00 PM 1er Patio Carolino -Poster session 12:00 - 12:20 PM Coffee Break 12:20 - 2:00 PM Projection Room (Sala de proyecciones) - User interaction and collaboration II Paraninfo Room - Agents 1.-Vowel & Diphthong Tutors for Language Therapy Ingrid Kirschning, Ma. Teresa Toledo, Lydia E.Valadez, Dora Canizales 2.-Visualizing Digital Library Collection Structures with Fractal Trees TeongJoo Ong, John J. Leggett, Unil Yun 3.-Collision Detection Algorithm for Soft Tissue Deformable Models M. A. Padilla Castaneda, F. Arambula Cosio 1.- Inferring acceptable arguments with Answer Set Programming Juan Carlos Nieves, Mauricio Osorio, Claudia Zepeda, Ulises Cortes 2.- Implementing Real Multicast Communications Support for the JADE/LEAP Agent Framework Adrian Macias, Oscar I. Lepe, J. Antonio Garcia M. 3.-Agent Modelling for CSCL Environments using Answer Sets Programming Gerardo Ayala, Magdalena Ortiz, Mauricio Osorio 2:00- 4:00 PM Lunch break 4:00-5:40 PM Projection Room (Sala de proyecciones) - Software engineering Paraninfo Room - Applications of neural networks 1.- Software Development Effort Estimation Using Fuzzy Logic: A Case Study Cuauhtemoc Lopez Martin, Jerome Pasquier Leboeuf, Cornelio Yanez M., Agustin Gutierrez T. 2.- Using Alloy to model-check visual design notations Anthony J. H. Simons, Carlos Alberto Fernandez y Fernandez 3.- Software Development Using Agile Methodologies: An Airline Case Jorge Alberto Perez Torres, Marcelo Mejia Olvera 1.- Continuous Tracking of User Location in WLANs Using Recurrent Neural Networks Luis A. Castro, Jesus Favela 2.-Learning and approximantion of chaotic time series using wavelet networks V. Alarcon-Aquino, E. S. Garcia-Trevino, R. Rosas-Romero, J. F. Ramirez-Cruz 3.-Fusion center based on neural networks for target detection in background clutter Santos Lopez-Estrada, Rene Cumplido 5:40 -6:00 PM Coffee Break 6:00 - 7:00 PM Baroque Room (Salon Barroco) - Keynote Speech 1 Reconciling Logic and Objects Robert Kowalski, Imperial College, UK 7:00 - 8:00 PM Oficial opening - Baroque Room (Salon Barroco) 8:00 - 9:00 PM Toast and cultural event (Primer Patio Edif. Carolino) 23 ENC 05 Thursday, Sept. 29 8:45 - 9:00 AM Conference Registration 9:00-10:40 AM Preparatoria Zapata Auditorium - Data, Information and Knowledge Management I Verde-1 Room - Image Processing I 1.- Combining Structural and Textual Contexts for Compressing Semistructured Databases Joaquin Adiego, Pablo de la Fuente, Gonzalo Navarro 2.- SKIMA: Semantic Knowledge and Information Management Perez-Urbina Hector, Bruno Gennaro, Genoveva Vargas-Solar 3.- Data Preprocessing by Sequential Pattern Mining for LZW Compression Osslan Osiris Vergara Villegas, Rene Arnulfo Garcia Hernandez, Jose Fco. Martinez Trinidad, Raul Pinto Elias, Jesus Ariel Carrasco Ochoa 1.- Segmentation, Reconstruction and Visualization of the Pulmonary Artery and the Pulmonary Vein from Anatomical Images of the Visible Human Project Jorge Marquez Flores, Francis Schmitt 2.- 3D Recovery with Free Hand Camera Motion Gerardo Sosa-Ramirez, Miguel Arias-Estrada 3.- Basis Pursuit based algorithm for intra-voxel recovering information in DW-MRI. Alonso Ramirez-Manzanares, Mariano Rivera 10:40 - 11:00 AM Coffee Break 11:00 - 12:00 PM Baroque Room (Salon Barroco) - Keynote Speech 2 High Performance Computing using Reconfigurable Hardware Viktor K. Prasanna, University of Southern California, 12:00 - 12:20 PM Coffee Break 12:20 - 2:00 PM Preparatoria Zapata Auditorium - Data, Information and Knowledge Management II Verde-1 Room - Image Processing / Learning 1.- Exploiting bitemporal schema versions for managing an historical medical data warehouse: A case study Maria Trinidad Serna Encinas, Michel Adiba 2.- Automatic Generation and Publication of Web Services for the Integration and Access to Distributed DBMS Data Sources Luiz Gonzalez Escalante, Alejandro Botello Castillo, Leandro Balladares Ocana 3.- Reliability Evaluation of Web-Based Software Applications Leticia Davila Nicanor, Pedro Mejia Alvarez 1.- Cervical Cancer Detection Using Colposcopic Images: a Temporal Approach. Hector Gabriel Acosta-Mesa, Barbara Zitova, Homero Vladimir Rios-Figueroa, Antonio Marin-Hernandez, Nicandro Cruz-Ramirez 2.- Super-resolution with integrated radial distortion correction Liz Castillo-Jimenez Miguel Arias-Estrada 3.- A Parsimonious Constraint-based Algorithm to Induce Bayesian Network Structures from Data Nicandro Cruz-Ramirez, Luis Nava-Fernandez, Hector Gabriel Acosta-Mesa, Erandi Barrientos-Martinez, Juan Efrain Rojas-Marcial 2:00 - 4:00 PM Lunch break 4:00-5:40 PM Preparatoria Zapata Auditorium - Technologies for distributed systems Verde-1 Room - Robotics 1.- A New Scheme for Simple Geographic Internet Mapping in Mexico Edmar Mota Garcia, Rogelio Hasimoto Beltran 2.- An ECMAScript compiler for the .NET framework Cesar Octavio Lopez Nataren 3.- A cooperative distribution protocol for video-on-demand Jehan-Francois Paris 1.- Robust Local Localization of a Mobile Robot Using a 2-D Laser Range Finder Leonardo Romero and J. Jesus Arellano 2.- A MATLAB Toolbox for Robotic Manipulators D.N. Vila-Rosado, J.A.Dominguez-Lopez 5:40 -6:00 PM Coffee Break 6:00 - 7:00 PM Baroque Room (Salon Barroco) - Keynote Speech 3 Model Construction of Nonrigid Biological Objects from Images Dmitry Goldgof, University of South Florida 7:00 - 8:00 PM Preparatoria Zapata Auditorium - Discussion Panel 1 (in Spanish) Verde-1 Room - SMCC Annual Meeting Oportunidades de Negocios: de la A a la Z de las empresas de computo 8:30 PM Dinner for ENC/ReConFig Authors 24 ENC 05 Friday, Sept. 30 8:45 - 9:00 AM Conference Registration 9:00-10:40 AM Projection Room - Security and privacy / society and organizations Verde-1 Room - Optimization using Heuristics and Instance Generation 1.- An Improved e-Voting Protocol for Medium Scale Online Elections Claudia Garcia-Zamora, Francisco Rodriguez-Henriquez, Daniel Ortiz-Arroyo 2.- Supporting Quality of Privacy (QoP) for Pervasive Computing Monica Tentori, Jesus Favela, Victor M. Gonzalez, Marcela Rodriguez 3.- Training Entrepeneurs During Corporate Assessment Enrique Espinosa, Martin Molina, Ernesto Pacheco, Manuel Cervantes & Erendida Rubio 1.- Hard Problem Generation for MKP Maria A. Osorio, German Cuaya 2.- Saving Evaluations in Differential Evolution for Constrained Optimization Efren Mezura-Montes, Carlos A. Coello Coello 3.- Particle Evolutionary Swarm Optimization (PESO) Angel E. Munoz Zavala, Arturo Hernandez Aguirre, Enrique R. Villa Diharce 10:40 - 11:00 AM Coffee Break 11:00 - 12:00 PM Projection Room - Keynote Speech 4 (in Spanish) Automatic Natural Language Processing: Problems, Ideas and Methods Alexander Gelbukh, CIC-IPN, Mexico 12:00 - 12:15 PM Coffee Break 12:15 - 1:30 PM Projection Room - Discussion Panel 2 (in Spanish) Lo que usted siempre quiso saber de los estudios de Posgrado y no se atrevio a preguntar 1:30 - 2:00 PM ENC / ReConFig Closing Toast and Awards Mapas de ubicacion / Location Maps Ver tambien mapa en pagina 6 / Also see map in page 6 ENLI 2006 El Encuentro Nacional de LINUX ENLI 2006, se realizo los dias 19, 20 y 21 de Octubre de 2006 en las Instalaciones de la Universidad Popular Autonoma del Estado de Puebla UPAEP. La logistica y organizacion del evento estuvo a cargo del Grupo de Usuarios LINUX Puebla (GULP) de la Facultad. El objetivo es aglutinar en una comunidad a todos aquellos interesados en el uso y estudio del sistema operativo GNU/LINUX y otras alternativas de desarrollo en Open Source. El encuentro oferto treinta y cuatro conferencias, nueve talleres y tres conferencias magistrales Dentro de los talleres impartidos encontramos: Como sobrevivir en una consola Linux Instalacion y configuracion de Asterisk Programacion Perl Primeros Pasos PHP Avanzado Ruteador de llamadas en PHP con Asterisk Desarrollo web con PHP, MySQL, Smarty, Adobd y Subversion Como sobrevivir en una consola Linux 2 Tecnicas de modelado 3D bajo Blender Servidor de terminales tontas (o tal vez inteligentes) La asistencia al ENLI 2006 fue de 500 participantes de diferentes instituciones. Felicito a los alumnos organizadores del evento ENLI 2006. FLISOL 2007 El pasado 28 de Abril de 2007, la Facultad de Ciencias de la Computacion fue la sede del 3er. Festival Latinoamericano de Instalacion de Software Libre (FLISOL), que es uno de los eventos de difusion sobre la instalacion de software libre mas grande en Latinoamerica. Es importante resaltar que, dicho festival se realizo en diferentes estados de la republica y en 15 paises de Latinoamerica simultaneamente. Este festival de instalacion de software, fue de entrada libre y estuvo organizado por alumnos de la Facultad, los cuales pertenecen al grupo Linux Puebla (GLP). David Flores Velazquez Jorge Angel Robles Monterrosas Javier Galicia Gonzalez Isaac Irak Torres Diaz Ivan Vargas Carrasco En el evento se impartieron diversas conferencias tales como: -Filosofia del software libre -FreeBSD -Ya tengo Linux y ahora que! -Beryl Window Manager -Gnome desktop -Debian -Fedora Core 6-Linux ante otros S. O. -Servidores Web. El evento tuvo la asistencia de alrededor de 150 participante de diferentes universidades e instituciones. Segundo Congreso FCC, 2004 SEGUNDO CONGRESO NACIONAL DE CIENCIAS DE LA COMPUTACION DEL 8 AL 12 DE NOVIEMBRE DE 2004. INFORME Dra. Lourdes Sandoval Solis Este Segundo Congreso Nacional de Ciencias de la Computacion, organizado por la Facultad de Ciencias de la Computacion de la Benemerita Universidad Autonoma de Puebla, se realizo del 8 al 12 de Noviembre en las instalaciones de la Facultad y en el Auditorio de la Facultad de Ingenieria. Este evento tuvo principalmente las siguientes actividades: CONFERENCIAS INVITADAS TUTORIALES CONCURSO PRESENTACION DE TRABAJOS EVENTOS CULTURALES Se impartieron 16 conferencias de profesores investigadores de otras instituciones, 10 tutoriales, concursaron 18 proyectos y se presentaron en simultaneas 76 trabajos arbitrados y se llevaron a cabo cinco eventos culturales. Participaron como asistentes mas de 400 alumnos de la Facultad de Ciencias de la Computacion. CONFERENCIAS INVITADAS Se invitaron a investigadores de las siguientes instituciones Instituto Tecnologico de Rochester, NY, U.S.A. Universidad de Minnesota Duluth,U.S.A. Universidad Autonoma de Aguascalientes Universidad Autonoma de Guerrero Universidad de Guanajuato Universidad de las Americas. Instituto Tecnologico de Puebla Instituto Nacional de Astrofisica, Optica y Electronica Universidad Nacional Autonoma de Mexico CINVESTAV UPPICSA-IPN Los profesores organizadores de las conferencias invitadas son: Dra. Maria J. Somodevilla Garcia Dra. Maria Auxilio Osorio Lama Dra. Darnes Vilarino Ayala M.C. Elsa Chavira Martinez Dr. Abraham Sanchez Lopez Dr. Ivo Humberto Pineda Torres Parte de los viaticos fue financiado por el programa PIFOP. Programacion de Conferencias Invitadas 1 Segundo Congreso FCC, 2004 TUTORIALES Se ofertaron diez tutoriales. La responsable de la organizacion y coordinacion de los tuoriales fue la Dra. Darnes Vilarino Ayala. Algunos de los tutoriales fueron impartidos por profesores de nuestra facultad. M.C. Jose de Jesus Lavalle Martinez M.C. Esteban Torres Leon Dra. Barbara Emma Sanchez Rinza Dra. Maria J. Somodevilla Garcia Programacion de Tutoriales CONCURSO Se presentaron al concurso 18 trabajos y los premios los otorgaron la Vicerrectoria de Investigacion y Estudios de Postgrado, Consejo Estatal de Ciencia y Tecnologia, y el proveedor Emilio Camargo. Las responsables de la organizacion fueron las profesoras M.C. Maya Carrillo Ruiz y la Lic. Rocio Boone Rojas.Como jurados fungieron los profesores Dra. Fabiola Lopez y Lopez Dr. Abraham Sanchez Lopez Dr. Ivo Humberto Pineda Torres M.C. Yalu Hernandez Galicia M.C. Beatriz Beltran Martinez M.C. David Eduardo Pinto Avendano Programacion del Concurso Premiacion del Concurso PRESENTACION DE TRABAJOS El Comite Academico formado por los investigadores de nuestra facultad: Dr. Manuel Martin Ortiz Dr. Manuel Rubin Falfan Dr. Pedro Garcia Juarez Dr. Hector Jimenez Salazar Dr. Miguel Angel Leon Chavez Reviso y aprobo 76 trabajos presentados por alumnos y profesores de la FCC, Departamento de Semiconductores, Escuela de Biologia, Departamento de Investigaciones Agricolas, Facultad de Ciencias de la Electronica, dependencias de nuestra universidad, INAOE, Universidad Tecnologica de la Mixteca, UPAEP, Instituto Tecnologico de Puebla, Instituto Tecnologico de Tehuacan, Universidad de Granada, Universidad de Nueva Orleans, CINVESTAV, etc. Ademas se publicaran las memorias en un libro con ISBN 968 863 798 x Como moderadores en las presentaciones simultaneas participaron profesores de nuestra facultad, como: Lic. Yolanda Encarnacion Ramirez M.C. Yalu Hernandez Galicia M.C. Sully Sanchez Galvez M.C. Beatriz Beltran Martinez Dra. Barbara Sanchez Rinza 2 Segundo Congreso FCC, 2004 M.C. Laura Cuayahuitl Lic. Jose Luis Meza M.C. Rogelio Gonzalez Velasquez M.C. Guillermo Gonzalez M.C. Mariano Larios M.C. Rafael De la Rosa Dr. Manuel Martin Ortiz Estadistica de Autores por institucion Trabajos Presentados EVENTOS CULTURALES La M.C. Alba Maribel Sanchez Galvez organizo y coordino los eventos culturales del congreso: Lunes se presento en la explanada de la facultad el Conjunto Jazz Saboy Martes un concierto de guitarra Jueves un concierto de clarinete Viernes un concierto de Musica Andina Ademas de expuso den el vestibulo del Auditorio de la Facultad de Ingenieria una exposicion de Fotografia. El miercoles 10 de noviembre se presentaron tres robots realizados por estudiantes de la Facultad de Ciencias de la Electronica y que ganaron el primero, segundo y tercer lugar del concurso COCOBOTH,los robots que se exhibieron fueron, el buho, la catrina y la llorona. El jueves se presento el DVD de las entrevistas a los fundadores del Programa Educativo de Computacion en la BUAP, dirigido por el Dr. Manuel Martin. Ademas de relizar la compra de regalos a los conferencistas invitados y expositores de tutoriales, en este caso fue un reloj de Talavera de origen. DIFUSION Se realizo difusion del evento a traves de carteles, mantas, mamparas, periodico, radio y television, apoyados por Radio BUAP, y la Direccion General de Comunicaciones Programacion de radio y TV La pagina web la realizo el Lic. Miguel Pena Azpiri y los logos y carteles, mantas, tripticos la Lic. Maria Guadalupe Romero Vazquez APOYO LOGISTICO Se organizaron varias unidades de apoyo logistico con actividades bien definidas 1. Inscripciones Coordinadora Lic. Ma. del Consuelo Molina Garcia 15 estudiantes que cubrieron la inscripciones durante tres semanas y entrega de material la semana del congreso. 2. Equipo e Infraestructura Coordinadora: M.C. Alma Delia Ambrosio 3 Segundo Congreso FCC, 2004 Prepararon el material y equipo, para conferencias, tutoriales, brindis, eventos culturales y cafe galletas. Mantenimiento de las instalaciones, cinco estudiantes y los trabajadores no academicos. 3. Apoyo a Tutoriales Coordiadora: Dra. Darnes Vilarino Ayala Instalaron el Software necesario para cada tutorial, copiaron el material que entregaron los profesores para su tutorial. Apoyo tecnico en cada modulo por cuatro estudiantes y en el Auditorio por dos estudiantes. Y doce estudiantes en el apoyo tecnico de presentaciones simultaneas. 4. Edecanes Tres estudiantes 5. Apoyo a difusion e informacion Siete estudiantes 6. Apoyo a la organizacion Siete alumnos 7. Grabacion y apoyo tecnico en el auditorio de la Facultad de Ingenieria Diecisiete estudiantes En total participaron 86 estudiantes en las diferentes actividades. INFORME FINANCIERO Ingresaron Por concepto de inscripciones $79,300.00, desglozados de la siguiente forma: Conferencias 70 de $200.00 c/u $14,000.00 Tutoriales 157 de $300.00 c/u $47,100.00 Presentacion 40 de $400.00 c/u $16,000.00 (*) Presentacion 11 de $200.00 c/u $ 2,200.00 (*) Algunos profesores de la Facultad pagaron el 50% de la inscripcion de su trabajo, porque apoyaron al evento Egresaron $ 128,860.76 Carpetas $ 34,500.00 Brindis $ 10,500.00 Gastos varios ,mantas, mamparas, $ 13411.31 Obsequios a conferencistas $ 4,657.00 Viveres cafe,galletas,papel sanitario, liquidos de limpieza $ 9,127.00 Viaticos para conferencistas (hospedaje,transporte, comidas ) $ 18,041.40 Copias de Programas y material de tutorial y material de papeleria $ 6,156.00 Discos CD, etiquetas, camara de video, access point $32,468.05 Presupuestado $ 60,000.00 + ingreso $79,300.00 = $139,300.00 - Egresos = $128,860.00 Saldo a favor = $ 10,440.00 4 Anexo6c1HORAMIERCOLES 23 DE NOVIEMBREJUEVES 24 DE NOVIEMBREVIERNES 25 DE NOVIEMBREPONENCIAAUTOR (ES)PONENCIAAUTOR (ES)PONENCIAAUTOR (ES)9:00 - 9:20Aplicaciones, Herramientas y Desarrollo de las redes de PetriCesar Romano Meneses, Maria del Rocio Boone Rojas, Beatriz Bernabe Loranca, Maya Carrillo Ruiz, Marco Antonio Soriano Ulloa OpticBarbara E. Sanchez Rinza, Raul Jaramillo Mendoza, Alberto Jaramillo MendozaComparacion de los Resultados Obtenidos en dos Ponderaciones para el Modelo de Espacio Vectorial de Recuperacion de Informacion.Rubi J. Cabrera, Darnes Vilarino Ayala, Hector Jimenez Salazar9:20 - 9:40Automatizacion de un brazo Mecanico guiado por Vision ArtificialAlfredo Toriz Palacios, Esteban Torres Leon.Performance Analysis of the Confidentiality and Authentication Security Services in the IEEE 802.11 using ECCM. Leon and R. AldecoEstandares en el Aprendizaje ElectronicoJuan Leobardo Priego Melendez, Fabiola Lopez y Lopez9:40 - 10:00Clasificacion de suelos forestales de la Sierra Norte de Puebla por el procesamiento de discriminacion del vecino mas cercanoGladys Linares Fleites, Miguel A. Valera Perez, Ma. De Lourdes Sandoval Solis, Josefina Cervantes VargasRed Neuronal Artificial para reconocimiento de digitos usando Xilinx System Generador y una tarjeta FPGA Spartan -3J.C. Moctezuma, A. Sanchez Tenorio, A. Tenorio, S. Sanchez.Estudio de Simulacion para la Comparacion de Diferentes Enfoques de Estimacion de coeficientes del Modelo de Regresion Logistica BinarioGladys Linares Fleites10:00 - 10:20Comparacion de funciones lineales discriminantes parametricas y no parametricas en el estudio del Estado de Degradacion de Agrosistemas Cafetaleros de la Sierra Norte de Puebla.Gladys Linares Fleites, Jose Antonio Ticante RoldanRedes TTCAN en unidades AutomotricesEdgar Fabian Hernandez VenturaFMBR GRID: TECNICA DE INDEXADO PARA REGIONES DIFUSASPinto Lopez, Ingrid Nineth, Somodevilla Garcia Ma. Josefa, Pineda Torres Ivo H.10:20 - 10:40Desarrollo de un Software para la Simulacion del Pulido ClasicoGonzalez Garcia J.,Vera Diaz E., Santiago Alvarado A., Hernandez Velasco A., Cordero Davila A.Sistema basado en instrumentacion virtual para el analisis de actividad alternante muscular presente en la locomocion (Octubre 2005)Alonso Natividad R., Francisco Lazaro A., Cid Garcia S., Martin Ortiz M., Valencia Exig J.Frecuencia de Terminos como indicado de la importancia de TerminosBeltran M.B., Vazquez F.J.A, Pinto A. D., Jimenez S. H.10:40 - 11:0011:00 - 11:20Desarrollo de una aplicacion PDA's con sistema operativo palmOS utilizando tecnologia de software libreLSC. Miguel Alberto Benito Salazar, LSC. Jesus Gabriel Yedra Merodio, M. en C. Francisco LeonSistema de agentes para el manejo de la consistencia de archivosAlma Delia Margarita Meza Velasquez, Fabiola Lopez y Lopez11:20 - 11:40Digitalizacion de Mastografias con correccion de luzIng. Sabino Moxo Beatriz Adriana, Dr. Manuel Martin ortizSistema de ensenanza de la materia Programacion Basica en Web (2005)Marco Miguel Angel Sanchez Chang, Eugenia E. Vera Cervantes, Ma. Del Carmen Ceron Garnica.C A L E N D A R I O Interface Matching and Combining Techniques for Services IntegrationFrederic Le Mouel, Noha Ibrahim, Stephane FrenotAuditorio FCCENTRADA LIBRE Anexo6c111:40 - 12:00Diseno y construccion de un robot limpiador acuaticoRincon-Suarez, L.G., Hernandez, G. Trinidad-Garcia, M. Rubin-FalfanSistema de monitoreo y control remoto de camaras de refrigeracionBarbara Emma Sanchez Rinza, Juan Antonio Ramirez Moran.12:00 - 12:20Diseno y Construccion de un robot modular apodoE. Alarcon, M. Rubin, A, Munoz, H. Juarez, T. Diaz, E. RosendoSistema Web como apoyo a las tutorias (SWAT)Eugenia Erica Vera CervantesHacia la implementacion de organizaciones jerarquicasLuis Erasmo Montealegre Vazquez, Fabiola Lopez y Lopez12:20 - 12:40Diseno y Construccion de un tablero para jugar ajedrez con la PC.Alejandro de Gante Mendez, Apolonio Ata Perez, Juan Carlos MoctezumaSoftware para hallar transmisividad de sistemas multibarreras cuanticas parabolicas y Gaussianas por el metodo de la Matriz de TransferenciaMiguel Angel Vargas Lomeli, Manuel isidro Martin OrtizOntologias para la Web SemanticaAngeles Siboney Bautista Lopez, Fabiola Lopez y Lopez12:40 - 13:00Diseno y Desarrollo de un simulador de Consumo de Oxigeno en la Germinacion de SemillasReyes Lizalde Arturo, Silva Gomez Adriana Berenice, Perez Bonilla Ma. Eugenia.Tecnologia Active Server pages (ASP) aplicada a la Evaluacion del proceso ensenanza OE aprendizaje de la Educacion Media SuperiorJose de Jesus Torres Aldeco, Ma. Del Carmen Ceron GarnicaPerformance Analysis of the Confidentiality Security Services in the IEEE 802.11 using AES-CCMS. Merino and M. Leon 13:00 - 15:0015:00 - 15:20Generacion de Escenarios con Conglomerados mediante S-PLUSMeliza Contreras Gonzalez, Gladys Linares FleitesThe IEEE Std. 1625 for Portable Computing: Assessing Environmental ImpactJose Ignacio Castillo Velazquez, Ismael Daza VelazquezPropuesta de Metodologia para Acceso y Procesamiento de Datos Espaciales utilizando R+ tres y Logica DifusaRamos Cruz Hugo, Somodevilla Garcia Ma. Josefa, Pineda Torres Ivo H.15:20 - 15:40Hacia la Administracion de Derechos Digitales (DRM) de Objetos de Aprendizaje (OA)Fabiola Serna Hernandez, Fabiola Lopez y LopezTutorial con evaluacion sobre la Web de satelites de orbita media que trabaja en dos plataformas linux y WindowsBarbara Emma Sanchez Rinza, Itzel Sanchez.Servicios Web una Tecnologia de Soporte para Arquitecturas Orientadas a ServicioGuillermina Sanchez Roman, Fabiola Lopez y Lopez15:40 - 16:00Hacia la Implementacion de Agentes para la Competencia TAC Classic 2006Eber Jair Flores Andonegui, Darnes Vilarino Ayala, Fabiola Lopez y Lopez, Patricia E. Benavides Muratalla, Eric Jimenez FuentesUna aplicacion de los mapas auto OE organizativos de Kohonen, en estudio de la actividad de sustancias anti OE retrovirales (VIH)Juan Carlos Morales AragonSistema para el conteo de modelos de una 2-Forma Conjuntiva usando arboles libresMireya Tovar Vidal, E. Erica Vera Cervantes.16:00 - 16:20Identificacion de Zonas Desmineralizadas en la Superficie del Esmalte Dental por medio del APDSEDCortez Italo J., Caldera Miguel J., Ramirez Popo Jesus A., Cortez Liliana, Gonzalez Flores M., Flores Maldonado MayeliSistemas Inteligentes de Transporte. Una aplicacion para mejorar el control vial.Adriana Nava AguilarSolucion del problema binario con condiciones adicionales usando algoritmos geneticos en paraleloBrenda I. Ruvalcaba, Darnes Vilarino Ayala, Mireya Tovar Vidal16:20 - 16:40Implementacion Hardware de Funciones de Transferencia para Redes NeuronalesS. Sanchez, J. C. Moctezuma, Apolonia Ata, A. Sanchez.A Methodological Approach to Parallel programming Based on High Level Parallel CompositionsMario Rossainz Lopez, Manuel Capel TunonTecnicas para identificacion de frases claveFernando Perez Tellez, David Pinto Avendano16:40 - 17:00Metodologia para un trazado Cefalometrico por ComputadoraEspinosa Arcos Heidi, Pineda Torres Ivo H., Somodevilla Garcia Ma. Josefa.Algebraic Structures Applied for Determining the Configurations in the n-Dimensional Orthogonal Pseudo-PolytopesYaxal Arenas, Ricardo Perez AguilaTiancalli: An Agent for the Supli Chain Management Game 2005Daniel Macias Galindo, Darnes Vilarino Ayala, Fabiola Lopez y LopezCONCURSO DE CARTELES VIERNES, 25 DE NOVIEMBRE, PARTICIPANTES, ESTUDIANTES DEL CURSO DE DISCIPLINA COMPUTACIONALAuditorio FCCENTRADA LIBRE PROGRAMA LUNES 6 DE NOVIEMBRE Inauguracion 9:30 Auditorio de la Facultad de Ingenieria Conferencias Auditorio de la Facultad de Ingenieria 1. Modelizacion y Diseno de Controladores Robustos para la Estabilizacion de Vehiculos aereos multi-rotor. Dr. Sergio Salazar Cruz Universite de Technologies de Compiegne, Francia 2. Tecnicas de Aproximacion en el Estudio del Analisis Numerico Prof. J. Douglas Faires Department of Mathematics and Statistics Youngstown State University 3. Robotic competitions: The Intelligent Ground Vehicle Competition (IGVC) Ph.D. Rocio Alba-Flores Electrical Engineering Technology Department, State University of New York Inicio de Cursos-Talleres 1. An Introduction to Modern Technical Document Preparation using \LaTeX. Prof. J. Douglas Faires Department of Mathematics and Statistics Youngstown State University Lunes y Martes 16:00 a 18:00 horas Auditorio de la Facultad de Ciencias de la Computacion. 2. Implementaciones Computacionales para Busqueda Dispersa Dr. Jose Luis Gonzalez Velarde Instituto Tecnologico de Monterrey Campus Monterrey Lunes 6 y Martes 7 de Noviembre 16 a 18 horas Salon de Usos Multiples (ex Modulo3) 3. Signal and image processing techniques applied to the detection and classification of heart sounds. Ph.D. Rocio Alba-Flores Electrical Engineering Technology Department, State University of New York Lunes 6, MArtes 7 y Miercoles 8 de Noviembre de 14:00 a 17:00 Modulo1 4. Desarrollo De Aplicaciones Paralelas Utilizando MPI Dra. Darnes Vilarino Ayala Lic. Aquiles Jose Manuel Miron Enriquez FCC-BUAP Lunes 6 a Viernes 10 de Noviembre de 9:00 a 13 horas. Laboratorio de Base de Datos. 5. Prolog M.C. Marcela Rivera Rodriguez FCC-BUAP Lunes 6 a Viernes 10 de Noviembre de 11:00 a 14 horas. Laboratorio de Educacion Continua. 6. PALMs: Una alternativa para el control de dispositivos M.C. Jose Esteban Torres Leon FCC-BUAP Lunes 6 a Jueves 9 de Noviembre de 17:00 a 20:00 horas. Laboratorio de Hardware 7. Java Swing M.C. Mariano Larios Gomez FCC-BUAP Lunes 6 a Viernes 10 de Noviembre de 16:00 a 20:00 horas. Laboratorio de Educacion Continua. MARTES 7 DE NOVIEMBRE Conferencias Auditorio de la Facultad de Ingenieria 1. Ambiente Inteligente para la Integracion de Mineria de Datos y Sistemas de Apoyo a la Toma de Decisiones Dra. Ofelia Cervantes Universidad de las Americas, Puebla Martes 7 de Noviembre de 2006 a las 10 :00 horas 5. Busqueda Dispersa para el problema de Diseno de Redes Multiproducto de Capacidad Finita Dr. Jose Luis Gonzalez Velarde Instituto Tecnologico de Estudios Superiores de Monterrey Campus Monterrey Martes 7 de Noviembre de 2006 a las 11 :00 horas Inicio de Cursos-Talleres 1. Diseno de Bases de Datos Relacionales M.C. Alma Delia Ambrosio Vazquez FCC-BUAP Martes 7 a Viernes 10 de Noviembre de 9:00 a 13:00 horas. Salon Usos Multiples (ex_modulo 3) MIERCOLES 8 DE NOVIEMBRE Exposicion de trabajos en el Auditorio de la Facultad de Ciencias de la Computacion de 9:00 a 19:00 horas JUEVES 9 DE NOVIEMBRE Exposicion de trabajos en el Auditorio de la Facultad de Ciencias de la Computacion de 9:00 a 19:00 horas VIERNES 10 DE NOVIEMBRE Exposicion de trabajos en el Auditorio de la Facultad de Ciencias de la Computacion de 9:00 a 19:00 horas Inicio de Cursos-Talleres 1. Cryptographic Algorithms on Reconfigurable Hardware Dr. Francisco Rodriguez Henriquez Centro de Investigacion y Estudios Avanzados, I.P.N. Viernes 10 de Noviembre de 16 a 20 horas Laboratorio de Hardware EXPOSICION DE EQUIPO Y LIBROS DE COMPUTO. Lunes 6 al viernes 10 de Noviembre de 2006. De 10:00 a 18:00 horas. DIRECTORIO Mtro. Enrique Aguera Ibanez Rector Benemerita Universidad Autonoma de Puebla Dr. Jose Ramon Eguibar Cuenca Secretario General Benemerita Universidad Autonoma de Puebla M.C. Maria del Carmen Santiago Diaz Directora Facultad de Ciencias de la Computacion Mtro. Marcos Gonzalez Flores Secretario Academico Facultad de Ciencias de la Computacion Dr. Pedro Garcia Juarez Secretario Administrativo Facultad de Ciencias de la Computacion Dra. Maria de Lourdes Sandoval Solis Secretaria de Investigacion y Estudios de Postgrado Facultad de Ciencias de la Computacion http://www.cs.buap.mx/~cuartocongreso Sistemas Integrales Basados en Open Puebla, Puebla a 27 de Junio del 2005 Asunto: Reporte general correspondiente al periodo Mayo 2004 - Junio 2005 A traves del presente reporte, se presenta a grandes rasgos el trabajo realizado por SIBOS en aproximadamente 1 ano de trabajo. Observemos de manera cronologica las actividades de SIBOS: 1. El proyecto SIBOS fue planteado aproximadamente en mayo del 2004 2. Despues de varias platicas con la Administracion de la FCC se acepta el alojamiento de dicho proyecto en la FCC. 3. La consolidacion de este proyecto se da en Septiembre de 2004 mediante la capacitacion a traves del curso "PHP y MySQL" teniendo una duracion de 40 horas en el modulo 4. 4. En el mes de Noviembre se retoma la capacitacion de SIBOS mediante el curso "Administracion de Recursos Linux" (enfocado a la administracion del sistema "SPI") con una duracion de 20 horas en el modulo 4. 5. Despues de tal capacitacion SIBOS busca su primer objetivo y es logrado satisfactoriamente: el SPI "Sistema de Pre-Inscripciones'1 (en Noviembre del 2004). 6. Con un grupo de trabajo de 10 personas (que colaboraban en aquel entonces en SIBOS) y en un tiempo estimado de 30 dias se tiene un producto final. 7. Despues de realizar las adaptaciones pertinentes, SPI fue capaz de realizar los siguientes eventos: a. En el mes de Noviembre del 2004 se realiza la Pre-Inscripcion para primavera 2005 la cual puede considerarse un exito habiendo recaudado la participacion de 1700 alumnos. b. En Diciembre del 2004 la simulacion de la Inscripcion para Primavera 2005, con la cual se reviso la estabilidad del sistema, la seguridad, robustez y en resumen la calidad del sistema al demostrar un proceso continuo, recaudado la participacion de 1800 alumnos y detectando irregularidades con el Sistema de DAE (que fueron planteadas ante la Direccion de la FCC en ese momento, actualmente se tienen las referencias y pruebas de dichas irregularidades). En Mayo del 2004 se realiza la Pre-Inscripcion para Verano 2005, la cual recaudo la participacion de 1117 alumnos. Sistemas Integrales Basados ee Upen Source NOTA: Atendiendo a este punto cabe hacer mencion de que a pesar de que SIBOS siempre ha pronosticado los grandes problemas que se presentaran en los procesos de Re-Inscripcion, Secretaria Academica ha hecho caso omiso a nuestros resultados. los meses de Diciembre 2004 - Enero 2005 SIBOS lanza una convocatoria i la cual se busca aumentar el grupo de trabajo la cual es pospuesta (ya que se ron 2 meses de vacaciones al grupo de trabajo) hasta nuevo aviso, el mes de Marzo del 2005, se solicita el Modulo de Educacion Continua para uir con el desarrollo del proyecto, dicha solicitud fue aceptada inmediatamente. idea de integrar nuevos desarrolladores a SIBOS es retomada en el mes de Marzo del 2005 y se lanza una nueva convocatoria para llegar a lograr que SOS sea inter-institucional, teniendo una aceptacion muy buena llegando a ser solicitudes de diferentes areas como Diplomados de la FCC, instituto mologico de Puebla y de estudiantes de la FCC. Se publico la lista de altados en el mes de Abril. el mes de Mayo de 2005, al implantar la Pre-Inscripcion para Verano 2005, modificadas las interfaces del sistema, ademas de adecuarlo a las necesidades de un sistema "estandar" para poder ser implantado en cualquier Facultad de la BUAP. El mes de Junio del 2005, SIBOS tiene las siguientes actividades: L Se Presentada la Propuesta ante la Direccion de la FCC de implantar el sistema en al menos 2 facultades mas de la BUAP, la cual fue aceptada y sigue en proceso de negociacion con las demas facultades. L Se realizan inserciones de nuevos modulos al sistema para ser mas que un sistema de Pre-Inscripciones. L Se proporciona el curso "Programacion en PHP y MySQL" con una duracion de 16 horas en el Modulo de Educacion Continua, capacitando a 18 alumnos de la FCC, con lo cual SIBOS busca ser un centro integral que contribuya a la politica de "Mejora Continua" dentro de la FCC. L Son integrados a SIBOS 2 alumnos de Diseno Grafico de la BUAP, con lo cual crece el personal de SIBOS, logrando el cambio del logotipo de SIBOS, y la imagen que en el se manejaba. L Se disena el portal completo de SIBOS. L Con lo anterior, son redisenadas las interfaces del Sistema de inscripciones para volverlas mas amigables hacia los usuarios. L Se presenta la solicitud para el "proyecto de festejos" para la celebracion del primer ano de trabajo de SIBOS dentro de la FCC, la cual es aceptada, celebracion a presentarse en los ultimos dias del mes de agosto y primeros dias del mes de septiembre del 2004 bajo el nombre de "ler. Semana Nacional de Open Source, Mercadotecnia y Tecnologias Alternativas". Sistemas integralas Basados en Open Source Al mismo tiempo que lo anterior, se presenta el boceto del nuevo objetivo que SIBOS tiene en puerta: "Sistema de automatizacion de accesos a laboratorios" del nuevo edificio. Se prepara la Pre-Inscripcion de Otono 2005 y Primavera 2006 y el aumento del sistema con la nueva matricula de estudiantes 2005. Cabe hacer mencion que el sistema que esta en funcionamiento y los posteriores que puedan llegar a surgir, son totalmente manejados via web. Que el objetivo de SIBOS es automatizar procesos "cotidianos" dentro de la FCC y de este modo llegar a las demas facultades de la BUAP. Sabemos que SIBOS es un proyecto que ha cumplido las expectativas en el tiempo que ha estado alojado en la FCC, que su capacitacion y modo de trabajo es exhaustiva, en tanto fuerte y con mucha presion, es a ello que atribuimos el crecimiento y al mismo tiempo agradecemos las facilidades que hasta ahora nos han sido prestadas por la actua administracion de la FCC, al mismo tiempo agradezco a las personas que contribuyen (desarrolladores) a que SIBOS siga creciendo y mejorando dia con dia. Sin mas por el momento y recalcando que el presente documento es a grandes rasgos solo es una muestra del trabajo que en SIBOS se realiza, esperamos sirva de referencia para los fines que fue solicitado. SIBOS. El proyecto de Soluciones Integrales Basado en OPEN SOURCE (SIBOS) es impulsado por estudiantes de la FCC, cuyo objetivo es el desarrollo de software libre. La principal actividad de SIBOS en 2006 consistio en la realizacion del 2do. Congreso de Tecnologias de Informacion y Comunicacion: Fenix: Visualizando el Futuro. Este congreso se llevo a cabo del 28 al 1 de Septiembre de 2006, en las instalaciones de la Facultad de Ciencias de la Computacion. El objetivo principal fue la capacitacion en Software a estudiantes de Licenciatura y de Ingenieria en Ciencias de la Computacion. En este evento se ofertaron conferencias y siete talleres, para hacer un total de 11 actividades de gran impacto. Los talleres fueron: Programacion en C Administracin de recursos Linux Linux Macromedia Dreamweaver PHP y MySQL Java Macromedia Flash Las conferencias impartidas fueron: "Integracion de servicios IT basados em Software Libre + Comercial" Lic. Jacinto Cruz Luna y Lic. Roberto Carlos Martinez Ibarra. Ernesto Dorantes Alva. . enseIvonne Rodriguez Perez. Luis Gerardo de la Fraga La asistencia al evento fue de 120 alumnos y con un gran exito. Para mayo de 2007, SIBOS organiza el 3er. Congreso de Tecnologias de Informacion y Comunicacion Universo 07, con el siguiente programa de conferencias: Estandares de ambientes productivos en T-Systems, por el Ing. Marco Paredes, T-Systems. Proyect Management, por el Lic. Manuel Rivera H., TSystems. Herramientas de monitoreo y deteccion de intrusos en servidores linux, por la Mtra. Ma. Chable M. Inteligencia Artificial Moderna, por el Dr. Jesus Figueroa N. Administracion y Seguridad en Sistemas Linux, por el Dr. Santiago Dominguez Dominguez. Diseno de Interfaz de Usuario para Programadores (Nuvek), por el Lic. Jorge Merino H. MonoDevelop, por el Lic. Alejandro Garcia G. Control y Animacion de Robots mediante VHDL, por el Mtro. David Gonzalez Maxinez Y el programa de talleres es: ASP.NET Agentes Inteligentes, por el Dr. Ivan Olmos Pineda Verificacion y Validacion de software (V&V), por Christian Antonio Martinez Solis Data Warehouse, por la Dra. Josefa Somodevilla Proyectos de Investigacion y Tesis en computacion, por el Dr. Jesus Figueroa N. Construccion y programacion de robots lego con Lego Educational y Robolab, por el Dr. David Gonzalez Maxinez VHDL, por el Dr. Francisco Rodriguez Enriquez Felicitamos a los alumnos miembros de SIBOS, por la iniciativa en la organizacion de estos eventos. M. C MARIA DEL CARMEN SANTIAGO DIAZ Directora Facultad de Ciencias de la Computacion Benemerita Universidad Autonoma de Puebla Presente Puebla, Pue. a 8 de junio de 2005 Asunto: Informe de Actividades del Provecto Emprendedores Estimada Ma. Carmen Santiago Diaz: Reciba un cordial saludo y por este medio le informamos de las actividades realizadas del Proyecto Emprendedores BUAP a partir de la transferencia del Modelo del Programa Emprendedor por el Instituto Tecnologico de Estudios Superiores de Monterrey ITESM, dando inicio la capacitacion en octubre del 2004 con el curso de Induccion impartido por el Tecnologico de Monterrey, los dias 26, 27 y 28 al que asistimos los Profesores Elsa Chavira Martinez, Jorge Jimenez Gonzalez y Maria del Consuelo Molina Garcia de la Facultad de Ciencias de la Computacion. Posteriormente se realizaron reuniones durante el mes de noviembre y diciembre los dias martes de 10:00 a.m. a 13:00 p.m. para formar tres comisiones agrarias las siguientes actividades: L Formacion de Profesores (Cursos de Sensibilizacion) L Plan de estudios (Preparatoria y Profesional) L Capacitacion y actualizacion a Profesores A estas comisiones nos integramos Elsa Chavira Martinez y Garcia quienes nos abocamos a preparar el curso que denominado de Sensibilizacion. Para este curso que ademas es un taller preparamos los materiales en conjunto con los profesores de la comision de Formacion de Profesores. Estos cursos de Sensibilizacion estan disenados para los profesores de la BUAP, iniciando con las facultades de: Ciencias de la Computacion, Medicina, Estomatologia, Comunicaciones, Ciencias de la Electronica, Contaduria, Diseno FAC. DE CS. DE LA COMPUTACION Benemerita UniversidadAutonoma de Puebla Grafico, Economia, Arquitectura, Administracion y Preparatorias, con el objetivo de dar a conocer el Programa Emprendedor de la BUAP e invitar a participar en este proyecto a todos los profesores de la BUAP. El primer taller se impartio el 1 y 2 de diciembre 2004 con duracion de 16 horas, el segundo taller se impartio el 7 y 8 de febrero de 2005 con duracion de 16 horas. El material didactico que se realizo para este curso de Sensibilizacion, consistio en un manual del participante que contiene: Introduccion del Programa Emprendedor, el objetivo del programa en la BUAP, la metodologia del curso de sensibilizacion y programas de estudio de preparatoria y profesional, asi como las notas del curso que incluyen la presentacion en power point y el desarrollo de dinamicas para desarrollar la creatividad, innovacion, motivacion del emprendedor. Este material se preparo en un tiempo record durante el mes de noviembre de 2004. A la comision de pian de estudios se integro el Mtro. Jorge Jimenez Gonzalez, la que se dividio en dos programas academicos, de acuerdo a la sugerencia de este programa de transferencia el denominado Emprendedores I para preparatorias y Emprendedores II a profesional en la que se realizaron los programas de estudio para cada nivel esta actividad se realizo en enero de 2005. Dentro de las actividades de la comision de capacitacion y actualizacion de profesores tomamos el curso Planes de Negocio de Exportacion, impartido por BANCOMEXT con el tema: Programa Introductorio para formadores en Planes de Negocios de Exportacion, los dias 9,10, 16 y 17 de diciembre 2004 con una duracion de 32 horas, en el cual se realizo un plan de negocios de exportacion de diferentes productos. Cabe destacar que a este curso asistieron profesores ya sensibilizados de nuestra unidad academica, como las maestras Maya Carrillo Ruiz y la Maestra Carmen Santiago Diaz. Posteriormente asistimos al curso impartido por CRECE (Centro Regional para la Competitividad Empresarial) para realizar Planes de Negocio enfocados al desarrollo regional el cual se llevo acabo durante los meses de Marzo y Abril de 2005 en sus instalaciones, en donde, una vez sensibilizada se integra a maestra Yalu Galicia Hernandez. Durante el mes de abril las maestras Maya Carrillo Ruiz y Elsa Chavira Martinez se actualizaron para el uso de la plataforma WebCT, que se utilizara en los cursos de Emprendedores a nivel Profesional y que pretendemos utilizar para monitorear a las empresas que se incuben dentro de este modelo. En abril asistimos al Congreso Internacional de Emprendedores e Incubadoras de Empresas 2005 (CIE2005) que se llevo acabo los dias 21, 22 y 23 organizado por el ITESM en la ciudad de Monterrey NL., en el cual participamos en el ciclos de conferencias impartidas por gerentes de empresas como GOOGLE, INTEL, SOFTTEK, COMEX, HEB, ORGANIZACION RAMIREZ, y varios mas asi como al taller para profesores de la tecnica de POL (Project Oriented Learning) para desarrollar esta tecnica "Aprendizaje basado en Proyectos" en el programa emprendedor de la BUAP, asistimos a la muestra empresarial y graduacion de empresas del programa emprendedores ITESM. A este evento cabe destacar que intercambiamos experiencias con otros profesores que han adaptado el Programa Emprendedor El 3 y 4 de mayo se realizo en el Centro de Convenciones de la Ciudad de Puebla \a Ia Expo Emprende 2005, en la cual se presentaron 19 proyectos de la Facultad de Ciencias de la Computacion. (Anexol). De estos proyectos dos estan inscritos en el 6o. Encuentro Regional de Emprendedores organizado por SEDECO a realizarse el proximo septiembre. Agradecemos las facilidades que nos ha brindado para el desarrollo de este proyecto que esperemos repercuta en nuestros estudiantes para darles mas herramientas que los lleven a un exitoso desempeno profesional. Sin otro particular reiteramos nuestro saludo nuevamente agradeciendo de antemano la atencion que sirva tomar a la presente. ATENTAMENTE Maria del Consuelo Molina Garcia Elsa Chavira Martinez Profesora Investigadora Profesora Investigadora FCC-BUAP FCC-BUAP Maya Carrillo Ruiz Yalu Galicia Hernandez Profesora Investigadora Profesora Investigadora FCC-BUAP FCC-BUAP c. c. p. Dra. Lourdes Sandoval. Secretaria de Investigacion y Estudios de Postgrado, FCC- BUAP c, c. p. M. C Pedro Bello Lopez, Secretario Academico. FCC-BUAP c. c. p Dr. Pedro Garcia Juarez. Secretaria Administrativa, FCC-BUAP c. c. p. Archivo Anexo 1 Informe de Actividades del Provecto Emprendedores Lista de Proyectos presentados en la 1a Expo Emprende 2005 Num. Nombre del Proyecto Lider Asesores Academico 1 Instrumento de Control Remoto por Linea Telefonica de dispositivos electricos (ICRLT) Ruperto ramos Flores Elsa Chavira2 Celdas Solares Elsa Chavira Martinez Elsa Chavira3 Servi-Tech 4 Implementacion de un software de lectura de libros para invidentes utilizando la computadora 5 Administrador de Congresos - AdCo, 6 Servicio de telefonia publica a bajo costo usando el estandar VolP 7 SISMED. Un Sistema Medico Digital 8 Sistema Generador de Estadisticas Educativas (SIGEE) 9 VirtualTest 10 Sistema de Administracion Escolar (SIADES) 11 Quetzal Software Solutions 12 AtleticSoftware 13 Sistema de control escolar con software libre Eric Tapia Perez Jorge Jimenez14 Biblioteca Virtual Leobardo Reyes Cabrera Maya Carrillo15 16 17 18 Proyecto # 1 Titulo del Proyecto: Instrumento de Control Remoto por Linea Telefonica de dispositivos electricos (ICRLT). Lider: Nombre: Lic. Ruperto Ramos Flores Matricula: 980016794 e-mail: rupert rffajyahoo.com.mx Celular: 044-2221-810489 Licenciado en Ciencias de la Computacion Sub lider: Nombre: Elsa Chavira Martinez P. I. 100010677 e-mail: echavira(S)cs.buap.mx Celular: 044-2222-381148 Maestria en Ciencias Descripcion Este prototipo es un Instrumento de Control Remoto por Linea Telefonica de dispositivos electricos (ICRLT). El funcionamiento del ICRLT que opera conectado como un telefono fijo, consiste en detectar la senal de timbrado, y despues de realizar la identificacion de la senal de timbrado, el ICRLT, realiza la accion di descolgar y queda en disposicion de atender al usuario, quien debera teclear un; clave que le permitira pasar a la etapa de control en donde podra encender/apagado los dispositivos establecidos. El usuario utilizara el teclado del telefono para enviar ordenes al 'ICRLT. Se puede utilizar un telefono fijo o movil (celular) para realiza el control. Asesores Dr. Carlos Celaya Borges M. en C. Elsa Chavira Martinez Proyecto # 2 Titulo del Proyecto: Celdas Solares Lider: Nombre: M. en C. Elsa Chavira P. I. 100010677 e-mail: echavira(a)cs.buap.mx Celular: 044-2222-381148 Maestria en Ciencias Descripcion Este prototipo de Celdas Solares de alto rendimiento, estan fabricadas de silicio monocristalino. La tecnica para obtener el sustrato monocristalino es la conocida como Czochralski o de tiro. Proyecto # 3 Nombre del proyecto SERVITECH El nombre esta conformado por las siglas SERVI que abrevian la palabra servicios y TECH por sus siglas en ingles technology que hacen referencia a la palabra tecnologia, lo que en conjunto significa servicios tecnologicos. Descripcion del proyecto Hoy en dia, las empresas enfrentan la necesidad de implementar como herramienta de trabajo sistemas que desplacen aquellos metodos obsoletos, y permitan el control y automatizacion de sus tareas cotidianas. Siendo una prioridad la maxima satisfaccion del cliente, a traves de la solucion integral. Servi-Tech es una aplicacion web que hace que las empresas dedicadas a dar algun tipo de soporte tecnico tengan siempre disponible un control acerca de la informacion de la informacion de sus clientes y los servicios que les han ofrecido. El control es !levado a cabo por un numero de referencia y la clave de cliente, para asi tener un historial de los servicios realizados a un cliente y con esto agilizar los procesos de diagnosticos y reparacion de los equipos entrantes. Por ello hemos creado un sistema basado en servicios IT, enfocado en tres aspectos principales: Gestion gerencia! Este sistema cuenta con una base de datos que permite conocer situaciones sobre la logistica del soporte tecnico y la evaluacion de los servicios que se ofreceran al cliente, asi mismo determina estadisticas en base a fos servicios y/o productos ofrecidos, todo esto con la finalidad de conocer aspectos que controlen la calidad en el servicio. Control de clientes Tiene la finalidad de concentrar toda la informacion referente a los clientes en una base de datos, que les permita la simplificacion, actualizacion y organizacion de los mismos. Llevando el control por numero de referencia, clave de cliente, correcciones, asi como contar con un historial de los servicios ofrecidos, prioridades. Control de Servicios (verificar estatus de servicio), este rubro permite que sus clientes y departamento de soporte tecnico acceder al sistema, por medio de una contrasena y verificar en que estado se encuentra el servicio que se realizara al Ventajas de Servi-Tech Ofrecer una automatizacion a las empresas con respecto a su control de servicio; y clientes asi reduciendo costos de operacion, tiempos de ejecucion y se tiene l< opcion de modificar el sistema en base a las necesidades de cada empresa. Descripcion del producto o servicio Configuracion, instalacion, soporte tecnico y administracion de la aplicacion vi! Web para empresas industriales y comerciales. Plan de mercadotecnia Mercado meta El mercado meta al que va dirigido nuestro servicio son las pequenas y medianas empresas comerciales, industriales y de servicios de la ciudad de Puebla principalmente, las cuales se interesen en un sistema que agilice el manejo de sus operaciones y control de clientes. Estrategia publicitaria La publicidad que se empleara para dar a conocer nuestro servicio ser; principalmente por medios electronicos, asi como anuncios en Internet y relaciones publicas directamente con la Pymes. Proyecto # 4 Implementacion de un software de lectura de libros para invidentes utilizando la computadora Introduccion Desde siempre el habla ha sido el medio de comunicacion mas importante. Por esto, el area de reconocimiento de voz (conversion de palabras habadas a palabras escritas) ha tomado gran importancia y por lo tanto las herramientas de tecnologia de reconocimiento de voz han tenido un importante desarrollo en los ultimos anos. El proceso de reconocimiento de voz proporciona a las maquinas la capacidad de recibir mensajes orales, por medio de la senal acustica recogida por un microfono. Este proceso tiene como objetivo final decodificar el mensaje contenido en la onda acustica para realizar las acciones pertinentes. Para lograr este fin, un sistema de reconocimiento de voz necesitaria conjugar una gran cantidad de conocimientos acerca del sistema auditivo humano, sobre la estructura del lenguaje, la representacion del significado de los mensajes y sobre todo el autoaprendizaje de la experiencia diaria. En la actualidad y con el avance de la tecnologia es necesario desarrollar software que permita a las personas con discapacidades tener acceso a la informacion a traves de los sistemas de computo. Es sabido que gran parte de la informacion la percibimos a traves de la vista. Los invidentes utilizan el sentido del tacto y el oido para percibirla. Sin embargo, el invidente se encuentra un poco limitado en cuanto al acceso de informacion escrita debido a que necesita de la ayuda de otra persona para que le lea la informacion. Debido a esto los invidentes buscan medios y modos alternativos de acceso para hacer que la falta del sentido de la vista no represente una limitante para ellos y hacer que el uso de los sentidos del tacto y el oido pueda llevarse a cabo de manera independiente. Por esta razon, se disenara un software que realizara la tarea de leer libros escritos, donde el usuario podra interaccionar con la computadora por medio de la voz, para seleccionar el libro a leer y guardar la pagina en la que se quedo el lector. Para esta tarea se utilizara el Microsoft Speech API (SAPI) con las herramientas para el reconocimiento y sintesis de voz. Edgar Montiel Lider del proyecto Dr: Manuel Rubin Falfan Asesor de! proyecto Proyecto # 5 Administrador de Congresos - AdCo Lider del Proyecto: Espinosa de los Monteros Garcia Clemente Sub-Lider del Proyecto: Cerqueda Bejar Reyna Alejandra Asesor Academico: Yalu Galicia Hernandez Participantes: Tapia Tlatelpa Tlehuek 200124799 Lic. Cs de la Computacion Loranca Meritano Aldo 200208440 Ing. Cs de la Computacion Cerqueda Bejar Reyna Alejandra 200211433 Ing. Cs de la Computacion Espinosa de los Monteros Garcia Clemente 200110963 Ing. Cs de la Computacion Contreras Flores Nayeli 200209386 Lic. Administracion de Empresas Tlatelpa Mejorado Karina 200125761 Lic. Administracion de Empresas Otanez Torres Erika Faviola 200119906 Lic. Comercio Internacional Nombre de La empresa .DAT El nombre es el acronimo de Desarrollo de Aplicaciones Tecnologicas dandonos una vision clara del sector al que pertenecemos. Entendiendo por Aplicaciones Tecnologicas al uso de tecnologia de vanguardia para satisfacer las necesidades del cliente. Giro de la empresa El giro de la empresa es de servicios de IT (Innovacion Tecnologica), ya que se dedicara a la creacion, instalacion, soporte tecnico y administracion de sistemas Web, para instituciones industriales, comerciales y de educacion. Sector socioeconomico al que impacta. Esta orientado a toda pequena y mediana empresa del sector industrial, comercial y de educacion. En base a este sentido nuestro estrato va dirigido a los niveles de ingreso de las empresas, medio-medio, medio-alto y alto-bajo. Numero de empleos potenciales Inicialmente, se requiere de la participacion activa de personal con los siguientes perfiles: L Ingenieros en Ciencias de la Computacion, para la administracion de sistemas computacionales. L Licenciados y/o Ingenieros en Ciencias de la Computacion, para el desarrollo y mantenimiento del software. L Licenciados en Diseno Grafico, para la incorporacion de la imagen de la empresa-cliente en la aplicacion L Licenciado en Mercadotecnia, para el estudio del mercado a mediano y largo plazo. Conforme nuestra empresa se posicione dentro de un nicho de mercado, se incrementara el numero de empleos que este genere. Resumen Ejecutivo Mision Proporcionar soluciones integrales logrando la satisfaccion del cliente, a traves de compromiso, calidad e innovacion. Vision Consolidarnos como empresa lider de servicios de innovacion tecnologica en el mercado local, y nacional a mediano plazo. Objetivos L Mejorar la competitividad de las empresas aumentando el nivel tecnologico mediante la creacion de nuevas tecnologias aplicadas a servicios y procesos. Estudiar y mejorar aspectos tecnico-computacionales que aumenten la productividad en los procesos de desarrollo e integracion de software. L Adopcion de nuevas tecnologias que mejoren la competitividad. L Adelanto a las necesidades del usuario asi como el mejor uso de los recursos. L Cambio de procesos de trabajo que lleven a la mejora de la competitividad. Descripcion de la empresa o negocio Somos un grupo de jovenes emprendedores de la Universidad Autonoma de Puebla dedicados a desarrollar soluciones integrales a partir de la innovacion tecnologica que incorpora creatividad, entusiasmo, perseverancia y una actitud positiva. Nombre del proyecto AcICo El nombre esta conformado por las siglas Ad que abrevian la palabra Administracion y Co abrevian la palabra Congreso, lo que en conjunto significa Administrador de Congresos. Descripcion del proyecto Hoy en dia un numero elevado de Instituciones de casi cualquier indole organiza eventos en los cuales se requiere el manejo de la informacion de los asistentes, organizadores y participantes activos. AdCo es una aplicacion web que hace que las instituciones que se dedican a organizar eventos donde es necesario el registro para la generacion de estadisticas, impresion de reconocimientos y gafetes. Por ello hemos creado un sistema basado en servicios IT, enfocado en tres aspectos fundamentales: Manejo de Cuentas El sistema cuenta con un mecanismo de registros que es llevado a cabo por un identificador de la persona que asistira al evento. Al realizar dicho registro el sistema le genera una cuenta de usuario para que posteriormente pueda acceder a ella y realizar operaciones como son: L Modificacion de Informacion personal. L Cambio de contrasena. L Envio de ficha de pago. L Envio de propuestas para participar en activamente en el evento. o Edicion de Curriculum. o Edicion de resumenes de propuestas. Control de Registros y Pagos Tiene la finalidad de concentrar toda la informacion referente a las personas involucradas en el evento se cuenta con una base de datos, que les permitira a las personas encargadas del registro el dia del evento determinar que asistentes tienen acceso a este y quienes tienen algun adeudo por cubrir, ademas de generacion automatica de gafetes y constancias. El asistente tiene la capacidad de enviar su ficha de pago desde la cuenta que genero el sistema y AdCo puede determinar a que usuario pertenece y en tiempo real hacer una notificacion via mail al Coordinador del evento de que un pago ha sido efectuado, posteriormente el coordinador puede revisar que el pago es valido para modificar el registro del asistente. Control de Platicas, Resumenes del Material v Resumen de Curriculums Tiene la finalidad de concentrar toda la informacion de interes, para ser mostrada en la aplicacion web automaticamente. Sin la intervencion directa de algun experto en sistemas o paginas web el sitio siempre estara en continuo cambio presentandole a las personas interesadas en el evento los ultimos acontecimientos. Ventajas de AdCo Ofrecer una automatizacion a las instituciones con respecto a su control de las actividades y manejo de informacion de las personas participantes. Ser altamente configurabie para administrar Congresos, Ciclos de Conferencias, Simposiums, Cursos, Talleres, etc. Descripcion del servicio Configuracion, instalacion, soporte tecnico y administracion de la aplicacion via Web para las instituciones que lo contraten el servicio. Pian de mercadotecnia Mercado meta El mercado meta al que va dirigido nuestro servicio son las pequenas y medianas empresas comerciales, industriales y de servicios, escuelas publicas y privadas de la ciudad de Puebla principalmente. Estrategia publicitaria La publicidad que se empleara para dar a conocer nuestro servicio sera principalmente por medios electronicos, asi como anuncios en Internet y relaciones publicas directamente con las instituciones educativas de nivel medio Proyecto # 6 Titulo: Servicio de telefonia publica a bajo costo usando el estandar VolP Asesor: Ivo H. Pineda Torres Lider: Gandi Torres Sublider: Jose de Jesus Josue Enriquez Garcia Resumen: Despues de muchos intentos por conjuntar en la transmision de datos la voz y el video, esto ha sido logrado y parte de la estrategia de nuestro proyecto es poder crear puntos de acceso a servicios telefonicos usando la red Internet. Consideramos que es posible tener pequenas centrales telefonicas que usen las ventajas de conexion servicios de alta capacidad (>256Kb) y ofrecer llamadas telefonicas a precios mas bajos de los que cobran las companias telefonicas, esto abre la posibilidad que en un lugar de acceso a Internet conocidos como Cafes Internet se pueda ofertar un servicio extra y de instalarse en zonas de bajos recursos se puede ofertar llamadas a los EU cobrando precios mas bajos. Ivo Dr. Ivo H. Pineda Torres Edif. 135 Cub. 6 Facultad de Ciencias de la Computacion Ave. San Claudio y ave. 14 Sur Telf. (222)-229-5500 X 7216 "Dr. Ivo H. Pineda" ipineda(5jcs.buap.mx y torres_2qt(a)hotmail.com "Jose de Jesus Josue Enriquez Garcia" pepelefufajhotmail.com Proyecto # 7 TITULO: SISMED: Un Sistema Medico Digital RESUMEN: SISMED tiene el proposito de ser el sistema medico digital orientado a diagnostico y tratamiento de pacientes basado en sus historiales medicos. La idea original del proyecto era proveer a comunidades rurales con una herramienta computacional de bajo costo con soporte informatico para contener informacion de pacientes, medicos, medicamentos, historias clinicas, recetas, analisis clinicos y de radiologia. La solucion propuesta es tambien aplicable a consultorios medicos privados, clinicas del sector publico e incluso a instituciones hospitalarias de alto nivel. Por otra parte el sistema ofrecera soluciones a los diferentes especialistas del area de la salud bajo un ambiente grafico, interactivo y amigable. Aunque existen soluciones comerciales dirigidas a la automatizacion de los procesos medico-hospitalarios nuestra propuesta representa una alternativa al alto costo de este tipo de sistemas y ademas permite personalizar dichos procesos segun los requerimientos de cada usuario en particular. ASESOR: Dra. Maria Josefa Somodevilla Garcia mariasg(S)cs.buap.mx Alumnos: Lider: Miguel Angel Sanchez Arenas Sublideres: Ana Cristina Castillo Garcia Miguel Angel Ramirez Mendoza Proyecto # 8 Proyecto: Sistema Generador de Estadisticas Educativas (SIGEE) Descripcion: El sistema permite mostrar informacion sobre el aprovechamiento academico obtenido de la trayectoria de un grupo de alumnos dentro de una Institucion Educativa de nivel Superior. Las estadisticas y graficas que se muestran son: Rango de calificaciones de los alumnos. Creditos obtenidos por alumnos. Porcentaje de reprobacion. indice de reprobacion. Responsable Carrera: Licenciatura en Computacion Matricula: 200010189 Responsable: Cuautle Rivera Norma Lucero Cuatrimestre: 10 Telefono: 2458683 Correo: n lucero c@hotmail.com Alterno: norma.cuautle@siu.buap.mx Sublider Carrera: Licenciatura en Computacion Matricula: 200013966 Nombre: Herrrera Gomez Lourdes Cuatrimestre: 10 Telefono: 044 22 21 83 21 23 Correo: luheqfghotmail.com Alterno: luhegz(5)gmail.com Asesor1: Carrillo Ruiz Maya Correo: mayacarfgjsiu.buap.mx Unidad Academica: Computacion Proyecto # 9 Proyecto: Virtual Test Descripcion: Sistema de apoya para automatizar el proceso de evaluacion en instituciones educativas. Responsable Carrera: Licenciatura en Computacion Matricula: 200000929 Responsable: Romero Moreno Miriam Cuatrimestre: 10 Telefono: 2471492 Correo: romerom(5)mail.cs.buap.mx Alterno: mirv rom(5>vahoo.com.mx Sublider Carrera: Licenciatura en Computacion Matricula: 200012019 Nombre: Garcia Fernandez Rosalia Cuatrimestre: 10 Telefono: 01-248^824560 Correo: mauroar(5)mail.cs.buap.mx Alterno: gf rosy7(5)yahoo.com.mx Asesori: Carrillo Ruiz Maya Correo: mayacar@siu.buap.mx Unidad Academica: Computacion Asesor2. Martin Ortiz Manuel Isidro Correo: mmartin@solarium.cs.buap.mx Unidad Academica: Computacion Asesor3: Rea Cortes Joel Ivan Correo: joelrea@cs.buap.mx Unidad Academica: Computacion Proyecto #10 Nombre del Proyecto: Sistema de Administracion Escolar (SIADES) Descripcion: El sistema SIADES esta disenado para que ayude a administrar y manejar de manera eficiente la informacion de todos los profesores que laboran en la institucion, de los alumnos que asisten a los diferentes cursos que se imparten, de la propaganda que distribuye dicha escuela. SIADES permite visualizar informacion en forma de graficos para poderle ayudar al director de la escuela a tomar decisiones, permite ver reportes de ia infamacion que se requiera. Responsable: Carrera: Matricula: Nombre (Por apellidos): Cuatrimestre: Telefono: Celular: Correo electronico: Correo alternativo: Edith Varela Urena Licenciatura en Ciencias de ia Computacion Varela Urena Edith Decimo 2-44-87-16 04422-21-40-55-22 edith_varela@hotmail.com edith. varela@siu.buap.mx Sublider del proyecto: Anayely Anieles Ramirez Carrera: Licenciatura en Ciencias de la Computacion Matricula: 200013966 Nombre (Por apellidos): Anieles Ramirez Anayely Cuatrimestre: Decimo Telefono: 2-31-73-57 Celular: 04422-21-51-71-67 Correo electronico: aniel16@hotmail.com Correo alternativo: anayely@gmail.com Nombre: Unidad Academica: Correo electronico: Carrillo Ruiz Maya Facultad de Ciencias de la Computacion mayacar@siu.buap.mx Proyecto #11 Proyecto: Quetzal Software Solutions Descripcion: Quetzal tiene como mision el proporcionar soluciones en tecnologias de la informacion accesibles para las micro, pequenas y medianas empresas Responsable Carrera: Licenciatura en Computacion Matricula: 200015277 Responsable: Garcia Luna Gerardo Cuatrimestre: 10 Telefono: 2243773 Correo: qgarcia@siu.buap.mx Alterno: luna ger@hotmail.com Sublider Carrera: Licenciatura en Computacion Matricula: 200014773 Nombre: Juarez Sanchez Gilberto Valentino Cuatrimestre: 10 Telefono: 2316043 Correo: vajuarez@siu.buap.mx Alterno: gilberto.!uarez(5)gmail.com Asesori: Garcia Leon Jose Gerardo Miguel Correo: Unidad Academica: Arquitectura Asesor2. Carrillo Ruiz Maya Correo: mayacar(5)siu.buap.mx Unidad Academica: Computacion Asesor3: Correo: Unidad Academica: Proyecto # 12 AtleticSoftware Lider Nombre: Edith Chavez Contreras Matricula: 200011223 Sub lider Nombre: Rojo Ruiz Sarai Matricula: 200023416 Descripcion Este producto fue planeado con la finalidad de impulsar el desarrollo deportivo de los jovenes atletas que tienen aspiraciones a quieren alcanzar un nivel competitivo a nivel nacional e internacional. El producto es una herramienta que agiliza y organiza la informacion, asi como administracion de los procesos que implica el control de entrenamiento de los atletas. El principal punto a cubrir es la administracion de informacion de los atletas que sera organizada en diferentes areas como son: Ficha de identidad: Contiene datos personales de cada uno de los atletas. Expediente Medico y de Laboratorio: Se almacena los resultados de examenes medicos y de laboratorio. Programa de entrenamiento: Planeacion de entrenamiento por semana. Registro de entrenamiento Curriculum Deportivo Programacion y evaluacion de competencias: Se guardan los resultados de la evaluacion. Asesores Entrenador y Medico: Jorge Lopez Cepeda Coordinadora academica M.C. Maya Carrillo Ruiz Proyecto #13 Sistema de control escolar con software libre Lider: Erick Tapia Perez Asesor: Jorge Jimenez Gonzalez Proyecto # 14 Proyecto: Biblioteca Virtual Descripcion: Sistema de apoyo academico de una institucion universitaria para la consulta de libros disponibles para el prestamo, asi como la descarga de libros digitales. Responsable Carrera: Licenciatura en Computacion Matricula: 200000929 Responsable: Leobardo Reyes Cabrera Cuatrimestre: 8 Telefono: 2190796 Correo: Ieo6rev(5?yahoo.com Alterno: Ieo6rev(5?hotmail.com Sublider Carrera: Licenciatura en Computacion Matricula: 200123843 Nombre: Fernando Uceda Ponga Cuatrimestre: 8 Telefono: 2285904 Correo: modercrusades@hotmail.com Integrantes: Carrera: Licenciatura en Computacion Matricula: 200109198 Nombre: Claudia Cruz Perez Cuatrimestre: 8 Telefono: 2-330148 Correo: polla 2@hotmail.com Integrantes: Carrera: Licenciatura en Computacion Matricula: Nombre: Matias Gomez Sotero Cuatrimestre: 8 Telefono: 2-330148 Correo: polla 2(5)hotma!l.com Asesor1: Carrillo Ruiz Maya Correo: mavacar(5)siu.buap.mx Unidad Academica: Computacion Emprendedores 2006 1M. C. Ma. del Carmen Santiago Diaz Directora Facultad de Ciencias de la Computacion, BUAP Por este medio le envio el informe de actividades que compete a la Facultad de Ciencias de la Computacion en el Programa Emprendedor de la BUAP, durante 2005 y 2006. Actividades dentro de Programa Emprendedor BUAP: 1. Impartir cursos de Sensibilizacion para profesores de la BUAP. Las profesoras de al FCC que hemos impartido estos cursos son: a. Maria del Consuelo Molina Garcia b. Elsa Chavira Martinez Cabe mencionar que elaboramos el material audiovisual para este curso, publicado por la Vicerrectoria de Docencia. Los profesores de la FCC participantes en este programa y sus actividades son: Profesor Coordinador en la FCC Imparte el Curso: DESARROLLO EMPRENDEDOR en la FCC Conoce el Programa Emprendedor de la BUAP a traves del curso* de: SENSIBILIZACION Capacitado para elaborar un plan de Negocios Elsa Chavira Martinez Maria del Consuelo Molina Garcia Jorge Jimenez Gonzalez Maya Carrillo Ruiz Yalu Galicia Hernandez Jose Alfonso Garces Baez Manuel Rubin Falfan Laura Coyoatl Emprendedores 2006 2Cabe mencionar que este curso SENSIBILIZACION. Requiere que los profesores inviertan 16 horas en dos dias de 9:00 a 18:00 horas por lo que han asistido pocos profesores de la FCC. 2. Impartir el curso de Desarrollo Emprendedor a los alumnos de nivel licenciatura de diversas unidades academicas. a. Dos curso en el Periodo de Otono del 2005. Impartidos por las profesoras de la FCC. i. Maria del Consuelo Molina Garcia y ii. Elsa Chavira Martinez. b. Dos cursos en el Periodo de Primavera del 2006. Impartidos por las profesoras de la FCC. i. Maria del Consuelo Molina Garcia y ii. Elsa Chavira Martinez. Cabe mencionar que elaboramos una guia en CD para los profesores que imparten el curso de Desarrollo Emprendedor en las diversas unidades academicas. Al final de cada curso se realiza un Expo OE Emprendedores, en donde los alumnos presentan el Plan de Negocios que desarrollaron de la Empresa propuesta durante en curso, incluye un plan de mercadotecnia y su plan financiero asi como la minuta de la acta constitutiva de su empresa. Estos Planes de Negocios se someten a una evaluacion academica, empresarial y financiera. Cabe destacar que durante el periodo de otono del 2005 se formaron 2 empresas con alumnos de la FCC. 1. Desarrollo de Software para invidentes, HABLAME. a. Claudia Cruz Perez b. Matias Gomez Sotero c. Leobardo Reyes Cabrera d. Fernando Uceda Ponga. i. Asesora: Elsa Chavira Martinez Cabe destacar que estos alumnos ademas obtuvieron el 1er lugar en la categoria de Ingenieria e Industria, en la Primera Convencion Nacional de Investigacion Aplicada y Desarrollo Tecnologico 2005. Realizada en el Centro de Convenciones de esta ciudad Heroica Puebla de Zaragoza. 2. Sistema de Adquisicion de Senales Bio Electricas, SASBE. a. Rafael Natividad i. Asesor: Dr. Manuel Isidro Martin Ortiz Emprendedores 2006 3 Cabe destacar que este alumno ademas obtuvo el 1er lugar en la categoria de salud, en la Primera Convencion Nacional de Investigacion Aplicada y Desarrollo Tecnologico 200. Realizada en el Centro de Convenciones de esta ciudad de Puebla. Tambien este trabajo lo presento en el Workshop IBERCHIP, efectuado en San Jose de Costa Rica. 3. Organizar, promover de 10 a 12 Conferencias durante el curso de de Desarrollo Emprendedor. Con el fin de apoyar a los alumnos con expertos en temas muy especificos del curso e invitar a emprendedores jovenes con los que se sientan identificados. Para platicar sus experiencias en la constitucion de un empresa. 4. Organizar, promover y desarrollar las Expo OE Emprendedores. Es la culminacion del trabajo final del curso de Desarrollo Emprendedor. 5. Asistir a curso de especializacion y actualizacion empresarial. Que ofrecen varias instituciones como son: BANCOMEX, NAFINSA, JEMAC, Secretaria de Economia, CRECE, Secretaria de Desarrollo Economico, entre otras. 6. Promover el Programa Emprendedor no solo al interior de la institucion, sino que a los sectores mas vulnerables de Puebla. Por lo que a la firma de un convenio con SEDESOL y al Ayuntamiento de Puebla en el programa PRO-MUJER se imparten el curso de Desarrollo Emprendedor a mujeres que ya han sido beneficiadas con creditos para la constitucion de sus empresas. 7. Asistir a las Semana Nacionales PYMES. Se ha asistido a la 5a y 6a Semana PYME en el Centro de Negocios BANAMEX. 8. Participacion en Foros Internacionales. A la fecha se ha asistido al Congreso Internacional de Emprendedores e Incubadoras de Empresas, CIE, organizado por el ITESM. a. CIE 2005, realizado en el ITESM campus Monterrey. Participando en las conferencias, seminarios y en el taller POL, Project Orienting Learning, las profesoras de la FCC: i. Maya Carrillo Ruiz ii. Yalu Galicia Hernandez iii. Elsa Chavira Martinez b. CIE 2006, realizado en el ITESM campus Guadalajara, Participando los alumnos que desarrollaron el software para invidentes fiHABLAMEfl. Emprendedores 2006 4Anexo a este informe algunas fotografias y reconocimientos de estas actividades. Reciba un cordial saludo Atentamente Elsa Chavira Martinez Profesora Investigadora FCC-BUAP Emprendedores 2006 5 Emprendedores 2006 6 Emprendedores 2006 7 Emprendedores 2006 8 EXPOCIENCIAS Informacion de los proyectos de la Facultad de Ciencias de la Computacion No. de Stand: 7 No. de Proyectos: 10 1. Nombre del Proyecto: Aplicacion de filtros a Imagenes digitales con Tecnologia JAVA Responsable: Amado Benitez Lima Email: benitezlima@yahoo.com Tel: Material solicitado: 1 mesa 2 Sillas 1 Lona Fondo SI envio archivo 1/2 Stand 2. Nombre del Proyecto: Dispositivos Moviles para pago electronico de Gasolina Responsable: Dr. Miguel Angel Leon Chavez Lic. Veronica Edith Bautista Lopez Email: Tel: Material solicitado: 1 mesa 2 Sillas 1 Lona Fondo NO envio archivo 1/2 Stand Internet Inalambrico 3. Nombre del Proyecto: Desarrollo de Soluciones Basados en TI Responsable: Gabriel Teran Esquina Email: teran_e@hotmail.com Tel: Material solicitado: 1 mesa 4 Sillas 1 Lona Fondo SI envio archivo 1 Stand 4. Nombre del Proyecto: Automatizacion de servicios medicos de emergencia usando tecnologia E-Health Responsable: William Alberto Cruz Castaneda Email: williamalberto.cruz@gmail.com Tel: 0442221895409, o 2198515 o 3952655 Material solicitado: 1 mesa 2 Sillas 1 Lona Fondo SI envio archivo 1/2 Stand 5. Nombre del Proyecto: Centro de Tecnologias de Informacion Responsable: Mtro. Graciano Cruz Almanza Email: carmen@cs.buap.mx, beryzza@hotmail.com Tel: 044 22 21747754 Material solicitado: 2 mesas 4 Sillas 1 Lona Fondo SI envio archivo 1 Stand 6. Nombre del Proyecto: Celdas Solares Energia renovable Responsable: Elsa Chavira Martinez Yalu Galicia Hernandez Ma. Del Consuelo Molina Garcia Email: echavira@cs.buap.mx Tel: 0442222381148 Material solicitado: 2 mesas 2 Sillas 1 Lona Fondo 1/2 Stand 7. Nombre del Proyecto: Hablame, Software para invidentes Responsable: Fernando Oceda Ponga Claudia Email: Tel: Material solicitado: 1 mesas 2 Sillas 1 Lona Fondo NO envio archivo 1/2 Stand 8. Nombre del Proyecto: Robots acuaticos Limpiadores Responsable: Ernesto Sanchez Sanchez Abraham Rincon Suarez Dr. Manuel Rubin Falfan Email: neto103@hotmail.com Tel: 0442221919583 Email mrubin@cs.buap.mxTel: 0442222545607 Material solicitado: 2 mesa 3 Sillas 1 Lona Fondo SI envio archivo 1 Stand 9. Nombre del Proyecto: Servicios de Tecnologias de Informacion Compumath Responsable: Alfonso Garces Baez Email: Tel: Material solicitado: 1 mesa 2 Sillas 1 Lona Fondo SI envio archivo 1/2 Stand 10. Nombre del Proyecto: Monitoreo Remoto de Temperatura Responsable: Juan Mejia Palafox Email: Tel: Material solicitado: 1 mesa 2 Sillas 1 Lona Fondo No envio archivo 1/2 Stand
50b443615fa735169f000187 Gestion 2007-2011 Segundo Informe de Labores Dr. Mario Rossainz Lopez Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion Benemerita Universidad Autonoma de Puebla 2 Facultad de Ciencias de la Computacion | Segundo Informe de Labores Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 3 Contenido Preliminares: Calidad y Adecuacion al MUM. I. FORTALECIMIENTO DE LOS PROGRAMAS EDUCATIVOS DE NIVEL LICENCIATURA I.1. Acreditacion de la Ingenieria en Ciencias de la Computacion I.2. Rediseno Curricular Acorde al MUM I.3. Reacreditacion de la Licenciatura en Ciencias de la Computacion II. FORTALECIMIENTO DEL PROGRAMA EDUCATIVO DEL NIVEL POSGRADO II.1. Organizacion del Posgrado II.2. Diversificar la Oferta III. SUPERACION DEL PERSONAL ACADEMICO Y BIENESTAR LABORAL: III.1. Consolidacion de las Areas de Conocimiento III.2. Oportunidad Laboral III.3. Integracion de la Planta Docente al Programa de Superacion Academica III.4. Profesores con Perfil Deseable PROMEP IV. INTEGRACION SOCIAL Y MOVILIDAD DOCENTE IV.1. Creacion de Redes de Colaboracion Academica IV.2. Vinculacion con Diferentes Actores Sociales IV.3. Convenios de Intercambio y Colaboracion Docente IV.4. Presencia de la FCC IV.5. Educacion Continua, Diplomado y Servicio Social V. INFORME FINANCIERO E INFRAESTRUCTURA V.1. Ingresos V.2. Egresos V.3. PIFIs V.4. Infraestructura VI. ACTIVIDADES ACADEMICAS VI.1. Apoyo a Estudiantes para Asistir a Congresos y Eventos Academicos VI.2. Apoyo a Eventos Academicos Organizados por Estudiantes VI.3. Alumnos y Profesores Destacados VI.4. Apoyo a Eventos Academicos Organizados por Profesores VI.5. Talleres Culturales VI.6. Actividades Deportivas VI.7. Plan de Contingencia VI.8. Procesos Electorales Benemerita Universidad Autonoma de Puebla 4 Facultad de Ciencias de la Computacion | Segundo Informe de Labores VI.9. Admision y Titulacion de Alumnos de la Licenciatura, Ingenieria y Posgrado VI.10. Tutores Perspectivas Agradecimientos Especiales Glosario Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 5 Segundo Informe de Labores 2008-2009 Honorable Consejo de Unidad Academica de la FCC. Dr. Enrique Aguera Ibanez, Rector de la Benemerita Universidad Autonoma de Puebla. Companeras y companeros universitarios miembros de la Facultad de Ciencias de la Computacion y de las diferentes Unidades Academicas de esta Benemerita Institucion. Representantes de los medios de comunicacion. Distinguidos invitados. Senoras y senores. Conforme a lo que establece la fraccion III del articulo 115 del Estatuto Organico, de la Benemerita Universidad Autonoma de Puebla, acudo a rendir el Segundo Informe de labores de la Gestion 2007-2011 correspondiente al periodo del 6 de junio de 2008 al 5 de junio de 2009, ante el Honorable Consejo de Unidad Academica y ante la comunidad de la Facultad de Ciencias de la Computacion. Informo sobre los resultados del trabajo de profesores, investigadores, estudiantes y trabajadores administrativos de nuestra facultad. Entrego al Secretario del Honorable Consejo de Unidad Academica el texto y los anexos de este Segundo Informe, para que proceda a emitir la convocatoria respectiva, con el fin de que este consejo lo discuta y, en su caso, lo apruebe como lo mandata la fraccion XVII del articulo 106 del Estatuto Organico. Benemerita Universidad Autonoma de Puebla 6 Facultad de Ciencias de la Computacion | Segundo Informe de Labores Preliminares: Calidad y Adecuacion al MUM Cuando se presento el Plan de Desarrollo 2007-2011, ante este Honorable Consejo de Unidad Academica, se hizo patente la importancia de los diferentes programas que lo constituyen, ya que estos son la base de una nueva organizacion interna de la facultad centrada en el trabajo academico. Uno de los ejes del futuro academico de nuestra institucion es el Modelo Universitario Minerva (MUM), por lo que este ano de gestion se encamino a la adecuacion de los planes y programas de estudio para que respondan a las exigencias de aprendizaje en ambientes innovadores con un curriculum transversal que facilite la integracion social y la formacion integral que el modelo demanda. El concepto actual de calidad, aplicado a la formacion de recursos humanos y a la academia, es mas amplio, razon por la cual, hemos puesto especial enfasis en la certificacion de los programas academicos que ofrecemos y en la contratacion de profesores investigadores con el grado de doctor y que, preferentemente, pertenezcan al Sistema Nacional de Investigadores (SNI). En lo que a infraestructura se refiere, la Facultad de Ciencias de la Computacion ha adquirido una nueva imagen; se han reacondicionado los edificios, aulas y laboratorios para que nuestros alumnos y profesores cuenten, para el desempeno de sus labores cotidianas, con los elementos tecnologicos y mobiliario adecuados. A continuacion presentamos una sintesis de las actividades realizadas, en este segundo ano de gestion, en cada uno de los programas correspondientes al plan de desarrollo de la FCC. Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 7 I. FORTALECIMIENTO DE LOS PROGRAMAS EDUCATIVOS DE NIVEL LICENCIATURA I.1 Acreditacion de la Ingenieria en Ciencias de la Computacion En el segundo semestre del ano 2008 se concluyo la documentacion correspondiente al proceso de auto-evaluacion del programa academico de la Ingenieria en Ciencias de la Computacion. Previa a la visita de los representantes del organismo acreditador y conforme a las actividades programadas se procedio a la Prueba de Consistencia, para la cual se conto con la colaboracion de profesores investigadores de esta casa de estudios MC. Jose Guadalupe Quiroz Oropeza, Mtra. Maria del Carmen Tenorio Contreras y MC. Rafael Rivera Rodriguez quienes poseen amplia experiencia en la evaluacion de programas educativos y rigurosamente realizaron la revision de la documentacion final. La prueba de consistencia se realizo el 28 de octubre y las observaciones de los profesores evaluadores se analizaron e integraron, por el comite para la acreditacion de la FCC, al documento Criterios para la Evaluacion enviado al Consejo Nacional para la Acreditacion en Informatica y Computacion, A.C. (CONAIC). Durante los dias 24, 25 y 26 de noviembre de 2008, tuvimos la visita de la Comision Tecnica designada por el CONAIC para llevar a cabo la evaluacion con fines de acreditacion de la ICC. Dicha comision tecnica estuvo conformada por: Mtro. Adolfo Ortiz Sedano Universidad Veracruzana, Mtro. Cristian Carlos Delgado FES Acatlan, Mtra. Ma. De los Angeles Lopez Amaro Tecnologico de Estudios Superiores Ecatepec. Durante estos dias la comision tuvo reuniones con alumnos activos, egresados, profesores, coordinadores de programa y responsables de comisiones quienes, con sus respuestas, reforzaron lo ya reportado en los documentos entregados al organismo acreditador. Finalmente, el dia 22 de enero de 2009 la presidenta del CONAIC hizo entrega del dictamen, en el cual el Consejo Nacional de Acreditacion en Informatica y Computacion A.C. (CONAIC) ACREDITA AL PROGRAMA INGENIERIA EN CIENCIAS DE LA COMPUTACION DE LA BENEMERITA UNIVERSIDAD AUTONOMA DE PUEBLA por CUMPLIR con los requisitos de calidad educativa establecidos por el CONAIC. Este reconocimiento tiene validez por el periodo 8 de enero de 2009 al 8 de enero de 2014. A continuacion se mencionan algunas de las acciones mas importantes realizadas durante el proceso. Se creo y equipo el Centro de Calidad de la Facultad de Ciencias de la Computacion. Se realizo el diseno e implementacion del sitio web para los procesos de calidad de la FCC (http://www.calidadfcc.cs.buap.mx), para poner a disposicion de los coordinadores de rubro y de la comunidad en general la documentacion necesaria para el llenado del formato de autoevaluacion del CONAIC. Como funcionalidades adicionales el sitio web cuenta con 7 recorridos virtuales de las instalaciones de la Benemerita Universidad Autonoma de Puebla 8 Facultad de Ciencias de la Computacion | Segundo Informe de Labores facultad, buzon de sugerencias, transmision de video en tiempo real mediante la Se realizaron 78 reuniones con los coordinadores de rubro los dias martes y jueves de 11:00 a 13:00 hrs., que sirvieron para realizar revisiones del trabajo elaborado por los coordinadores de rubro y sus mesas de trabajo. Como parte del proceso de difusion se entregaron 1000 playeras y 2000 pulseras a los alumnos de la Ingenieria en Ciencias de la Computacion, se realizaron visitas a los salones por parte de los coordinadores de rubro y los directivos de la facultad, se repartieron 1200 volantes y 2000 separadores informativos. Se equiparon los salones del edificio 135 con proyector, mesas de trabajo y sillas tapizadas. Se renovo la pintura de los 4 edificios de la facultad. Este proceso de acreditacion nos ha permitido reflexionar sobre nuestro quehacer cotidiano, nos ha dado certeza en cuanto a la calidad de la ICC y lo mas importantes es que nos ha mostrado las oportunidades que tenemos para mejorar. Si bien las evaluaciones por los organismos acreditadores como el CONAIC son muy importantes, consideramos que el seguimiento permanentemente a nuestros programas de estudio, el mantenimiento de la infraestructura y la superacion continua de los academicos que conforman la FCC debe ser una constante para acrecentar la calidad de nuestro quehacer como universitarios. La entrega formal del reconocimiento de la acreditacion de la ICC se llevo a cabo el 17 de febrero de 2009, en la "Sala Virtual" del Centro de Seminarios del Complejo Cultural Universitario, la cual fue presidida por el senor rector de nuestra Benemerita Institucion, Dr. Enrique Aguera Ibanez, quien recibio de manos de la presidenta del CONAIC, la Dra. Alma Rosa Garcia Gaona, el reconocimiento de programa acreditado para el periodo 2009-2014. Actualmente se trabaja en el informe semestral que el CONAIC ha establecido, para todos los programas acreditados, con el objetivo de dar seguimiento a las recomendaciones que este organismo emite como resultado del proceso de acreditacion. I.2. Rediseno Curricular Acorde al MUM Conforme a las expectativas establecidas, durante el segundo semestre del 2008, se realizaron al interior de la DESIT y en particular en la FCC una serie de actividades para la adecuacion de nuestros programas de licenciatura de acuerdo al Modelo Universitario Minerva (MUM). Los planes de estudio resultantes se aprobaron en lo general en reunion extraordinaria de CUA el dia 13 de febrero de 2009, previa a su presentacion y correspondiente aprobacion en sesion ordinaria del Honorable Consejo Universitario. Los programas educativos (PEs) Licenciatura en Ciencias de la Computacion (LCC) e Ingenieria en Ciencias de la Computacion (ICC) son el resultado del trabajo realizado por los profesores, Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 9 las comisiones de evaluacion y seguimiento curricular y los coordinadores de los programas educativos de la FCC asi como de una serie de acuerdos de integracion curricular en la Division de Estudios Superiores de Ingenieria y Tecnologia. A continuacion detallamos los acuerdos a nivel DESIT y las actividades realizadas al interior de esta Unidad Academica. Acuerdos a nivel DESIT respecto de la instrumentacion del MUM: Conformacion de las comisiones de egreso, titulacion, emprendedores, asignaturas, servicio social y practicas profesionales. Estas comisiones estan integradas por profesores investigadores de todas las unidades academicas de la DESIT, por la FCC tenemos participacion en las comisiones siguientes: Profesor Comision Beltran Martinez Beatriz Emprendedores Bustillo Diaz Mario Mauricio Practica Profesional y Servicio Social Castillo Zacatelco Hilda Emprendedores Castro Cardona Mauricio Titulacion Pinto Avendano David Eduardo Titulacion Definicion del Perfil de Egreso DESIT: Conformado por valores, actitudes, habilidades-destrezas y conocimientos. Propuesta del tronco comun evolutivo y la creacion a futuro de una tabla de equivalencias dinamica DESIT. Esta iniciativa propone un conjunto de asignaturas que los estudiantes de la DESIT pueden cursar en cualquier Unidad Academica (UA) de esta DES y cuyo contenido es equivalente al de una asignatura de su propio PE. Caracterizacion de las asignaturas obligatorias-optativas y multidisciplinarias DESIT divididas en: ASIGNATURAS OBLIGATORIAS OPTATIVAS DESIT: Son asignaturas que el estudiante puede cursar en cualquier PE de la DESIT, incluyendo el propio y son de caracter obligatorio. ASIGNATURAS COMUNES DESIT: Es el conjunto de asignaturas que son identicas en cualquier PE de la DESIT y que un estudiante de esta DES podra cursar en cualquier UA de la DESIT respetando los procedimientos vigentes. Ej. Herramientas de aprendizaje autonomo de la Formacion General Universitaria (FGU). ASIGNATURAS MULTIDISCIPLINARIAS DESIT: Es el conjunto de asignaturas que son identicas en cualquier PE de la DESIT y cuyas secciones deberan ser integradas de manera equitativa con estudiantes de las cinco UA de la DESIT, respetando los procedimientos vigentes. Ej. Emprendedores. Benemerita Universidad Autonoma de Puebla 10 Facultad de Ciencias de la Computacion | Segundo Informe de Labores Propuesta de la estructura curricular DESIT conformada por: Cuatro niveles de lengua extranjera, Filosofia de la Ciencia de manera opcional, Formacion Humana y Social, Desarrollo de Habilidades del Pensamiento Complejo, Desarrollo de Habilidades en el Uso de la Tecnologia, la Informacion y la Comunicacion, Herramientas de Aprendizaje Autonomo, Materias de I+D, Innovacion y Talento Emprendedor, Redaccion. Integracion del Eje de Investigacion, Innovacion y Desarrollo Tecnologico DESIT. Creacion del Area de integracion disciplinaria: Practica Profesional Critica, Servicio Social y Proyectos de Impacto Social. Actividades de la comunidad de la FCC respecto de la instrumentacion del MUM Los trabajos realizados al interior de la FCC para la actualizacion de los PEs de la LCC e ICC en el marco del MUM han sido coordinados por la Secretaria Academica de la Facultad en conjuncion con los Coordinadores de los Programas Educativos, quienes tuvieron a su cargo la organizacion de las reuniones con las areas de conocimiento, con la Comision de Evaluacion y Seguimiento Curricular (CESC) y colaboradores de las mismas. Las actividades realizadas durante el periodo de gestion que se informa han sido las siguientes: 1. Asistencia a los cursos de induccion del Programa Institucional de Formacion de Academicos Universitarios (PIFAU) por parte de los siguientes academicos de la FCC: Asistentes Curso de Induccion PIFAU Profesor Participacion Anzures Garcia Mario Asistente Bermudez Juarez Blanca Asistente Bustillo Diaz Mario Mauricio Asistente Castro Cardona Mauricio Asistente Ceron Garnica Maria del Carmen Facilitador Modulo 7 Colmenares Guillen Luis Enrique Facilitador Modulo 7 Contreras Gonzalez Meliza Asistente Italo Cortez Jose Asistente Jimenez Gonzalez Jorge Facilitador Modulo 8 Marcial Castillo Luis Rene Asistente Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 11 Asistentes Curso de Induccion PIFAU Profesor Participacion Rivera Martinez Marcela Asistente Sanchez Galvez Maria Eugenia Narcisa Sully Asistente Vera Cervantes Eugenia Erica Facilitador Modulo 7 2. Asistencia de los integrantes de la Comision de Evaluacion y Seguimiento Curricular y Coordinadores de los PEs a los siguientes cursos y talleres impartidos de octubre de 2008 a enero de 2009 por parte de la Vicerrectoria de Docencia a traves de la Direccion General de Educacion Superior (DGES): a. El curso de Curriculum Desarrollador, b. Taller de Estructura Curricular en el Marco del MUM, c. Taller para la Generacion de los Planes y Programas de Estudio de la DESIT. 3. Se creo el portal: http://ces.cs.buap.mx como un espacio dedicado a publicar el trabajo realizado por la Comision de Evaluacion y Seguimiento Curricular de la FCC. 4. Definicion de la Estructura Curricular generica de la DESIT en diciembre de 2008. 5. Ajuste de perfiles de ingreso, egreso, de la carrera y del docente en la propuesta de la actualizacion de los PEs de la FCC en enero de 2009. 6. Sesion permanente de trabajo por parte de la CESC-FCC los dias 17 y 18 de enero de 2009 en el Laboratorio de las Ideas del Complejo Cultural Universitario y los dias 23, 24 y 25 de enero de 2009 en las instalaciones de la FCC para definir el mapa curricular de los PEs de la ICC y LCC. 7. Incorporacion de la comunidad academica de la FCC al trabajo de la actualizacion de los PEs acordes al MUM por areas de conocimiento a partir del mes de enero de 2009. 8. Presentacion de los trabajos de la CESC-FCC respecto de la estructura curricular de los PEs de la ICC y LCC acordes al MUM ante la academia de la facultad en sesion extraordinaria con fecha 10 de febrero de 2009. 9. Presentacion, el dia 13 de febrero de 2009 en sesion extraordinaria de CUA, de la actualizacion de los proyectos de los programas educativos de la licenciatura e ingenieria en ciencias de la computacion en el marco del Modelo Universitario Minerva. 10. Integracion de la documentacion y entrega de los programas a la DGES para su aprobacion por el H. Consejo Universitario. Benemerita Universidad Autonoma de Puebla 12 Facultad de Ciencias de la Computacion | Segundo Informe de Labores I.3. Reacreditacion de la Licenciatura en Ciencias de la Computacion Congruentes con el compromiso establecido por el senor rector Dr. Enrique Aguera Ibanez, en el Plan de Desarrollo Institucional, para el aseguramiento de la calidad de los programas academicos y sabedores del compromiso de nuestra facultad por seguir manteniendo el 100% de nuestros programas educativos en niveles de calidad, hemos iniciado el proceso de reacreditacion de la Licenciatura en Ciencias de la Computacion (LCC). El organismo acreditador es el Consejo Nacional para la Acreditacion de Informatica y Computacion (CONAIC), mismo que acredito a la ICC y previamente en el ano 2004 a la LCC. Las acciones ya realizadas para la reacreditacion del programa son: 1. Solicitud al CONAIC del proceso de reacreditacion de la LCC. El 21 de abril de 2009 se da inicio al proceso de evaluacion con fines de reacreditacion de la Licenciatura en Ciencias de la Computacion por parte del CONAIC. 2. Pago de la cuota economica que da derecho a la evaluacion y dictaminacion. 3. Integracion, al Comite para la reacreditacion de la Licenciatura en Ciencias de la Computacion, de la Coordinadora del programa academico. 4. Revision de las recomendaciones dadas a esta unidad academica por el CONAIC en el 2004 con motivo de la acreditacion del programa LCC. 5. Re-estructuracion de la pagina disenada para la acreditacion de la ICC para dar cabida a los documentos de trabajo de la reacreditacion de la LCC. 6. Solicitud a las autoridades competentes de la informacion requerida para documentar el periodo por reacreditar 2004-2008. Las actividades contempladas para el segundo semestre del 2009 se detallan a continuacion: 1. Integracion de la informacion y elaboracion del documento de autoevaluacion, segunda semana de agosto 2009. 2. Realizacion de la prueba de consistencia previa presentacion al CUA del documento de autoevaluacion, tercera semana de agosto 2009. 3. Envio de la solicitud al CONAIC para la visita de evaluacion final, cuarta semana de agosto 2009. 4. Visita de Evaluacion a la FCC por parte del comite tecnico asignado por el CONAIC, octubre 2009. La experiencia adquirida por el comite para la acreditacion durante el proceso realizado en el ano 2008, asi como los resultados alcanzados nos permite augurar el exito en esta empresa. Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 13 II. FORTALECIMIENTO DEL PROGRAMA EDUCATIVO DEL NIVEL POSGRADO En la actualidad no se cuestiona la necesidad de la practica de la investigacion, en los niveles medio superior, tecnico y superior para mejorar la formacion integral del estudiante. Para lograr lo antes mencionados se requieren estrategias tanto de caracter academico como administrativo, que permitan por una parte contar con profesores y asesores que fortalezcan las lineas de investigacion de los programas academicos, y que por otra parte faciliten las actividades relacionadas con la organizacion y asistencia a reuniones academicas, asi como la publicacion de los resultados de investigacion, acciones que derivan en el reconocimiento de la labor docente e investigativa. Las acciones relacionadas para implementar estas estrategias se detallan en las secciones siguientes: 1. Conformacion de la planta academica del posgrado 2. Profesores investigadores visitantes y estancias posdoctorales Consideramos de fundamental importancia contar con profesores visitantes que colaboren con los profesores de nuestra facultad y que a la vez se involucren en las actividades docentes, como es el caso del Dr. Jose Raymundo Marcial Romero, egresado de nuestra facultad y actualmente profesor investigador de la Universidad Autonoma del Estado de Mexico campus Toluca, quien se encuentra en nuestra facultad realizando una estancia posdoctoral apoyada por CONACYT por el periodo enero 2009-enero 2010. Planta Basica del Posgrado Altamirano Robles Luis Carlos Bautista Ramos Cesar Bermudez Juarez Maria Blanca del Carmen Cortes Jose Italo Leon Chavez Miguel Angel Martin Ortiz Manuel Isidro Olmos Pineda Ivan Perez de Celis Herrero Maria de la Concepcion Pineda Torres Ivo Humberto Pinto Avendano David Eduardo Rangel Huerta Alejandro Sanchez Lopez Abraham Sanchez Rinza Barbara Emma Sandoval Solis Maria de Lourdes Sommodevilla Garcia Maria Josefa Vilarino Ayala Darnes Zacarias Flores Fernando Zepeda Cortes Claudia Benemerita Universidad Autonoma de Puebla 14 Facultad de Ciencias de la Computacion | Segundo Informe de Labores El Dr. Marcial Romero trabaja en el proyecto Semantica de Lenguajes de Programacion para numeros reales exactos, con la participacion de la profesora Claudia Zepeda Cortes como su anfitriona y adicionalmente dirige el seminario Topologia sintetica de tipos de datos y espacios clasicos. 3. Durante los periodos de otono 2008 y primavera 2009 la totalidad de los cursos del posgrado fueron impartidos por profesores con doctorado. Sin embargo, con el fin de impulsar el trabajo colegiado, los profesores con maestria siguen colaborando como codirectores en aquellos trabajos de tesis relacionados con proyectos de los grupos de investigacion en los que participan. Bajo este mismo esquema de integracion y colaboracion, entre los cuerpos colegiados, los cursos propedeuticos del programa siguen siendo impartidos en su mayoria por profesores con grado de maestria. 4. Con el fin de que el 100% de los profesores que imparten catedra en la maestria cuenten con el Perfil PROMEP, se ha financiado la impresion de dos libros, se han destinado recursos del PIFI 2007 y 2008 para la presentacion de ponencias en congresos y para la publicacion (capitulos de libros, revistas indexadas y memorias en extenso) de trabajos de investigacion. Los montos invertidos se detallan en la seccion correspondiente al reporte financiero. 5. En cuanto a la produccion academica se han publicado un total de 46 articulos de investigacion de los cuales 20 han sido de caracter internacional y 26 de tipo nacional, del total 28 contaron con la participacion de alumnos. 6. Fieles a la tradicion y conscientes de la importancia que tienen los eventos academicos en la facultad, tales como son los congresos, simposios, talleres, ciclos de conferencias, etc, se realizo el VI Congreso Nacional de Ciencias de la Computacion CONCIC 2008, del 5 al 7 de Noviembre de 2008, en este se presentaron: a) Un total de 31 articulos de los cuales el 71% fueron realizados en trabajo conjunto entre profesores y alumnos de la facultad. b) Se conto con seis conferencias magistrales con destacados ponentes de la UNAM, INAOE, UTP, ITESM, BUAP, etc. c) Durante los tres dias que duro el congreso se presentaron 43 trabajos de investigacion en formato de cartel. d) Se impartieron tres talleres con valor curricular: el taller de multimedia, el taller de GLScene y el Taller de Criptografia. Todos con una duracion de 8 horas curriculares. Simultaneo al congreso se desarrollo por primera vez el Foro Estatal de Estudiantes de Posgrado con el fin de identificar puntos de interes comun y analizar las experiencias durante los procesos de aprendizaje e investigacion. Mencion especial fue el merecido Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 15 homenaje a su trayectoria y aportacion a las Ciencias de la Computacion que se le rindio al Dr. Harold V. McIntosh dentro de la celebracion de los 50 anos de la Computacion en Mexico, en el que participaron tanto ex-alumnos del doctor como las personas que colaboran actualmente con el. 7. Organizados en su mayoria a iniciativa de los Cuerpos Academicos, con el apoyo de los miembros de la comunidad, se llevaron a cabo siguientes eventos academicos y de investigacion. Evento Organizador Fecha de Realizacion 13a. Olimpiada Mexicana de Informatica (OMI) BUAP-FCC. Martin Ortiz Manuel Isidro Junio-julio de 2008 VI Congreso Nacional de Ciencias de la Computacion (CONCIC) 2008. Facultad de Ciencias de la Computacion Noviembre de 2008 Jornadas de Optimizacion, Analisis Numerico y Aplicaciones. CA de Computacion Matematica Noviembre de 2008 Workshop LANMR-08. IV Taller Latinoamericano de Logica y Razonamiento No Monotonico CA de Sistemas de Informacion Octubre de 2008 Curso de Redes Neuronales Artificiales Sanchez Lopez Abraham Enero de 2009 Curso de Metaheuristicas de Optimizacion Combinatoria en Clasificacion Automatica CA de Computacion Matematica Enero de 2009 Taller de Plegado de Proteinas y la Inteligencia Artificial INAOE-FCC. Olmos Pineda Ivan Abril de 2009 I Feria de Proyectos de fin de Cursos de la FCC Galicia Hernandez Yalu Enero de 2009 Primera Semana de la Biblioteca Cuayahuitl Romero Laura Febrero de 2009 Workshop en Web Semantica y Nuevas Tecnologias CA de Sistemas de Informacion Marzo de 2009 8. Publicaciones Nuestra Facultad a traves de la Secretaria de Investigacion y Estudios de Posgrado y Fomento Editorial de la BUAP, han publicado los titulos siguientes: LIBROS: FCC. Cuerpos Academicos: Avances de Investigacion Aplicada en Ciencias de la Computacion. Primavera de 2009. ISBN: en tramite. Publicado con apoyo PROMEP. Benemerita Universidad Autonoma de Puebla 16 Facultad de Ciencias de la Computacion | Segundo Informe de Labores Beltran-B., De la Rosa-R., Castillo-H., Mendoza-L., Vilarino-D. Sistemas Operativos Centralizados y Distribuidos. Primera Edicion. Otono 2008. ISBN: en tramite. Libro de tutores. Investigaciones, Experiencias, analisis y resultados. MEMORIAS del CONCIC 2008: FCC. Teoria, Algoritmos y Aplicaciones en Computacion. ISBN: 978-607-7541-89-9. II.1. Organizacion del Posgrado En aras de continuar consolidando el posgrado, en este segundo ano se han llevado a cabo tres sesiones ordinarias de academia mas 15 reuniones del comite academico del programa. Asimismo, la coordinacion academica del posgrado en conjuncion con la Secretaria de Investigacion y Estudios de Posgrado han realizado las siguientes actividades orientadas a incrementar la calidad del posgrado: Se creo un programa emergente para mejorar los indices de excelencia con vistas a la proxima evaluacion del posgrado por el CONACYT, que incluye la revision de planes de estudio. Se han emitido acuerdos encaminados a mejorar la demanda del posgrado en el pais, tales como incrementar la difusion y cambiar los requerimientos de ingreso, asi como reactivar y proponer la creacion de nuevos esquemas de titulacion. Se creo y se presento ante la academia y la direccion, el Plan Anual de Trabajo 2009 para el posgrado, junto con la calendarizacion de las actividades del mismo. Se evaluo a un total de 18 aspirantes a ingresar al posgrado, seleccionando 12 para su ingreso a la generacion 2008-2010. Se nombraron Comites Tutorales para el seguimiento de los trabajos de tesis de los estudiantes de la generacion 2007-2009. Se ha supervisado la evolucion de los trabajos de tesis de los estudiantes de la Generacion 2007-2009, y de generaciones anteriores, con el fin de aumentar el indice de titulacion. Se han incorporado nuevos profesores con grado de doctor y algunos pertenecientes al SNI. Se ha discutido, al interior del Comite Academico del Posgrado, la creacion de cursos extracurriculares para complementar la preparacion de los estudiantes del posgrado. Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 17 II.2. Diversificar la Oferta 1. En reunion de la planta basica del posgrado, se aprobo en lo general la creacion del programa de maestria profesionalizante en Tecnologias de la Informacion. El documento, con el estudio de viabilidad y programa de estudios, se enviara al CUA de esta unidad academica para su analisis y aprobacion para poder ofertarlo en la primavera 2010. 2. Con la instalacion de la Academia de Posgrado DESIT en septiembre de 2008 se inicio el desarrollo de un posgrado (doctorado) conjunto entre las cinco unidades academicas de la DESIT. La coordinacion de dicha academia de posgrado esta a cargo de la FCC a traves de la figura del director de la misma, Dr. Mario Rossainz Lopez. Hasta el momento se han realizado dos reuniones de trabajo de la academia de posgrado de la DESIT y se cuenta ya con una propuesta de Plan de Trabajo sobre la puesta en marcha del posgrado conjunto sobre cinco objetivos estrategicos: Consolidacion de los posgrados de la DESIT con miras a evolucionar a programas doctorales. Incremento de la calidad y pertinencia del posgrado nacional. Promocion de la internacionalizacion del posgrado y la cooperacion inter-facultades e interinstitucional. Fortalecimiento de la cooperacion entre los diversos sectores de la sociedad. Evaluacion y correccion sistematica, por parte del Comite de posgrado de la DESIT, de los estudios de posgrado. Los cuales se llevaran a cabo a traves de acciones incrementales estratificadas por niveles: Nivel 0: Etapa 1 Elaboracion de la Justificacion de un Programa de Doctorado Estudio de mercado para detectar perfiles, competencias y necesidades no cubiertas por otros programas de doctorado en el edo. de Puebla. Justificacion dentro de la DESIT sobre la base de identificar fortalezas y debilidades de cada UA. Documento de aportes por cada UA en cuanto a competencias academicas. Benemerita Universidad Autonoma de Puebla 18 Facultad de Ciencias de la Computacion | Segundo Informe de Labores Etapa 2 Profesores Participantes Perfil minimo que deben cubrir los posibles profesores participantes (Planta Academica) y perfil deseado. Numero minimo de profesores investigadores deseado. Etapa 3 Investigacion y Vinculacion Solicitar a la VIEP entrega de reporte de los diferentes proyectos de vinculacion que el Centro Universitario de Vinculacion ha atendido. A partir del reporte anterior identificacion de areas de vinculacion y aplicacion de conocimiento. Se propone elaborar un estudio de factibilidad para que el programa de doctorado inicie con actividades de vinculacion, posteriormente evolucionar a obtener resultados de investigacion. Nivel 1: Etapa 1 Necesidades Financieras Generacion de recursos para funcionar sin apoyo CONACyT, a partir del informe de la etapa 3 punto 1. Plan de prioridades de vinculacion. Considerar que empresas pudieran participar como patrocinadores del programa de doctorado sobre la base de las nuevas reglas del programa de estimulos fiscales (CONACyT) de manera que sean fuente de inyeccion de dinero al programa. Etapa 2 Creacion del Doctorado Multidisciplinario. III. SUPERACION DEL PERSONAL ACADEMICO Y BIENESTAR LABORAL III.1. Consolidacion de las Areas de Conocimiento A raiz de los trabajos relacionados con la puesta en marcha del Modelo Universitario Minerva el trabajo por areas de conocimiento se ha fortalecido, iniciandose una serie de actividades que involucran no solamente la revision y evaluacion de los programas de las asignaturas pertenecientes a las diferentes areas, sino que versan sobre las politicas de pertenencia y permanencia a un area determinada, actualizacion y propuesta de mecanismos de superacion academica, elaboracion de examenes departamentales y la organizacion y formulacion de proyectos conjuntos que permitan, a corto plazo, contar con un plan de desarrollo por area de conocimiento. Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 19 III.2. Oportunidad Laboral 1. Las siguientes tablas muestran la evolucion de la planta docente desde el inicio de esta gestion en junio de 2007. a) Planta docente por tipo de contratacion b) Planta docente con plazas definitivas y por contrato determinado Tipo de Plaza Junio 2007 Junio 2008 Junio 2009 TC 71 75 79 MT 11 10 9 HC 21 19 18 Total 103 104 106 Definitivos Determinados Ano TC MT TC MT HC junio 2008 66 6 9 4 19 72 32 TC MT TC MT HC junio 2009 74 2 5 7 18 76 30 Benemerita Universidad Autonoma de Puebla 20 Facultad de Ciencias de la Computacion | Segundo Informe de Labores La planta de profesores atiende a los tres programas academicos de la facultad y esta conformada por 34 profesores con grado de Doctorado, 62 con grado de Maestria y 10 con Licenciatura. La siguiente tabla presenta por ano a partir de mayo 2007 la transformacion de la planta docente por grado academico. c) Planta docente por grado academico Grado Academico Mayo 2007 Junio 2007 Mayo 2008 Junio 2009 Doctores 29 28 29 34 Maestros 65 63 64 62 Licenciados 12 12 11 10 Total 106 103 104 106 2. Se realizaron las gestiones ante la Comision para la Integracion y Gestion Academica y Administrativa (CIGAA) y las instancias correspondientes, para solicitar mejoras en las plazas de los profesores obteniendose definitividades y promociones para los docentes que se mencionan a continuacion, las cuales se hicieron efectivas en septiembre de 2008 y en febrero de 2009. Profesor Definitivo en Colmenares Guillen Luis Enrique PI Titular A TC Herrera Cobian Diego Guadalupe PI Asociado B TC Moyao Martinez Yolanda PI Asociado B TC Definitividades otorgadas a los profesores de la FCC septiembre de 2008 Profesor Categoria Anterior Categoria Actual Antiguedad Anzures Garcia Mario PI Asociado A TC PI Titular A TC Definitivo 14 anos Ata Perez Apolonio PI Asociado C TC PI Titular A TC Definitivo 24 anos Espinoza Hernandez Nelva Betzabel PR Asignatura HC 12 B PI Asociado A MT Determinado 3 anos Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 21 Profesor Categoria Anterior Categoria Actual Antiguedad Garcia Tamayo Rosa PI Asociado A TC PI Asociado C TC Definitivo 11 anos Guillen Galvan Carlos PI Asociado B TC PI Titular B TC Definitivo 22 anos Larios Gomez Mariano PI Asociado B MT PI Asociado A TC Definitivo 4 anos Martinez Camarillo Carlos Adrian PI Asociado C TC PI Titular A TC Definitivo 33 anos Martinez Guzman Gerardo PI Asociado C TC PI Titular B TC Definitivo 14 anos Perez de Celis Herrero Ma. de la Concepcion PI Asociado C TC PI Titular B TC Definitivo 5 anos Pinto Avendano David Eduardo PI Titular A TC PI Titular B TC Definitivo 8 anos Sanchez Lopez Abraham PI Titular B TC PI Titular C TC Definitivo 11 anos Torres Leon Jose Esteban PI Asociado C TC PI Titular A TC Definitivo 26 anos Trinidad Garcia Gregorio PI Titular A MT PI Asociado A TC Definitivo 3 anos Promociones otorgadas a los profesores de la FCC septiembre de 2008 Profesor Definitivo en Salazar Martinez Hilario Definitividades otorgadas a los profesores de la FCC febrero de 2009 Profesor Categoria Anterior Categoria Actual Antiguedad Cuayahuitl Romero Laura PI Titular A MT PI Titular A TC 5 anos Molina Garcia Maria Del Consuelo PI Asociado B MT PI Asociado A TC 5 anos Palomino Jimenez Carlos PR Asignatura HC MT 5 anos Rodriguez Hernandez Miguel PI Asociado B MT PI Asociado A TC 4 anos Tovar Vidal Mireya PI Asociado B TC PI Titular A TC 7 anos Zamora Lima Carlos PR Asignatura HC MT 5 anos Promociones otorgadas a los profesores de la FCC febrero de 2009 Benemerita Universidad Autonoma de Puebla 22 Facultad de Ciencias de la Computacion | Segundo Informe de Labores 3. Dado que la mejora de las condiciones laborales es derecho de todos, se realizaron tambien las gestiones pertinentes para solicitar mejoras en las plazas de los trabajadores no academicos de la FCC, obteniendose las siguientes transformaciones para los companeros administrativos y de intendencia, las cuales se hicieron efectivas en el mes de noviembre de 2008. Promociones otorgadas a personal no academico de la FCC noviembre 2008 4. En este ano de gestion se realizaron tambien las contrataciones de cinco nuevos profesores que satisfacen el perfil conforme a las necesidades detectadas en diferentes programas ofertados por la FCC. Profesor Categoria Perfil Ayaquica Martinez Irene PR Asignatura HC 18 B Doctora en Ciencias Computacionales Carballido Carranza Jose Luis PR Asignatura HC 17 B Doctor en Matematicas con Especialidad en Logica Matematica Garcia Ramirez Ruben Senen PR Asignatura HC 12 B Doctor Lemuz Lopez Rafael PR Asignatura HC 16 B Doctor en Ciencias Computacionales Rios Acevedo Carlos Armando PI Asociado A MT Candidato a Maestro en Ingenieria y Desarrollo de Software Profesores de Nueva Contratacion Es importante senalar que estas contrataciones se realizaron a traves de la CIGAA de acuerdo con el RIPPPA. Trabajador Categoria Anterior Categoria Actual Antiguedad Ruiz Montiel Jose Rene Auxiliar Administrativo B TC Programador A 16 anos Torres Romero Ines Archivista Clasificador A Programador B 4 anos Serrano Hernandez Mauricio Gerardo Auxiliar Administrativo B TC Programador A 13 anos Castillo Aviles Maria Herminia Auxiliar de Servicios TC Auxiliar Administrativo B 8 anos Reyes Magno Sergio Auxiliar de Servicios TC Auxiliar Administrativo B 8 anos Castaneda Maria Tomasa Nomina Interna (Cubriendo Incapacidad por enfermedad) Creacion de la plaza de Auxiliar de Servicios TC 4 anos Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 23 5. Durante este segundo ano de gestion presento su renuncia la profesora: Torrijos Munoz Maria Teresa y tuvimos la perdida irreparable de dos companeros universitarios a los que recordamos y agradecemos por siempre su compromiso de trabajo Manuel Rubin Falfan Adela Ruiz Olazo. III.3. Integracion de la Planta Docente al Programa de Superacion Academica Actualmente se encuentran cinco profesores en permiso por superacion academica, dos profesores en ano sabatico y uno en estancia pos-doctoral, como se detalla a continuacion: Profesor Grado a Obtener Institucion Fecha de Reincorporacion Bernabe Loranca Maria Beatriz Doctor en Investigacion de Operaciones UNAM 16 /mayo/2010 Chavira Martinez Elsa Doctora en Ingenieria Biomedica UPAEP 14 /noviembre/2011 Cervantes Marquez Ana Patricia Doctora en Tecnologias de Informacion UPAEP 01/enero/2010 Carillo Ruiz Maya Doctor en Ciencias de la Computacion INAOE 22 /agosto/2009 Lopez Andrade Carlos Alberto Doctor en Matematicas UAM 23/agosto/2009 Superaciones Academicas Profesor Permiso Institucion Fecha de Reincorporacion Boone Rojas Maria del Rocio Ano Sabatico Centro Nacional de Investigacion y Desarrollo Tecnologico (Cuernavaca) julio/2009 Aguirre Vara Ramon Ano Sabatico Secretaria de Desarrollo Rural (Tamaulipas) julio/2009 De Ita Luna Guillermo Pos-doctorado Universidad Politecnica de Lille 1 (Francia) octubre/2009 Estancias Sabaticas y Pos-doctorales III.4. Profesores con Perfil Deseable PROMEP Desde el ano de 1996 la SEP ha coadyuvado con el fortalecimiento de la planta academica a traves del Programa de Mejoramiento del Profesorado (PROMEP), que fue disenado para mejorar el nivel de habilitacion del personal academico de tiempo completo, fomentando el desarrollo y consolidacion de los cuerpos academicos, segun lo estipula el diario oficial de la Benemerita Universidad Autonoma de Puebla 24 Facultad de Ciencias de la Computacion | Segundo Informe de Labores federacion en el acuerdo numero 417 de diciembre de 2007. El reconocimiento PROMEP es renovable cada tres anos y es muy grato informar que los profesores de la facultad que lo han obtenido en la mayoria de los casos lo han mantenido. Perfil PROMEP Mayo de 2004 Mayo de 2005 Mayo de 2006 Mayo de 2007 Mayo de 2008 Mayo de 2009 16 20 21 26 27 28 Los profesores que cuentan actualmente con el perfil PROMEP son: Profesores con Perfil PROMEP Nombre Vigencia Ariza Velazquez Eduardo 30/06/2011 Ata Perez Apolonio 30/07/2011 Bautista Ramos Cesar 20/09/2010 Bello Lopez Pedro 30/07/2011 Beltran Martinez Beatriz 20/09/2010 Bermudez Juarez Maria Blanca del Carmen 14/11/2009 Bustillo Diaz Mario Mauricio 30/07/2011 Castillo Zacatelco Hilda 30/07/2011 Cortez Jose Italo 14/11/2009 De Ita Luna Guillermo 20/09/2010 Gonzalez Velazquez Rogelio 14/11/2009 Leon Chavez Miguel Angel 20/09/2010 Lopez y Lopez Fabiola 30/07/2011 Perez de Celis Herrero Maria de la Concepcion 30/07/2011 Pineda Torres Ivo Humberto 20/09/2010 Rangel Huerta Jose Alejandro 20/09/2010 Rossainz Lopez Mario 14/11/2009 Sanchez Galvez Alba Maribel 20/09/2010 Sanchez Galvez Maria Eugenia Narcisa Sully 20/09/2010 Sanchez Lopez Abraham 20/09/2010 Sanchez Rinza Barbara Emma 20/09/2010 Sandoval Solis Maria de Lourdes 20/09/2010 Somodevilla Garcia Maria Josefa 20/09/2010 Tovar Vidal Mireya 14/11/2009 Vazquez Flores Jose Andres 30/07/2011 Vera Cervantes Eugenia Erica 14/11/2009 Vilarino Ayala Darnes 30/07/2011 Zacarias Flores Fernando 30/07/2011 De los 13 profesores que presentaron solicitudes para perfil PROMEP en la convocatoria 2008-1, diez lo obtuvieron (eso equivale al 77% de los profesores que participaron el ano anterior). En la convocatoria 2009-1 se presentaron 27 solicitudes de profesores de la FCC para la obtencion o renovacion del Perfil Deseable bajo las siguientes categorias: Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 25 1. Profesores que tienen que renovar el Reconocimiento de Perfil Deseable. 2. Profesores que se encuentran en Cuerpos Academicos y que no tienen Perfil Deseable. 3. Profesores que cuentan con el grado de Maestria sin reconocimiento de perfil deseable. 4. Profesores que cuentan con el grado de Doctor sin reconocimiento de perfil deseable. Las solicitudes de la convocatoria 2009 se entregaron conforme al calendario PROMEP en los meses de marzo y abril pasados, los dictamenes se esperan para la segunda mitad del mes de julio. Nombre Del Profesor Categoria Analco Martin Estrada 1 Anzures Garcia Mario 2 Archundia Sierra Etelvina 3 Bermudez Juarez Maria Blanca del Carmen 1 Ceron Garnica Carmen 3 Colmenares Guillen Luis Enrique 3, 2 Contreras Gonzalez Meliza 3 Cortez Jose Italo 1 De la Rosa Flores Rafael 3 Galicia Hernandez Yalu 3 Garcia Juarez Pedro 4 Gonzalez Flores Marcos 3, 2 Gonzalez Velazquez Rogelio 1 Guillen Galvan Carlos 4 Larios Gomez Mariano 3 Lavalle Martinez Jose de Jesus 3 Lopez Andrade Carlos Alberto 3 Martin Ortiz Manuel Isidro 2, 4 Mendoza Alonso Leticia 3 Moyao Martinez Yolanda 3 Olmos Pineda Ivan 4 Pinto Avendano David Eduardo 2, 4 Romero Tehuitzil Olivia 3 Tovar Vidal Mireya 1 Trinidad Garcia Gregorio 3 Vera Cervantes Eugenia Erica 1 Zepeda Cortes Claudia 4 Benemerita Universidad Autonoma de Puebla 26 Facultad de Ciencias de la Computacion | Segundo Informe de Labores Docentes TC con perfil PROMEP 28 Docentes de TC sin perfil PROMEP Docentes de TC que no presentaron solicitud para perfil PROMEP 29 Docentes de TC que presentaron solicitud para perfil PROMEP 22 Total de Docentes de TC 79 IV. INTEGRACION SOCIAL Y MOVILIDAD DOCENTE IV.1. Creacion de Redes de Colaboracion Academica Durante todo el ano 2008 las cinco unidades academicas que conformamos la DESIT hemos trabajado para definir una estructura de soporte academico-administrativa que le de funcionalidad. Razon por la cual ademas de la conformacion de la COMUMIT, integrada por los directores y secretarios academicos de las unidades academicas pertenecientes a la DESIT, con el objetivo de trabajar en la implementacion del MUM, se han creado: La Academia de Licenciatura DESIT, integrada por los secretarios academicos y los coordinadores de los 18 PE de licenciatura de la DESIT. La Academia de Posgrado DESIT integrada por los secretarios de posgrado y coordinadores de todos los programas de posgrado de la DESIT. El Grupo y Comisiones de Actualizacion Curricular DESIT, integrados por los coordinadores de los PE de licenciatura y comisiones de evaluacion y seguimiento curricular de los PEs de licenciatura. Academias de area especifica de la DESIT como son las areas de Ciencias Basicas, Investigacion-Innovacion y Desarrollo Tecnologico, Formacion Integral, Consejo de Integracion Social DESIT y el Comite de Calidad DESIT. Actualmente en la DESIT es necesario que exista una normatividad interna y convenios que regulen el trabajo de las comisiones antes mencionadas, por lo que se esta trabajando en la creacion de: Lineamientos internos de titulacion DESIT, Lineamientos de Practicas Profesionales y Servicio Social escolarizado DESIT, Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 27 Lineamientos de las academias DESIT, Lineamientos para la innovacion y Gestion de la Calidad DESIT, Lineamientos de Administracion de la Unidad de Desarrollo Tecnologico y Servicios DESIT. IV.2. Vinculacion con Diferentes Actores Sociales 1. Conforme a los objetivos plasmados en el plan de desarrollo, la Facultad de Ciencias de la Computacion busca una vinculacion solida con el sector productivo y de servicios de la region. En el primer ano de gestion concretamos el convenio de colaboracion y trabajo conjunto con el CITIP (Centro de Innovacion de TI-Puebla). Esto ha permitido que en el ano 2008 la Facultad participe con un grupo de profesores y alumnos en diversos programas de capacitacion y desarrollo de software con tecnologia Microsoft, como son: La Primera Jornada de Certificacion en Tecnologias Microsoft o MCTS, donde fueron aceptados 18 alumnos de ultimos cuatrimestres que se postularon para iniciar la certificacion Microsoft Certified Technology Specialist (MCTS), que arranco en junio del ano pasado. La certificacion de dos academicos de la Facultad, la profesora Hilda Castillo Zacatelco y el profesor Rafael de la Rosa Flores, en MCTS, MCTS-.NET y MCTS-SQL server. Cabe hacer mencion que ambos profesores estan en la etapa final de su capacitacion y han empezado a ofrecer la replica a los alumnos de la FCC, dentro del programa de Fabricas de Software. Se continua trabajando con el CITIP y se incursionara proximamente en el programa LiveEdu de Microsoft y Mexico_First que es un programa en el que el gobierno, la industria y las universidades unen esfuerzos, recursos e infraestructura para apoyar la capacitacion y certificacion de los alumnos en diversas tecnologias, en este caso en el SUN CERTIFIED JAVA PROGRAMMER (SCJP) y SUN CERTIFIED JAVA DEVELOPER (SCJD). Respecto al seguimiento de la colaboracion con T-Systems, se esta en vias de firmar un convenio marco entre esta empresa y nuestra maxima casa de estudios, lo cual nos permitira en un futuro cercano concretar proyectos con ellos a traves del correspondiente convenio especifico. Como socios academicos hasta el momento hemos realizado la difusion de diferentes convocatorias de interes para la poblacion estudiantil de nuestra facultad, tal es el caso de la CONVOCATORIA PARA EL RECLUTAMIENTO DE ALUMNOS DE LA FACULTAD DE CIENCIAS DE LA COMPUTACION PARA CONTRATACION EN T-SYSTEMS para cubrir 100 vacantes del perfil Help-Desk, lanzada en el mes de abril de 2009 con una participacion de mas de 20 solicitudes. 2. En cuanto al sector publico tenemos relacion de trabajo, a traves del CITIP, con la Secretaria de Desarrollo Social (SEDECO) y con el FISEP (Fomento a la Industria Benemerita Universidad Autonoma de Puebla 28 Facultad de Ciencias de la Computacion | Segundo Informe de Labores del Software en el Estado de Puebla), ademas de continuar con los convenios con el H. Ayuntamiento y la Secretaria de Finanzas y Administracion en lo relativo a practicas profesionales y servicio social. 3. Parte importante de la vinculacion que la facultad busca con el sector productivo y de servicios, asi como con dependencias del gobierno, es la participacion de esta en el Grupo Asociativo para la Competitividad Desarrollo de Software y Movilidad (GAC-DSM), , que impulsa el gobierno del estado junto con los lideres empresariales mas importantes de la region y las universidades mas prestigiadas de Puebla. Los objetivos del GAC son: Representar al conjunto de Empresas y Universidades enfocadas al desarrollo de aplicaciones moviles del Estado de Puebla. Mostrar a Puebla como un referente en al ambito de las tecnologias de la Informacion. Articular y favorecer la relacion con organismos e instituciones lideres en desarrollo de aplicaciones moviles. Activar la relacion entre los integrantes del GAC para establecer lineas articuladas de trabajo. Promover la cultura de la Innovacion. 4. CERTIFICACION SAP BICCONSULTING: La FCC desde principios del ano 2008 lleva a cabo un convenio de colaboracion con la Empresa BicConsulting para certificar en SAP a nuestros alumnos de ultimos cuatrimestres y egresados. Tenemos ya cinco alumnos certificados y seis mas estan actualmente en proceso de certificacion. Es importante mencionar que la certificacion en SAP es gratuita para los alumnos de la facultad que se estan certificando, ya que BicConsulting hace a su vez convenios con las empresas que le solicitan recursos humanos en esta tecnologia y son estas ultimas quienes pagan las certificaciones, con el compromiso de que el alumno que se certifica trabaje para la empresa que le pago su certificacion por un ano. Tal es el caso de la empresa T-Systems que ha pagado las certificaciones de cinco alumnos en la primera convocatoria y que actualmente laboran para la empresa. 5. RECLUTAMIENTO MICROSOFT 2008: El jueves 25 de septiembre de 2008 se llevo a cabo el reclutamiento de recursos humanos por parte de Microsoft en el ITESM-Campus Puebla en donde la FCC participo con 12 candidatos, alumnos de ultimos cuatrimestres y pasantes. 6. DREAMSPARK: En el mes de febrero de 2009 la FCC se adhiere al programa DreamSpark de Microsoft. Dreamspark es una iniciativa para impulsar a la comunidad de creadores en las escuelas de nuestro pais y el mundo, en el que se incluye la iniciativa de proporcionar a los estudiantes acceso sin costo alguno a herramientas profesionales de Microsoft para desarrollo de aplicaciones, Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 29 videojuegos y diseno grafico; al igual que capacitacion en linea para el uso de estas aplicaciones. Con esta asociacion Microsoft se compromete a otorgar acceso a los estudiantes activos de la FCC al programa Dreamspark, por un plazo inicial de un ano, a traves de codigos personalizados los cuales son utilizados por cada uno de los estudiantes para acceder al servidor de Dreamspark. Por su parte la FCC se ha comprometido a hacer entrega de los codigos de acceso al servidor Microsoft solo a estudiantes activos (un codigo por estudiante). El coordinador del Programa DreamSpark en la FCC es el profesor Enrique Colmenares Guillen quien ya ha difundido y hecho del conocimiento de nuestros estudiantes la disponibilidad de este programa, a fin de que cada uno de ellos pueda disponer de los beneficios de DreamSpark. 7. CSIC: En marzo de 2008 a la FCC presento al Sr. Rector de nuestra institucion el proyecto denominado Centro de Mantenimiento y Servicios Preventivos de Equipos de Computo, para constituir la primera empresa de la facultad con miras a crear posteriormente el Centro de Consultoria de Desarrollo de Software. El 17 de abril de 2008 se autorizo dicho proyecto a traves de tesoreria de la BUAP se otorgo un apoyo por $30,000.00 para el inicio de actividades. El dia 5 de junio de 2008 en sesion ordinaria de CUA se aprueba en lo general dicho proyecto, quedando a consideracion del CUA la elaboracion de reglamentos para el buen funcionamiento del Centro de Mantenimiento. Se conformo tambien en esta reunion una comision de profesores y alumnos encargada de definir el proyecto administrativo del Centro de Mantenimiento durante el verano de 2008. La comision quedo conformada por: Ata Perez Apolonio (Coordinador del area de Hardware), Contreras Juarez Roberto (Consejero de Unidad), Gonzalez Velazquez Rogelio (Consejero de Unidad), Peralta Martinez Emmanuelle Abdiel (Consejero de Unidad), Tlaczani Conde Esther (Consejera de Unidad). El Centro de mantenimiento se establecio al interior de la facultad a finales del ano 2008 con el nombre de Centro de Servicios Integrales de Computo (CSIC) de la FCC. Esta coordinado por el profesor Apolonio Ata Perez y los objetivos principales del CSIC son: Obtener Recursos propios para la FCC. Vincular a la comunidad de la facultad con el mercado laboral. Brindar un servicio integral de calidad a la sociedad en cuanto a mantenimiento preventivo y correctivo de equipos de computo se refiere. Benemerita Universidad Autonoma de Puebla 30 Facultad de Ciencias de la Computacion | Segundo Informe de Labores Los beneficios que pensamos lograr son: Para la comunidad estudiantil: Capacitacion, Becas, Certificaciones, Experiencia Laboral. Para la Facultad de Ciencias de la Computacion: Ingresos propios, Soporte Interno, Capacitacion para docentes. Actualmente se dispone de un espacio fisico en el sotano del edificio 104 C, con todos los servicios necesarios como luz, agua, asi como internet inalambrico. El espacio ya fue acondicionado por la DGO y esperamos hacer la inauguracion formal en julio de 2009. Con el apoyo proporcionado por tesoreria para la inversion inicial del proyecto se proyecta adquirir el equipo necesario como multimetros, cautines de estacion, tapetes antiestaticos, aspiradores, juegos de desarmadores, entre otros. Finalmente, en lo relativo a la administracion y prestacion de servicios, en el mes de febrero de 2009 se llevo a cabo una reunion entre la FCC y las distintas dependencias de la BUAP que apoyaran al proyecto como son la Oficina de la Abogada General, Tesoreria, Contraloria, DAPI y Recursos Financieros Alternos, para establecer los lineamientos de generacion de convenios de prestacion de servicios correspondientes entre la facultad y sus clientes: dependencias de la BUAP, alumnos, profesores y sociedad en general, los cuales involucran la facturacion, expedicion de recibos de ingresos, depositos de los pagos a una cuenta especial y unica del CSIC, rendicion de cuentas, transparencia en el uso de los ingresos, entre otros. En cuanto a la administracion del CSIC se contara con el apoyo administrativo, por parte de la Direccion de Recursos Financieros Alternos, de dos personas para la logistica y administracion. La Direccion de Recursos Financieros Alternos apoyara tambien con personal certificado en diferentes areas para capacitar a los alumnos en servicios a servidores, pcs, laptops, equipos apple, etc. y otras certificaciones de software tales como .Net, Sql, Flash (actionscript), Ajax, MSSQL, etc. Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 31 IV.3. Convenios de Intercambio y Colaboracion Docente 1. Dando seguimiento al convenio entre la Facultad de Informatica de la Universidad de Camaguey y la Facultad de Ciencias de la Computacion de la BUAP, se concreto la imparticion parte de los cursos de actualizacion docente de la FCC en el verano 2008. El diplomado tuvo como objetivo que los participantes desarrollaran las habilidades necesarias para dirigir (planificar, organizar, ejecutar y evaluar) el proceso de ensenanza aprendizaje de la Informatica o de cursos asistidos por las tecnologias de la informacion y las comunicaciones. Se conformo de 6 modulos, cada uno de ellos de 40 horas dando un total de 240 horas curriculares, impartidas del 23 de junio al 1 de agosto de 2008, a saber: Nombre del Modulo Fechas No. de Horas Instructor o Coordinador Las Tecnicas Informaticas en la Creacion de Experiencias de Ensenanza Aprendizaje en el WWW 23 al 27 de junio de 2008 40 Fernandez Hernandez Yumilka B Diseno, Produccion y Evaluacion de Software Educativo 30 de junio al 04 de julio de 2008 40 Fernandez Hernandez Yumilka B Didactica de la Informatica 7 al 11 de julio de 2008 40 Palomino Palomino Magalys Didactica de la Educacion Virtual 14 al 18 de julio de 2008 40 Palomino Palomino Magalys La Informatica en la Educacion 21 al 25 de julio de 2008 40 Perez Gonzalez Olga Lidia La Evaluacion del Aprendizaje en la Ensenanza de la Informatica y en la Educacion Virtual 28 de julio al 01 de agosto de 2008 40 Perez Gonzalez Olga Lidia Agradecemos a nuestras colegas de Camaguey: La Mtra. Yumilka B. Fernandez Hernandez, la Mtra. Magalys Palomino Palomino y la Dra. Olga Lidia Perez Gonzalez la imparticion de dicho diplomado que sin duda fue muy provechoso y benefico para nuestros profesores de la facultad. Un agradecimiento especial al Lic. Damian Hernandez Mendez, titular de la DAGU de la BUAP quien sin su apoyo no hubiera sido posible la realizacion de este diplomado. 2. En lo referente a la movilidad estudiantil se ha propiciado que nuestros alumnos tengan la oportunidad de acceder a convenios de intercambio con universidades nacionales y extranjeras, hemos promovido que alumnos de otras universidades realicen parte de sus estudios en nuestra facultad. Esto ha sido posible gracias al Benemerita Universidad Autonoma de Puebla 32 Facultad de Ciencias de la Computacion | Segundo Informe de Labores apoyo de la Direccion General de Relaciones Internacionales e Intercambio Academico, a traves de su director el Mtro. Rafael Hernandez Oropeza. Los alumnos en movilidad e intercambio estudiantil en sus dos modalidades, internacional y nacional, durante este segundo ano de gestion fueron los siguientes: Nombre Universidad Destino Pais Destino Periodo Mendez Fontus Imanti Universidad de Regina Canada Primavera 2008 y Verano 2008 Tavera Cruz Antonio Universitat Kassel Alemania Otono 2008 Perez Valadez Andrea Universidad de Castilla de La Mancha Espana Primavera 2009 Robles Hernandez Fernando Universidad de Castilla de La Mancha Espana Primavera 2009 Movilidad Internacional Nombre Universidad Destino Programa Periodo Carretero Espinosa Israel Universidad Autonoma de Baja California Campus Tijuana Programa Nacional de Movilidad Estudiantil Otono 2008 Movilidad Nacional Nombre Universidad de Origen Pais de Origen Periodo Gregorio Duarte Alfonso Universidad Autonoma Metropolitana Mexico Otono 2008 Hernandez Cano Omar Asale Universidad Autonoma del estado de Hidalgo Mexico Otono 2008 Dehnert Jens Technische Universitat Clausthal Alemania Otono 2008 Alumnos de otras Universidades IV.4. Presencia de la FCC La Facultad de Ciencias de la Computacion participa activamente a nivel nacional en organismos, organizaciones y asociaciones que estan relacionados con la computacion, la informatica y las tecnologias de la informacion. CONAIC: Participacion por parte de la direccion de la FCC representando a la BUAP en la Asamblea General Ordinaria de Asociados. ANIEI: Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 33 El pasado 27 de noviembre de 2008 se llevo a cabo la Toma de Protesta de la Mesa Directiva de la -2010 en la que la FCC tiene presencia a traves de la Vocalia de Posgrado. El acto fue presidido por el Dr. Jose Lema Labadie, Rector de la UAM. Entre las actividades en las que la FCC ha colaborado en este organismo estan: Vinculacion con la Comision Especial para la Promocion del Acceso Digital a los Mexicanos. Vinculacion con la Comision de Ciencia y Tecnologia de la Camara de Diputados. Participacion en el Centro Latinoamericano de Estudios en Informatica (CLEI). Colaboracion con Intel de Mexico en el Taller de Capacitacion Multi-Core (en donde participo el profesor Rafael De La Rosa Flores). Creacion de la Sociedad Academia Industria Gobierno en TI. Convenio de Cooperacion Tecnica con el BID para el desarrollo del -academia-gobierno para el desarrollo de capacidades de capital humano en tecnologias de la Participacion de la FCC en la XVII Reunion Nacional de Directores de Escuelas y Facultades de Tecnologias de la Informacion que organiza la ANIEI en la Universidad del Caribe los dias 11, 12 y 13 de junio de 2008 en Cancun Quintana Roo, Facultad tuvo presencia como parte del comite organizador en el apoyo logistico relativo a las necesidades de Hardware y Software de las mesas de trabajo y a nivel de posicionamiento de ideas en las mesas de trabajo: Formacion de Recursos Humanos en Tecnologias de la Informacion . Investigacion y Desarrollo Tecnologico. Participacion en el XXI Congreso Nacional y VII Congreso Internacional de Informatica y Computacion los dias 1,2 y 3 de octubre de 2008 en la ciudad de Monterrey Nuevo Leon, teniendo presencia la FCC como organizador de las ponencias simultaneas del Congreso en conjuncion con la Universidad Veracruzana, asi como la imparticion del taller denominado UML. Benemerita Universidad Autonoma de Puebla 34 Facultad de Ciencias de la Computacion | Segundo Informe de Labores Participacion de la FCC en el XXI Certamen Nacional de tesis nivel Doctorado en el marco del XXI Congreso Nacional y VII Congreso Internacional de Informatica y Computacion de la ANIEI del 1 al 3 de octubre de 2008. Los profesores que participaron como jurado de dicho certamen fueron: Leon Chavez Miguel Angel Martin Ortiz Manuel Isidro Olmos Pineda Ivan Perez de Celis Herrero Maria de la Concepcion Rossainz Lopez Mario Sanchez Lopez Abraham Somodevilla Garcia Maria Josefa Vilarino Ayala Darnes Zacarias Flores Fernando Zepeda Cortes Claudia CENEVAL: La FCC esta representada en el Consejo Tecnico del EGEL-CENEVAL CCO de Ciencias Computacionales a traves del profesor Pedro Bello Lopez, quien funge como consejero representante institucional de la BUAP. La Facultad, a traves del profesor Bello, ha colaborado en el reforzamiento de la capacitacion de profesores durante el 2008, estimulando la produccion y validacion de los reactivos que son la materia prima del CENEVAL. Asi mismo la FCC tiene presencia a traves de la profesora Alma Delia Ambrosio Vazquez en la aplicacion de los examenes profesionales a todos aquellos aspirantes a obtener un titulo de licenciatura por parte del CENEVAL, acreditando experiencia profesional laboral por mas de 15 anos en el area de las ingenierias y tecnologias. La profesora Alma Delia Ambrosio Vazquez funge como sinodal del jurado calificador que aplica dichos examenes. De igual manera la FCC participo en la actualizacion de los reactivos del examen EGEL-CENEVAL del area de Ciencias Computacionales los dias 30, 31 de marzo y 1ro. de abril de 2009, validando ademas las tareas profesionales del EGEL-CCo. Participaron en total ocho academicos de la FCC: Ambrosio Vazquez Alma Delia Anzures Garcia Mario Bello Lopez Pedro Beltran Martinez Beatriz Castillo Zacatelco Hilda Rodriguez Hernandez Miguel Rossainz Lopez Mario Zepeda Cortes Claudia Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 35 IV.5. Educacion Continua, Diplomado y Servicio Social Las actividades academicas de la facultad se complementan con los cursos extracurriculares que se ofertan a traves de las coordinaciones de educacion continua y diplomado, asi como las actividades propias del servicio social. A continuacion se reporta el trabajo realizado por estas coordinaciones. 1. Educacion Continua. El objetivo general de la coordinacion de Educacion Continua es administrar y organizar cursos extracurriculares dentro y fuera de la facultad tanto para alumnos como para publico en general. La coordinacion de Educacion Continua estuvo a cargo de la profesora Hilda Castillo Zacatelco durante el periodo comprendido de noviembre de 2007 a febrero de 2009. A partir de marzo 2009 la nueva coordinadora de esta actividad es la profesora Yolanda Ramirez Encarnacion. Se realizaron 22 cursos en los cuales participaron 20 profesores ofreciendose un total de 848 horas. 2. Diplomado. Con mas de 13 anos de existencia, el programa de diplomado en computacion es uno de los programas mas antiguos de la FCC. Tiene por objetivo la especializacion de los profesionales de las Ciencias de la Computacion en las distintas areas emergentes de nuestra disciplina, ademas de ser una alternativa de titulacion para nuestros egresados. Durante este segundo ano de gestion se ofertaron y se concluyeron los siguientes programas de diplomado: 2 de septiembre de 2008, clausura 31 de marzo de 2009. Clausura de los Diplomados en Tecnologias de la Informacion y Bases de Datos de la generacion 2007, con fecha de 24 de julio de 2008. Clausura del Diplomado en Tecnologias de la Informacion 2008 (grupo en octubre de 2008. fecha 3 de marzo de 2009. Ademas se titularon por la opcion del diplomado once alumnos durante el 2008 y ocho alumnos en el periodo enero-abril de 2009. 3. Servicio Social. La coordinacion de Servicio Social de la FCC tiene como objetivo generar los mecanismos de gestion que permitan promover, intercambiar e impulsar el desarrollo integral del estudiante al realizar su servicio social. Benemerita Universidad Autonoma de Puebla 36 Facultad de Ciencias de la Computacion | Segundo Informe de Labores A traves de los convenios que nuestra maxima casa de estudios tiene con los sectores publico y privado, los estudiantes de la FCC cuentan con la opcion de poder realizar su servicio social en oficinas gubernamentales, hospitales, escuelas, empresas, o si lo prefieren, en alguna de las dependencias o unidades academicas de nuestra institucion. En el periodo que comprende de junio de 2008 a mayo de 2009 la coordinacion de servicio social de la FCC recibio a un total de 226 alumnos que se registraron para realizar su servicio social, distribuidos de la siguiente manera: Sector No. de programas ofertados No. de prestadores solicitados No. de prestadores inscritos Externo 237 884 73 BUAP 164 416 83 FCC 80 262 70 Total 481 1562 226 Ademas se han realizado 150 liberaciones de servicio social, de las cuales 87 se tramitaron en el periodo junio-diciembre de 2008 y 63 en enero-marzo de 2009. Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 37 V. INFORME FINANCIERO E INFRAESTRUCTURA V.1. Ingresos Los ingresos de la Facultad de Ciencias de la Computacion se dividen en: ingresos por fondos fijos (uno para la docencia a nivel licenciatura y el otro para el posgrado) e ingresos propios. Estos ultimos se obtienen a traves del posgrado, el programa de diplomado, los cursos de verano y de educacion continua. Existen otras fuentes de ingreso como son los PIFI e ingresos extraordinarios etiquetados, otorgados a la facultad a traves de la Tesoreria de la BUAP. Al cierre del informe anterior se tenia como saldo la cantidad de $ 218,785.41 (Doscientos dieciocho mil setecientos ochenta y cinco pesos 41/100 M.N), durante la primera semana de junio ingresaron en las cuentas de la FCC la cantidad de $ 43,058.87 (Cuarenta y tres mil cincuenta y ocho pesos 87/100 M.N), por lo que, al inicio del ejercicio 2008-2009 el saldo en bancos era de $ 261,844.28 (Doscientos sesenta y un mil ochocientos cuarenta y cuatro pesos 28/100 M.N.). Durante el periodo comprendido del 6 de junio de 2008 al 31 de mayo de 2009 recibimos los montos que se detallan a continuacion: PIFIs Cuerpos Academicos $ 329,450.00 $ 703,876.48 Apoyos PIFI (Acreditacion) $ 117,007.45 PIFI 2007 $ 123,366.03 PIFI 2008 $ 134,053.00 Apoyos Apoyos Especiales $ 26,750.00 $ 77,550.00 Apoyos Tesoreria $ 45,800.00 Apoyos CONCYTEP $ 5,000.00 FF Fondo Fijo Docencia $ 276,016.23 $ 407,185.83 Fondo Fijo Posgrado $ 131,169.60 Ingresos Propios Diplomado $ 391,242.00 $ 1,729,469.22 Posgrado $ 375,525.00 Educacion Continua $ 9,800.00 Cursos de Verano $ 477,080.00 Otros Ingresos $ 213,977.94 Remanente $ 261,844.28 Total De Ingresos $ 2,918,081.53 De los ingresos antes desglosados destacamos los provenientes por cursos de verano, posgrado, educacion continua y diplomados, ya que estos son la principal fuente de financiamiento propio con el que cuenta actualmente la FCC, como se muestra en la grafica siguiente podemos constatar que, el diplomado continua siendo una fuente importante de ingresos a pesar de la disminucion de los indices de demanda del mismo, razon por la cual se ha iniciado un estudio a profundidad sobre las alternativas de modernizacion de este proyecto, asi como la diversificacion de la oferta y modalidades del mismo, que permitan que los Benemerita Universidad Autonoma de Puebla 38 Facultad de Ciencias de la Computacion | Segundo Informe de Labores programas de diplomado sean competitivos y atractivos, no solo para nuestros alumnos y egresados, sino para los profesionistas del area en general. Ingresos Propios por Cursos Monto Diplomado $ 391,242.00 Posgrado $ 375,525.00 Educacion Continua $ 9,800.00 Cursos de Verano $ 477,080.00 V.2. Egresos FFP. Fondo Fijo Posgrado FFD. Fondo Fijo Docencia IP. Ingresos Propios Desglose de los Egresos de junio de 2008 a mayo de 2009 Rubro FFP FFD IP Apoyos PIFI PIFI Acreditacion Cuerpos Academicos Totales Apoyo a estudiantes y docentes $ 21,039.54 $ 16,212.41 $ 392,905.85 $58,554.30 $181,349.40 - $ 193,916.59 $ 863,978.09 Divulgacion, publicidad y propaganda $ 9,273.19 $ 4,002.00 $ 25,606.07 - - $ 61,088.00 - $ 99,969.26 Servicios Generales y Comerciales (Gastos de operacion) $ 80,835.54 $135,036.08 $ 293,769.83 $ 4,400.00 $ 10,000.00 $ 20,319.85 - $ 544,361.30 Mantenimiento General $ 3,531.63 $ 87,124.09 $ 201,691.02 - - $ 35,599.60 $ 24,000.00 $ 351,946.34 Acreditacion de la ICC - - - $14,595.70 - - - $ 14,595.70 Mobiliario y Equipo $ 1,370.80 $ 7,800.00 $ 61,777.37 - - - $ 20,000.00 $ 90,948.17 Sueldos y Salarios - - $ 573,527.85 - - - - $ 573,527.85 Becas Estudiantes - - $ 124,000.00 - - - $ 79,100.00 $ 203,100.00 Reembolso a PIFI - - - - $ 152.26 - - $ 152.26 Reembolso a Cuerpos Academicos - - - - - - $ 11,833.41 $ 11,833.41 TOTALES $116,050.70 $250,174.58 $1,673,277.99 $77,550.00 $191,501.66 $ 117,007.45 $ 328,850.00 $2,754,412.38 Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 39 De los egresos reportados y con el objetivo de realizar un analisis del tipo de gastos realizados los hemos reagrupado en los rubros siguientes: Rubro Monto Actividades Academicas $ 1,067,078.09 Procesos de Acreditacion $ 131,603.15 Gastos de Operacion $ 524,041.45 Difusion FCC $ 38,881.26 Infraestructura $ 407,294.91 Sueldos y Salarios $ 573,527.85 Total $ 2,742,426.71 a) Actividades academicas: Apoyo a docentes asi como de estudiantes de todos los programas para el desempeno de sus labores academicas y de investigacion. En el caso de estudiantes se apoyo con: Viaticos (alimentos, hospedaje, transporte aereo o terrestre) para asistir a congresos, actividades culturales o deportivas a nivel local, nacional e internacional. Pago de inscripcion a dichos eventos. Compra de articulos deportivos. Pago de gastos de graduacion del nivel licenciatura. Un porcentaje de los gastos de titulacion en el caso de los estudiantes del posgrado que terminan en tiempo. Becas de apoyo administrativo, aprobadas por el Consejo de Unidad Academica de la facultad, las cuales se otorgan a estudiantes del nivel licenciatura siendo beneficiados un total de 58 estudiantes, la tabla siguiente presenta la relacion de los montos de los programas que ofertan becas a nuestros alumnos. Benemerita Universidad Autonoma de Puebla 40 Facultad de Ciencias de la Computacion | Segundo Informe de Labores Becas Otorgadas Lugar de Asignacion Monto Direccion $ 7,000.00 Diplomado $ 11,000.00 Educacion Continua $ 20,000.00 Modulo II $ 2,000.00 Modulo III $ 16,000.00 Administracion de la Red $ 16,000.00 CSIC $ 4,000.00 Laboratorio de Telecomunicaciones $ 4,000.00 Hardware $ 44,000.00 Cuerpos Academicos $ 79,100.00 Total $ 203,100.00 En el caso de los docentes se apoyo con: Pago para la publicacion de articulos. Viaticos (alimentos, hospedaje, transporte aereo y terrestre) para asistir a congresos a nivel local, nacional e internacional. Pago de inscripcion a dichos eventos. Cursos de capacitacion y de especializacion. Material y articulos de papeleria e insumos de computo. b) Gastos de operacion: I) Servicios Comerciales: gastos de adaptacion e instalacion, servicios de cerrajeria, pipas de agua, compra de viveres, transportes locales. II) Servicios Generales: impuestos y derechos, combustible automotriz, decoracion de eventos, premios de concursos, servicios de mensajeria, copias fotostaticas y engargolados, gastos menores, agua de garrafon, uniformes, telefonia, estacionamiento. III) Articulos y materiales de consumo: material de ensenanza, material de curacion y botiquin, insumos de computo, papeleria y utiles de oficina, material sanitario, material de imprenta, material electrico, material de ferreteria. c) Infraestructura: I) Gastos de adaptacion e instalacion. II) Mantenimiento de: mobiliario y equipo de oficina, laboratorios, equipo, planta fisica, equipo contra incendio, equipo de computo y remodelacion de la planta fisica. Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 41 d) Sueldos y salarios: egresos relacionados con el pago de salario del personal de la FCC contratado por nomina interna, asi como el pago de honorarios a los profesores de los programas de diplomado y educacion continua. Cabe mencionar que el programa de diplomado es autofinanciable, por lo que los honorarios de los profesores estan contemplados en los ingresos por este rubro. Este deberia ser tambien el caso del los cursos de la coordinacion de educacion continua, sin embargo en el periodo que se reporta los ingresos representan solamente el 50% de los egresos, por lo que debemos considerar nuevas estrategias para que logremos que sea autofinanciable. En la grafica siguiente se presenta detalladamente la distribucion de sueldos y salarios por nomina interna, diplomado y educacion continua. Concepto Monto Nomina Interna $ 309,110.00 Diplomado $ 246,061.50 Educacion Continua $ 18,356.35 Total $ 573,527.85 e) Difusion: En este rubro se engloban los folletos, tripticos, carteles y lonas producidos para hacer difusion a los programas y actividades academicas de la FCC. f) Procesos de acreditacion: Como ya lo hemos indicado los procesos de evaluacion constituyen ya una constante en el cotidiano de las unidades academicas de nuestra institucion, por lo que debemos considerar en el futuro una partida especifica para dar respuesta a las necesidades tanto de organizacion, impresion, difusion y mantenimiento de instalaciones. En la siguiente tabla se muestra el concentrado de ingresos, egresos y remanente en bancos: Total de Ingresos $ 2,918,081.53 Total de egresos $ 2,754,412.38 Saldo Remanente en Bancos (31/05/2009) $ 163,669.15 Benemerita Universidad Autonoma de Puebla 42 Facultad de Ciencias de la Computacion | Segundo Informe de Labores V.3. PIFIs El Programa Integral de Fortalecimiento Institucional es un recurso federal al cual se accede por concurso. La BUAP en los ultimos anos se ha distinguido por obtener los montos mas altos de recursos PIFI, por encima de las demas instituciones y universidades educativas con las que compite. Particularmente la Facultad de Ciencias de la Computacion elabora el proyecto de solicitud de recursos que se integra al proyecto DESIT. En el proyecto PIFI 2007 se obtuvo un apoyo de $1,263,774.42 (Un millon doscientos sesenta y tres mil setecientos setenta y cuatro pesos 42/100 M.N.) y se ejercio integramente en el periodo reportado. En este segundo ano de gestion por el proyecto PIFI 2008 el apoyo otorgado a la FCC asciende a $1,654,995.80 (Un millon seiscientos cincuenta y cuatro mil novecientos noventa y cinco pesos 80/100 M.N.). Agradezco la participacion de los profesores Jose de Jesus Lavalle Martinez y Manuel Isidro Martin Ortiz como coordinadores de los mencionados PIFIs. Actualmente el profesor Manuel Martin es el responsable del proyecto PIFI 2009, cuyo monto economico es el mismo que el PIFI 2008 ya que actualmente es bienal. Es importante resaltar que los apoyos autorizados se reciben en dos modalidades a) por ingresos liquidos depositados a las cuentas de la FCC, b) en especie, en este caso los dispositivos y equipos no los adquiere la FCC sino les son entregados directamente. Los apoyos recibidos catalogados en la modalidad a) estan reportados en las secciones precedentes. El ejercicio y asignacion del PIFI 2008 esta en curso. V.4. Infraestructura Con el mejoramiento sustancial de las instalaciones en el edificio 104 C, en cuanto a cableado de red, equipo de computo, ventilacion, drenaje y seguridad, que se realizo el ano pasado, se tienen condiciones mas adecuadas para el desarrollo de las actividades academicas de nuestra facultad, sin embargo estamos conscientes que hay mucho trabajo por delante en el mejoramiento de las instalaciones, ademas del mantenimiento y remodelaciones de los inmuebles se equiparon los salones y laboratorios en donde se imparten cursos de la Licenciatura, Ingenieria y Maestria. Para facilitar la implementacion del MUM se acondicionaron los salones del edificio 104 A, los cuales ahora cuentan con mesas de trabajo, se espera que estas faciliten el trabajo colaborativo, ademas se instalaron video proyectores y pantallas en diversas aulas para mejorar las condiciones del proceso ensenanza-aprendizaje. Se ha gestionado la terminacion de la construccion del sotano del edificio 104 C, lograndose con ello la entrega completa de este edificio. Existe un proyecto avalado por la Direccion General de Obras en el cual se plantea la construccion de las instalaciones de lo que sera la cafeteria de la Facultad, esta se construira en los proximos meses junto al edificio 104 C, con esta obra se dara un servicio mas digno a la comunidad, y al mismo tiempo se elimina un problema de seguridad y de mal olor al interior del edificio 104 C. El proceso de acreditacion de la Ingenieria en Ciencias de la Computacion planteo una serie de mejoras y mantenimientos de nuestras instalaciones para tener condiciones adecuadas en nuestro centro de trabajo, por eso se cambiaron todas las lamparas, se limpiaron todos los gabinetes de iluminacion, se pintaron los inmuebles de la facultad para Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 43 mejorar notablemente su aspecto, se cambiaron las butacas inservibles y se completo a 50 butacas cada salon, para poder ser sede del seminario de orientacion para el examen de admision de la BUAP y del propio examen de admision 2009. Como parte del plan de mantenimiento continuo a la infraestructura de la FCC, en este segundo ano de gestion se han obtenido los resultados siguientes: Pintura de los cuatro edificios de la FCC. Cambio de todas lamparas fundidas. Instalacion de protecciones en los salones del edificio 104 A. Instalacion de rejas en los pasillos de acceso a los salones del edificio 104 D. Cambio de cortinas de los salones del edificio 104 A. Construccion de una cisterna para abastecer los banos del edificio 104 D. Rehabilitacion de los sanitarios del edificio 104 D. Construccion de 9 cubiculos en el edificio 104 C, cuatro de ellos serviran para liberar la ultima fila usualmente ocupada por alumnos colaboradores dentro de los modulos de software. Se termino el sotano del edificio 104 C, el cual sera utilizado como bodegas, y asi se liberaran algunos espacios en los diferentes edificios, mismos que se podran ocupar para espacios utilizados por profesores y alumnos. Se cambiaron los barandales de los edificios 104 B y 104 D por barandales metalicos para dar una vista moderna (cabe mencionar que tambien se cambiaran las puertas de estos edificios para tener mas seguridad y al mismo tiempo modernizar dichos edificios). Se coloco piso de loseta a los pasillos de los edificios 104 B y 104 D. Se realizo el traslado del laboratorio de Telecomunicaciones y Microprocesadores al edificio 104 A, esto con el fin de tener mayor espacio para soportar cursos del area de hardware. Se instalaron redes electricas adecuadas a cada necesidad en los laboratorios y en los pasillos del edificio 104 C. Se colocaron 27 video-proyectores y 27 pantallas en igual numero de aulas de la FCC. Se instalaron 7 videocamaras en lugares estrategicos para mejorar la seguridad de la FCC, al mismo tiempo estas serviran para transmitir conferencias por Internet. Se colocaron 5 camaras en lugares estrategicos para mejorar la seguridad de las instalaciones y de los miembros de la FCC. Estas fueron colocadas en la biblioteca, laboratorios de software y en la explanada. Se repararon las 9 mesas instaladas en los jardines, ademas se colocaron contactos electricos en 3 de ellas y se repararon en 6 de ellas. Se cambio el piso de los salones y edificios del 104 D por loseta. Se cambiaron 8 pizarrones en diversos salones. Se colocaron 3 extintores de polvo quimico y 2 ventiladores industriales en la Biblioteca Alejandro Reyes Cristiani. Benemerita Universidad Autonoma de Puebla 44 Facultad de Ciencias de la Computacion | Segundo Informe de Labores Se adquirieron 37 computadoras nuevas para los diferentes laboratorios, estamos en espera de otros 50 equipos que deberan ser entregados en el mes de julio de 2009. VI. ACTIVIDADES ACADEMICAS Siendo los estudiantes el centro de nuestro quehacer en el trabajo academico de la facultad es importante sus inquietudes, canalizar su potencial y enfocarlos a la realizacion de eventos academicos organizados por ellos y para ellos. En ese sentido la facultad ha apoyado las propuestas de nuestros estudiantes para tener espacios de discusion y publicacion de las tendencias actuales que en materia de computacion se dan dia a dia. VI.1. Apoyo a Estudiantes para Asistir a Congresos y Eventos Academicos Alumno Monto Concepto Fecha Calyecac Marreros Francisco $400.00 Pago de inscripcion al congreso Numericos, CIMAT, Guanajuato del 18 al 21 de junio de 2008 09/junio/2008 Aidee Diaz Romero Minerva $400.00 Pago de inscripcion al congreso Numericos, CIMAT, Guanajuato del 18 al 21 de junio de 2008 09/junio/2008 Leon Herrera Eduardo $2,240.00 Participacion en el IV Concurso Interestatal Issac Karelov de la OMI, celebrado en la Cd. de Guadalajara del 22 al 25 de junio de 2008 06/junio/2008 Perez Lopez Marco Antonio $400.00 Beca por apoyo a la imparticion del curso de educacion continua de C basico llevado a cabo del 2 de febrero al 8 de marzo de 2008 30/sep/2008 Mendez Martinez Mijail $300.00 Pago de la cuota de inscripcion al Encuentro Nacional de Software Libre ENLi2008 celebrado los dias 22, 23 y 24 de octubre de 2008 en las instalaciones de la UPAEP. 10/oct/2008 Palmas Casco Jorge $300.00 Pago de la cuota de inscripcion al Encuentro Nacional de Software Libre ENLi2008 celebrado los dias 22, 23 y 24 de octubre de 2008 en las instalaciones de la UPAEP. 10/oct/2008 Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 45 Alumno Monto Concepto Fecha Calderon Rivera Violeta $300.00 Pago de la cuota de inscripcion al Encuentro Nacional de Software Libre ENLi2008 celebrado los dias 22, 23 y 24 de octubre de 2008 en las instalaciones de la UPAEP. 10/oct/2008 Flores Castillo Jose Antonio $300.00 Pago de la cuota de inscripcion al Encuentro Nacional de Software Libre ENLi2008 celebrado los dias 22, 23 y 24 de octubre de 2008 en las instalaciones de la UPAEP. 10/oct/2008 Alvarez Romero Grioaldo Iraidez $300.00 Pago de la cuota de inscripcion al Encuentro Nacional de Software Libre ENLi2008 celebrado los dias 22, 23 y 24 de octubre de 2008 en las instalaciones de la UPAEP. 10/oct/2008 Hernandez Enriquez Alma Rosa $300.00 Pago de la cuota de inscripcion al Encuentro Nacional de Software Libre ENLi2008 celebrado los dias 22, 23 y 24 de octubre de 2008 en las instalaciones de la UPAEP. 10/oct/2008 Espinoza Beltran Luis Arturo $300.00 Pago de la cuota de inscripcion al Encuentro Nacional de Software Libre ENLi2008 celebrado los dias 22, 23 y 24 de octubre de 2008 en las instalaciones de la UPAEP. 10/oct/2008 Nava Aguilar Adriana $1,170.00 Apoyo a la presentacion de su trabajo de investigacion en el XLI Congreso Nacional de la SMM celebrado del 20 al 24 de octubre de 2008. El apoyo incluyo transporte, inscripcion al congreso y hospedaje. 03/oct/2008 Rivera Rodriguez Jesus Camilo $1,250.00 Participacion en el XXI Torneo Internacional de Ajedrez GM Carlos Torre Repetto in Memoriam 2008 celebrado en la ciudad de Merida del 13 al 22 de diciembre de 2008. El apoyo otorgado incluyo pago de transporte y hospedaje. 02/dic/2008 Benemerita Universidad Autonoma de Puebla 46 Facultad de Ciencias de la Computacion | Segundo Informe de Labores Alumno Monto Concepto Fecha Frias Mendez Erick Eduardo $1,250.00 Participacion en el XXI Torneo Internacional de Ajedrez GM Carlos Torre Repetto in Memoriam 2008 celebrado en la ciudad de Merida del 13 al 22 de diciembre de 2008. El apoyo otorgado incluyo pago de transporte e inscripcion. 01/dic/2008 Garcia Limon Mauricio Alfonso $1,580.00 Participacion en las Olimpiadas Estatales de Informatica de la region Sur-Sureste, celebradas en la Cd. de Oaxaca del 3 al 5 de abril de 2009. El apoyo consistio en el pago de transporte, hospedaje y viaticos 24/mar/2009 VI.2. Apoyos a Eventos Academicos Organizados por Estudiantes 1. Apoyo a los consejeros de unidad academica: Emmanuelle Peralta Martinez, Angel Omar Mendoza Rojas y Esther Tlaczani Conde para la organizacion de cursos propedeuticos previos al ingreso de las carreras de ICC y LCC. El apoyo consistio en proporcionarles la lista completa de aceptados a ingresar a la FCC en el periodo de otono 2008, asi como la disponibilidad de uso de los salones de la facultad en la semana del 6 al sabado 9 de agosto de 2008. Adicionalmente se les proporciono material de papeleria y de oficina. 2. Apoyo a los alumnos integrantes de FOSSD (Free and Open Source Software Development), representados por Adrian de Jesus Perez Dominguez para la realizacion del evento INSTALLFEST (Festival de Instalacion de Software Libre), celebrado en las instalaciones de la FCC el pasado 6 de septiembre de 2008. El apoyo consistio en ofrecer la disponibilidad de uso del Modulo I de software para dicho evento, asi como proporcionarles material de oficina y el Coffee Break para 120 personas. Cabe hacer mencion que FOSSD es un proyecto universitario creado por alumnos de la FCC con el fin de promover el uso y la creacion de software libre dentro de la universidad, asi como la capacitacion a alumnos que requieren tener conocimientos en este tema. El proyecto ha sido entregado en la direccion de la FCC y esta siendo sustentado bajo un programa de trabajo que soporta el laboratorio de Software libre a cargo del profesor Cesar Bautista Ramos. 3. Apoyo a los alumnos de la FCC integrantes del Grupo de Usuarios de Linux Puebla (GULP), representados por Luis Miguel Arenas Sosa para la realizacion del Cuarto Encuentro en Linea de Educacion y Software Libre EDUSOL 2008, teniendo como sede las instalaciones de la FCC del 18 al 21 de noviembre de 2008. En este encuentro se llevaron a cabo mesas de trabajo, talleres y tutoriales, conversaciones en linea con expertos, foros generales y charlas informales; todo ello sobre la Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 47 los siguientes ejes tematicos: Educacion en linea y a distancia, Educacion multimedia, Politicas y experiencias del uso del software libre en la FCC, Usos tematicos del software libre, Conocimiento, libertad y educacion, Sociedad del conocimiento y proyectos colaborativos, Perspectivas tecnologicas de la educacion con software libre, Experiencias comunitarias con software libre. En el auditorio de la FCC se recibio la senal de video de las conferencias de EDUSOL durante los dias del evento. Para ello se les proporciono una IP fija, una computadora para la proyeccion de las videoconferencias, las facilidades para la realizacion de las pruebas de conexion y la garantia de contar con el ancho de banda suficiente para la recepcion de las videoconferencias, provenientes del servicio de multipunto de la UPAEP. 4. Apoyo con ocho playeras para la premiacion del Torneo Interno de Futbol Rapido 2009, conto con la participacion de 20 equipos de futbol rapido con un total de 200 estudiantes de la FCC. 5. PROYECTO STUDENT CLUBS MICROSOFT: A partir del mes de noviembre de 2008 se forma en la facultad el grupo academico de estudiantes y profesores, llamado FCC.NET, que es uno de los Microsoft Student Clubs que existen en Mexico y son respaldados por Microsoft en sus proyectos. El grupo FCC.NET se integra por los profesores Manuel Isidro Martin Ortiz, Luis Enrique Colmenares Guillen y 22 estudiantes de la FCC, de los cuales destaca Marco Antonio Macias Ayaquica quien es el lider del STUDENT CLUBS MICROSOFT y uno de los 33 Microsoft Student Partner que existen en todo el pais. El resto de los companeros alumnos que integran el grupo FCC.NET estan estudiando para certificarse y hacer desarrollo en tecnologias Microsoft. 6. Se llevo a cabo en las instalaciones de la FCC el Festival Latinoamericano de Instalacion de Software Libre FLISOL en su edicion 2009. El FLISOL es el evento de difusion de software libre mas grande en Latinoamerica. Se realiza desde el ano 2005 y su principal objetivo es promover el uso del software libre, dando a conocer al publico en general su filosofia, alcances, avances y desarrollo en diversas sedes de toda America Latina simultaneamente. En el caso de Puebla la sede, por segundo ano consecutivo en esta gestion, fue la FCC y se llevo a cabo el sabado 25 de abril de 2009. La organizacion del evento estuvo a cargo de los propios estudiantes de la facultad, particularmente de los colaboradores de los Modulos de software III y IV, a quienes se les dieron todas las facilidades para llevar a cabo dicho evento que consistio en conferencias, tutoriales, instalacion guiada de software libre e instalacion a distancia. Benemerita Universidad Autonoma de Puebla 48 Facultad de Ciencias de la Computacion | Segundo Informe de Labores VI.3. Alumnos y Profesores Destacados Los siguientes profesores y alumnos han sido galardonados por la VIEP en sus trabajos de investigacion. La ceremonia de Reconocimientos Universitarios 2009 se llevo a cabo el dia 24 de febrero de 2009 en el salon Barroco del Edificio Carolino. Una felicitacion por su esfuerzo y dedicacion. Profesor Alumno Reconocimiento Obtenido Proyecto Larios Gomez Mariano Arriaga Martinez Alexander Primer Lugar en la categoria LEGO del 13vo. Concurso Nacional de Minirobotica Robot Transportador Reyes Salazar Jaime Enrique Sanchez Lopez Abraham Mora Julio C. Best Paper Award First Place in CORE 2008 Coordinating Multiple Characters with PRM Planning Nunez R. David Zepeda Cortes Claudia Best Paper Award Second Place in CORE 2008 Computing of P-Stable models based on seminegative normal programs with constraints De la Rosa Flores Rafael Lina Romero Carlos Daniel Segundo Lugar en el Concurso Estatal 2008 de desarrollo de software del Estado de Puebla - CONCYTEP Compras BUAP Rebollo Avendano Roberto Reyes Aburto Marco Ignacio Juarez Rocha Carlos Moises Martin Ortiz Manuel Isidro Calyecac Marreros Francisco Segundo lugar por area y Nivel Tecnico Superior Universitario Escaneo 3D de piezas arqueologicas Asimismo nos enorgullece informar que dos de nuestros alumnos: Alexander Arriaga Martinez y Adrian Moreno Carmona son candidatos al PREMIO NACIONAL DE LA JUVENTUD 2008 por su destacada participacion en actividades academicas. VI.4. Apoyos a Eventos Academicos Organizados por Profesores Emprendedores Dentro de la FCC existen profesores que se encuentran participando en la conformacion de los programas de Emprendedores de la BUAP. Dentro de la FCC los profesores que participan en dichos programas a traves de la Vicerrectoria de Docencia son: Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 49 Chavira Martinez Elsa, Molina Garcia Consuelo, Jimenez Gonzalez Jorge. Y fueron apoyados para cursar el VIII Diplomado para Directores y Asesores de SBDC (Small Bussiness Development Center) de Mexico, celebrado en los meses de octubre, noviembre y diciembre de 2008. OMI-2008 (Olimpiada Mexicana de Informatica) Del 26 de junio al 1 de julio de 2008 la Facultad de Ciencias de la Computacion fue sede de la 13a Olimpiada Mexicana de Informatica a nivel nacional, participaron mas de 120 estudiantes de secundaria y bachillerato representando a 30 delegaciones de 30 estados de la Republica Mexicana (cuatro miembros por delegacion). Durante estos dias los participantes resolvieron problemas practicos relacionados con la logica, las matematicas y la programacion. En esta ocasion la OMI selecciono a los 4 mejores jovenes de todo el pais, quienes participaran en la Olimpiada Internacional de Informatica que se llevara a cabo este ano en Bulgaria. Un reconocimiento especial por la organizacion y entusiasmo a Manuel Isidro Martin Ortiz quien fungio como delegado a su grupo de colaboradores formado por un lider: Mauricio Alfonso Garcia Limon, un sublider: Cesar Daniel Morales Barrera, 4 asesores y 7 entrenadores, todos ellos alumnos de la FCC y dos colaboradores del INAOE, quienes llevaron a cabo con exito la OMI 2008. Agradecemos el apoyo que el senor rector Dr. Enrique Aguera Ibanez nos otorgo para la realizacion de tan importante evento a traves de Secretaria General, DAGU y Tesoreria. Workshop Celebracion en la FCC del IV Taller Latinoamericano de Logica y Razonamiento No-Monotonico (LANMR-08), organizado por el Cuerpo Academico de Sistemas de Informacion y el Grupo Mexicano en Logica y Computacion, los dias del 22 al 24 de octubre de 2008. Profesores de la FCC que participaron en el Comite Organizador: Ivan Olmos Pineda Profesores de la FCC que participaron en el Comite del Programa: Claudia Zepeda Cortes, Guillermo de Ita Luna. Se presentaron: 4 conferencias magistrales, 12 ponencias y publicaciones, 5 presentaciones tipo cartel. Benemerita Universidad Autonoma de Puebla 50 Facultad de Ciencias de la Computacion | Segundo Informe de Labores Jornadas Optimizacion Celebracion en la FCC de las Jornadas de Optimizacion, Analisis Numerico y Aplicaciones, organizado por el Cuerpo Academico de Computacion Matematica, los dias 19, 20 y 21 de noviembre de 2008. Se presentaron 11 conferencias y el curso taller de Aplicaciones de Computo Suave. Participaron las siguientes universidades: UANL, UDLAP, BUAP, UAM, UPAEP, UNAM, U. de Guanajuato, U. A. de Guerrero. Curso de Redes Neuronales Artificiales El Cuerpo Academico de Computacion Matematica de la FCC organizo y llevo a cabo el curso de Redes Neuronales Artificiales impartido por el Dr. Claudio Castellanos Sanchez del CINVESTAV-Tamaulipas del 12 al 16 de enero de 2009 con una duracion total de 20 hrs. Profesor Organizador: Sanchez Lopez Abraham Programa: Introduccion a las RNA y sus aplicaciones, RNA's con propagacion hacia adelante, Memorias asociativas, Modelos cognitivos. Curso de Metaheuristicas de Optimizacion Combinatoria en Clasificacion Automatica El Cuerpo Academico de Computacion Matematica de la FCC organizo y llevo a cabo el curso de Metaheuristicas de Optimizacion Combinatoria en Clasificacion Automatica impartido por el Dr. Javier Trejos Zelaya de la Escuela de Matematica y del Centro de Investigaciones en Matematicas Puras y Aplicadas (CIMPA-UCR) de la Universidad de Costa Rica y del ITCR, los dias 8 y 9 de enero de 2009 con una duracion total de 10 hrs. Profesor Organizador: Bernabe Loranca Beatriz Programa Recordatorio sobre Clasificacion Automatica, Particionamiento numerico usando metaheuristicas de optimizacion, Otros problemas de particionamiento, Escalamiento multidimensional, Regresion. Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 51 Taller de Plegado de Proteinas y la Inteligencia Artificial La Benemerita Universidad Autonoma de Puebla a traves de la Facultad de Ciencias de la Computacion y el Instituto Nacional de Astrofisica Optica y Electronica (INAOE) e Plegado de Proteinas y la ado en ambas sedes. En el INAOE se presentaron las conferencias programadas y en la FCC se llevaron a cabo los talleres correspondientes en los laboratorios de software (modulos). Los resultados fueron los siguientes: Se impartieron 15 conferencias. Se impartieron 6 sesiones de talleres con ponentes de diferentes paises tales como Espana, Chile y Argentina. Asistieron un total de 30 alumnos de posgrado nivel maestria de diferentes estados de la republica mexicana entre los que destacan el Estado de Mexico, Morelos y Puebla. Las instituciones participantes con trabajos fueron: la UNAM, el Instituto de Ciencias Fisicas, el IIMAS, el INAOE, la BUAP, el IPN y el ITESM. Un agradecimiento al comite organizador de este evento, especialmente al Dr. Ramon Garduno y al Dr. Jesus Antonio Gonzalez Bernal del INAOEP y al profesor Ivan Olmos Pineda. Feria de Proyectos de Fin de Cursos FCC Con gran exito se llevo a cabo la Primera Feria de Proyectos de Fin de Cursos organizada por la FCC y coordinada por la profesora Yalu Galicia Hernandez, en donde participaron cerca de 40 alumnos conformados en 11 equipos, los cuales presentaron a la comunidad estudiantil de la Facultad sus proyectos de fin de cursos en las materias de Programacion Avanzada, Algoritmos y Estructuras de Datos e Ingenieria de Software. El evento se llevo a cabo el 21 de enero de 2009 en la explanada de la facultad, a los alumnos participantes les fue otorgado un reconocimiento con valor curricular, asi como un obsequio simbolico que consistio en la entrega de un mouse optico retractil por cada equipo. Con gran exito se llevo a cabo la Primera Semana de la Biblioteca de la FCC organizada por los coordinadores de la misma, la profesora Laura Cuayahuitl Romero y el profesor Manuel Isidro Martin Ortiz. Esta se llevo a cabo del 23 al 27 de febrero de 2009 y tuvo como objetivo general el exhortar a la comunidad de la FCC a la lectura. Se impartieron platicas, cursos y talleres por distintas dependencias de la BUAP tales como el PUDE, la biblioteca Niels-Bohr, la FCC y la Direccion General de Bibliotecas de la BUAPa importl uso efectivo de las herramientas eectura entre otros. Benemerita Universidad Autonoma de Puebla 52 Facultad de Ciencias de la Computacion | Segundo Informe de Labores 2do. Workshop en Web Semantica y nuevas Tecnologias Celebracion en la FCC del 2do. Taller en Web Semantica y nuevas tecnologias organizado por el cuerpo academico de Sistemas de Informacion, los dias 23 y 24 de marzo de 2009. Profesores participantes dentro del comite organizador: David Pinto Avendano, Maria J. Somodevilla Garcia. Profesores participantes dentro del comite de programa: John Cardiff, Hector Jimenez Salazar, Concepcion Perez de Celis Herrero, Darnes Vilarino Ayala, Fernando Zacarias Flores. Se presentaron: Dos conferencias magistrales, 14 ponencias y publicaciones, Cinco presentaciones de tipo cartel. VI.5. Talleres Culturales Cuidando siempre la educacion integral de nuestros estudiantes, en colaboracion con la Vicerrectoria de Extension y Difusion de la Cultura, hemos combinado sus actividades academicas con diversos eventos culturales al interior de nuestra facultad. En particular se ha continuado como sede de talleres diversos en respuesta a los intereses del alumnado. Agradezco todas las facilidades que la Dra. Ma. Lilia Cedillo Ramirez, Vicerrectora de Extension y Difusion de la Cultura, nos ha brindado para definir las actividades culturales que cuatrimestre con cuatrimestre se programan. Las acciones realizadas en este rubro se detallan a continuacion: 1. Se impartieron los siguientes talleres durante el periodo otono 2008: Taller Horario Dia Profesor Lugar Guitarra 11:30 a 13:00 Jueves Carrasco Hernandez Jonathan Ed. 187 Creacion Literaria 17:00 a 19:00 Jueves Alvarez Viveros Susana E. Ed. 187 Baile de Salon 11:30 a 13:00 Jueves Martinez Betanzos Gonzalo Q13 Baile de Salon 11:30 a 13:00 Sabado Martinez Betanzos Gonzalo Q13 Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 53 2. Talleres que se impartieron durante el periodo primavera 2009. Taller Horario Dia Profesor Lugar Guitarra 11:30 a 13:00 Jueves Carrasco Hernandez Jonathan Ed. 187 Creacion Literaria 17:00 a 19:00 Jueves Alvarez Viveros Susana E. Ed. 187 Baile de Salon 11:30 a 13:00 Jueves Martinez Betanzos Gonzalo Q13 Fotografia 11:30 a 13:00 Sabado Jaramillo Juarez Rocio Q13 VI.6. Actividades Deportivas Otro eje del desarrollo integral del estudiante es el de la cultura fisica, por lo cual nos congratulamos por la gran participacion y presencia que ano con ano tienen nuestros estudiantes en la Universiada de la BUAP, que desde el ano 2007 se lleva a cabo en el Complejo Deportivo de Alto Rendimiento. Por nuestra parte hemos apoyado a nuestros estudiantes en la Universiada 2008 con uniformes deportivos, pelotas, balones y aditamentos especiales para las competencias. El apoyo se otorgo a 90 estudiantes distribuidos en las disciplinas deportivas siguientes: Disciplina No. de Participantes Tipo de Apoyo Apoyo Futbol Soccer Varonil 18 Uniformes deportivos $5,400.00 Futbol Soccer Femenil 9 Conjuntos Deportivos $3,200.00 Futbol Rapido Varonil 12 Uniformes Deportivos $3,600.00 Futbol Rapido Femenil 9 Conjuntos Deportivos $2,000.00 Tae Kwon Do 1 Zapato deportivo $400.00 Basquetbol Varonil 7 Uniformes Deportivos $2,400.00 Basquetbol Femenil 7 Conjuntos Deportivos $2,000.00 Voleibol Varonil 10 Uniformes Deportivos $3,200.00 Beisbol 15 Uniformes Deportivos $4,500.00 Tenis 1 Playera deportiva $400.00 Atletismo 1 Zapato deportivo $899.00 Totales: 90 $27,999.00 A todos los alumnos participantes una felicitacion por el esfuerzo realizado en cada competencia y un agradecimiento a la alumna Nalleli Cordova Pereda por su trabajo en la coordinacion de estas actividades. En la edicion de la Universiada 2008, la FCC obtuvo el octavo lugar general con 665 puntos y nuestros alumnos participaron en 15 disciplinas, siendo la clasificacion por deporte la siguiente: Benemerita Universidad Autonoma de Puebla 54 Facultad de Ciencias de la Computacion | Segundo Informe de Labores VI.7. Plan de Contingencia En coordinacion con la Direccion de Proteccion Universitaria, se elaboro el plan de contingencia de nuestra facultad y se conformaron tres brigadas formadas por alumnos, trabajadores no academicos y profesores de la FCC. Los brigadistas se capacitaron con un curso teorico-practico que se impartio por personal de la DPU, cabe mencionar que las brigadas se formaron con miembros de la Facultad que cumplen con el perfil sugerido por personal de la DPU. Las brigadas que se formaron son: Primeros Auxilios, Prevencion y combate de conato de incendios, Seguridad y evacuacion. Todos los companeros que se capacitaron obtuvieron un reconocimiento que los acredita como brigadistas. El plan de contingencia de la facultad debe estar vigente en todo momento, razon por la cual las brigadas son monitoreadas constantemente para continuar con la capacitacion de los brigadistas y la integracion de nuevos miembros, para ocupar los puestos de las personas que por razones diversas dejan de ser miembros activos de la facultad, es por ello que los cursos de capacitacion se estaran impartiendo por lo menos una vez al ano. VI.8. Procesos Electorales Durante este segundo ano de gestion se llevaron a cabo tres procesos electorales importantes para la Facultad de Ciencias de la Computacion y para la Universidad. En todos ellos la comunidad universitaria mostro una gran madurez politica tanto en los acuerdos para conformar las formulas de unidad como en el ejercicio democratico al haber competencia en otras formulas. Disciplina Deportiva Lugar Obtenido Ajedrez 1o. Atletismo 9o. Baloncesto 4o. Beisbol 2o. Football Rapido 7o. Football Soccer 3o. Tae Kwon Do 5o. Tenis de Mesa 3o. Tenis 8o. Voleibol 9o. Voleibol de Playa 5o. Handball 9o. Karate 7o. Natacion - Tochito - Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 55 Elecciones Consejo de Docencia, Periodo 2008-2012 El primer proceso electoral, se llevo a cabo el pasado 19 de junio de 2008, para la renovacion del Consejo de Docencia para el periodo 2008-2012, cuya finalidad es consolidar el Modelo Universitario Minerva. Se obtuvo una participacion en 23 escuelas y Facultades de la BUAP, la FCC fue una de ellas con la participacion de dos de nuestros docentes que son actualmente miembros del Consejo de Docencia: la Mtra. Yolanda Ramirez Encarnacion y el Mtro. Pedro Bello Lopez, ambos consejeros de docencia suplentes representando a la Facultad y al area de conocimiento de Ciencias Naturales y Exactas de nuestra Benemerita Institucion. Elecciones CUA, periodo 2008-2010 El segundo proceso fue la renovacion del Consejo de Unidad Academica en octubre pasado, gracias a los acuerdos de los distintos actores politicos se logro generar una propuesta de formulas de unidad tanto de alumnos como de profesores. La eleccion para el nombramiento de los miembros del Consejo de Unidad Academica para el periodo 2008-2010 se llevo a cabo el dia 15 de octubre de 2008. En sesion extraordinaria de CUA con fecha 3 de octubre de 2008 se conformo la Comision Electoral de la FCC integrada por los siguientes profesores consejeros de unidad: Por el sector Academico: Roberto Contreras Juarez y Jose Luis Meza Leon, este ultimo presidente de dicha comision electoral. Por el sector no academico: Sergio Reyes Magno. Por el sector estudiantil: Emmanuelle Abdiel Peralta Martinez y Karina Guadalupe Cueto Ruiz. Con fecha 17 de octubre de 2008 se llevo a cabo la sesion extraordinaria de CUA para calificar el proceso electoral de los nuevos miembros del CUA, donde el presidente de la comision electoral, Jose Luis Meza Leon, rindio su informe del proceso electoral dando los pormenores y los resultados de las votaciones como sigue: Sectores Votos a Favor Votos Anulados Boletas no Utilizadas Matematicas 11 4 3 Programacion 14 1 1 Posgrado 12 0 4 Licenciatura 17 2 9 Ingenieria 18 1 9 Posgrado 12 0 31 Licenciatura Basico 63 32 305 Licenciatura Formativo 26 38 424 Ingenieria Basico 136 26 634 Ingenieria Formativo 100 42 826 Sector no Academico 12 1 3 Benemerita Universidad Autonoma de Puebla 56 Facultad de Ciencias de la Computacion | Segundo Informe de Labores Finalmente en sesion extraordinaria de CUA con fecha 24 de octubre de 2008 se les toma la protesta a los nuevos miembros del Consejo de Unidad Academica para el periodo 2008-2010, quedando formalmente instalado el nuevo Consejo de Unidad Academica de nuestra facultad. Sectores Estudiantiles: Basico Licenciatura Propietario: Diana Yadira Moreno Solis Suplente: Elisa Lozano Cubillas Basico Ingenieria Propietario: Israel Sanchez Mendoza Suplente: Daniel Nestor Romano Malagon Formativo Licenciatura Propietario: Rafael Serrano Osorno Suplente: Jaime Enrique Reyes Salazar Formativo Ingenieria Propietario: Alonso Alfredo Aguirre Ortega Suplente: Julio Cesar Barradas Rodriguez Posgrado Propietario: Miriam Salcedo Haro Suplente: Yuridia Patricia Mejia Torres Sectores Profesores: Ingenieria Propietario: Gregorio Trinidad Garcia Suplente: Mariano Larios Gomez Licenciatura Propietario: Rosa Garcia Tamayo Suplente: Pedro Garcia Juarez Programacion Propietario: Yolanda Moyao Martinez Suplente: Eugenia Erica Vera Cervantes Matematicas Propietario: Jose Martin Estrada Analco Suplente: Gerardo Martinez Guzman Posgrado Propietario: Darnes Vilarino Ayala Suplente: Ma. De la Concepcion Perez De Celis Herrero Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 57 Sector no Academico: Trabajadores no academicos Propietario: Jose Rene Ruiz Montiel Suplente: Maria Ines Torres Romero Elecciones Consejo Universitario, periodo 2009-2011: El tercer proceso fue la renovacion del Consejo Universitario de nuestra Benemerita Institucion para el periodo 2009-2011. Evento politico sin precedentes en la historia de la FCC, pues ademas de los acuerdos con los distintos actores politicos para conformar formulas de unidad en el sector academico, en el sector estudiantil se dio una total apertura a las distintas ideologias politicas que imperan en la facultad garantizando el registro de cualquier formula que quisiera competir en este proceso. El resultado fue el registro de 7 formulas del sector estudiantil que compitieron por 2 posiciones en el nuevo Consejo Universitario. Las elecciones se celebraron el 19 de marzo de 2009 obteniendose los siguientes resultados: Sector Estudiantil: Propietario Suplente LCC ICC Parcial C.U. Acatzingo Totales Moreno Nophal Miriam Valerio Calleja Leonardo Javier 83 207 290 9 299 Arroyo Espinoza Jocelyn Alcantar Tolentino Ulianov 87 259 346 6 352 Miron Cruz Magdiel Carrera Roman Jose Areli 67 157 224 1 225 Mendoza Rojas Angel Omar Cerritos Ortiz Luis Angel 113 246 359 46 405 Alvarez Carmona Miguel Angel Calva Rosales Luis Josue 119 264 383 41 424 Maldonado Vallejo Luis Javier Tlalpa Potrero Jose Antonio 18 82 100 0 100 Tapia Canalizo Teresa Dominguez Carranza Juan Carlos 28 83 111 1 112 Anulados 22 41 63 5 68 Benemerita Universidad Autonoma de Puebla 58 Facultad de Ciencias de la Computacion | Segundo Informe de Labores Sector Academico Propietario Suplente Campus Puebla Acatzingo Totales Somodevilla Garcia Maria Josefa Tovar Vidal Mireya 42 7 49 Romero Cuayahuitl Laura Gonzalez Flores Marcos 39 9 48 Anulados 0 0 0 VI.9. Admision y Titulacion de Alumnos de la Licenciatura, Ingenieria y Posgrado 1. Matricula Estudiantil El numero de estudiantes registrados por la DAE como alumnos inscritos a mayo del 2009 es de 2444 distribuidos de la siguiente manera: Programa Educativo Numero de Alumnos Licenciatura en Ciencias de la Computacion 797 Ingenieria en Ciencias de la Computacion 1624 Maestria en Ciencias de la Computacion 35 Total 2456 Distribucion de la matricula en la FCC Los alumnos de nuevo ingreso de la generacion 2008 fueron 232 alumnos inscritos en la Licenciatura, 450 alumnos inscritos en la Ingenieria y 12 alumnos inscritos en la Maestria, dando un total de 694 alumnos inscritos. 2. Titulacion de Alumnos La relacion de alumnos titulados de junio 2008 a mayo 2009 es como se muestra a continuacion. Programa Educativo Tesis Diplomado EGEL-Ceneval Titulacion Automatica LCC 29 15 39 6 ICC 24 3 70 27 MCC 6 Total 59 18 109 33 3. Examenes Departamentales En los periodos de otono 2008 y primavera 2009 se han iniciado y continuado la aplicacion de examenes departamentales en las diferentes areas de conocimiento Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 59 del programa, como estrategia de evaluacion colegiada, con la finalidad de determinar los aspectos de mejoramiento tanto para los docentes como para los alumnos. En la tabla siguiente desglosamos las asignaturas en las que actualmente se realiza este tipo de examenes. Periodo Area de Conocimiento Materia Otono 2008 Programacion Basica Programacion Programacion Avanzada Algoritmos y Estructura de Datos Arquitectura de Computadoras Sistemas Digitales Diseno Digital Circuitos Electricos Circuitos Electronicos Microprocesadores e interfaces Bases de Datos Bases de Datos Tendencias de Bases de datos Matematicas Basicas Matematicas Elementales Primavera 2009 Programacion Basica Programacion Programacion Avanzada Algoritmos y Estructura de Datos Arquitectura de Computadoras Sistemas Digitales Microprocesadores Circuitos Electricos Bases de Datos Fundamentos de Bases de Datos Queda pendiente definir una metodologia para realizar el analisis de los resultados de los examenes aplicados, con el objetivo de contar con un referente para la toma de decisiones relacionadas con: la capacitacion por parte de los maestros, el reforzamiento de algunos temas a los alumnos para reducir el indice de reprobacion, cambios en el diseno y aplicacion del examen y finalmente pero no menos importante, contar con estrategias que nos permitan asegurar que los maestros que impartan la asignatura cumplen con los temas y logren los objetivos de la misma. 4. Programacion Academica El proceso de programacion academica es fundamental en el desempeno del estudiante y se ha planeado en torno a la proyeccion academica y al indice de aprobacion de los cursos. Para el nivel licenciatura se ofrecieron 668 cursos en los periodos de otono 2008, primavera y verano 2009 distribuidos como se muestra en la tabla siguiente. Benemerita Universidad Autonoma de Puebla 60 Facultad de Ciencias de la Computacion | Segundo Informe de Labores Periodo No. de Secciones Ofertadas a Nivel Licenciatura Otono 2008 276 Primavera 2009 284 Verano 2009 108 Total 668 5. Evaluacion Docente A partir del periodo de verano 2008 a la fecha las evaluaciones docentes se realizan en linea, a continuacion se muestra el numero de secciones evaluadas. VI.10. Tutores Los profesores investigadores de la FCC, colaboran en el programa de tutorias de esta institucion prestando ayuda metodologica a los alumnos que asi lo solicitan. Para los periodos academicos reportados la tabla siguiente nos muestra el numero de alumnos atendidos y el numero de profesores participantes. Periodo Secciones Evaluadas Secciones No Evaluadas Verano 2008 91 13 Otono 2008 257 19 Primavera 2009 262 22 Periodo Alumnos Atendidos Tutores Participantes Verano 2008 905 64 Otono 2008 1567 68 Primavera 2009 1387 68 Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 61 PERSPECTIVAS En este ano hemos tenido la oportunidad de hacer una reflexion profunda sobre nuestros programas academicos. Hecho que nos ha permitido analizar los indices de aprobacion, retencion, tiempo promedio de permanencia, eficiencia terminal e incorporacion al sector productivo. Desde el inicio de esta administracion, hemos insistido en la responsabilidad que como docentes e investigadores tenemos con nuestro alumnado, por lo que en concordancia con lo plasmado en el plan de desarrollo 2007-2011 nos proponemos implementar durante el proximo ano los siguientes programas: programa piloto para incrementar la eficiencia terminal de los programas de licenciatura, programa emergente para la superacion academica de los profesores con el grado de maestria y un programa permanente de control de la calidad en los procesos academicos y administrativos. Queremos pasar a una cultura del seguimiento para mejorar la retencion en los primeros anos de estudio, asegurar que terminen en un tiempo promedio de 5 anos, incrementar la eficiencia terminal, mantener la pertinencia de nuestros programas educativos y asegurar la insercion de nuestros egresados en el ambito laboral. Todo esto mediante el adecuado seguimiento de los diferentes instrumentos de evaluacion con los que contamos actualmente: evaluacion de los alumnos en sus cursos, PIEVA, recomendaciones de los organismos acreditadores, evaluacion curricular y seguimiento de egresados. Consideramos que el trabajo realizado por la planta academica, en la actualizacion de los programas de asignatura, nos da la pauta para constatar su interes y compromiso con nuestra universidad y su alumnado; por tal razon, estamos seguros que como unidad academica podremos responder a la mision que se nos ha conferido como hacedores del quehacer sustantivo de nuestra universidad. Benemerita Universidad Autonoma de Puebla 62 Facultad de Ciencias de la Computacion | Segundo Informe de Labores AGRADECIMIENTOS ESPECIALES Quiero hacer patente mi reconocimiento a mi equipo de secretarios, coordinadores, profesores, alumnos, egresados y personal no academico. Por supuesto tambien a las autoridades personales encabezadas por el Dr. Enrique Aguera Ibanez Rector, Dr. Jose Ramon Eguibar Cuenca Secretario General, Mtro. Jose Jaime Vazquez Lopez V. de Docencia, Dr. Pedro Hugo Hernandez Tejeda V. de Inv. y Est. de posgrado, Abog. Ma. Esther Gamez Rodriguez Abogada General, Mtra. Laura Gomez Aguirre DAE, Mtro. Rafael Hernandez Oropeza Relaciones Internacionales, Mtro. Oscar Gilbon Rosete- Contraloria General, Mtro. Manuel Sandoval Delgado DGO, Mtra. Margarita Campos DGES, Mtra. Tamara Davidova Nizanova Jefatura de Educacion Continua, Lic. Damian Hernandez Mendez DAGU, Lic. Manuel Alonso - DIIE, Lic. Alfonso Esparza Ortiz Tesorero General, Esperanza Morales Perez Contadora de Tesoreria General, Dr. Fernando Santiensteban Llaguno Recursos Financieros Alternos, Marco Antonio Ramirez Serapio Procesos de Calidad. Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 63 GLOSARIO A . ANIEI Asociacion Nacional de Instituciones de Educacion en Informatica A.C. B . BID Banco Interamericano de Desarrollo. BUAP Benemerita Universidad Autonoma de Puebla. C . CA Cuerpo Academico. CESC Comision de Evaluacion y Seguimiento Curricular. CESC-FCC Comision de Evaluacion y Seguimiento Curricular Facultad de Ciencias de la Computacion. CIEES Comites Interinstitucionales para la Evaluacion de la Educacion Superior. CIGAA Comision para la Integracion y Gestion Academica y Administrativa. CIMPA-UCR Centro de Investigacion en Matematica Pura y Aplicada Universidad de Costa Rica CINVESTAV Centro de Investigacion y de Estudios Avanzados del Instituto Politecnico Nacional CITIP Centro de Innovacion de Tecnologias de la Informacion Puebla. CLEI Centro Latinoamericano de Estudios en Informatica. Benemerita Universidad Autonoma de Puebla 64 Facultad de Ciencias de la Computacion | Segundo Informe de Labores COMUMIT Comision del Modelo Universitario Minerva de Ingenieria y Tecnologia. CONAIC Consejo Nacional para la Acreditacion en Informatica y Computacion, A.C. CUA Consejo de Unidad Academica. CONACYT Consejo Nacional de la Ciencia y Tecnologia. CONCIC Congreso Nacional de Ciencias de la Computacion. CSIC Centro de Servicios Integrales de Computo. D . DAE Direccion de Administracion Escolar. DAGU Direccion de Atencion y Gestion Universitaria. DAPI Direccion de Adquisiciones, Proveeduria e Inventarios. DES Division de Estudios Superiores. DESIT Division de Estudios Superiores de Ingenieria y Tecnologia. DGES Direccion General de Educacion Superior. DGES-SEP Direccion General de Estudios Superiores Secretaria de Educacion Publica. DGO Direccion General de Obras. DIIE Departamento de Innovacion e Investigacion Educativa. Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 65 DPU Direccion de Proteccion Universitaria E . EDUSOL Encuentro en Linea de Educacion y Software Libre. EGEL CENEVAL Examen General para Egresados de Licenciatura Centro Nacional de Evaluacion para la Educacion Superior A.C. F . FCC Facultad de Ciencias de la Computacion. FES Facultad de Estudios Superiores. FISEP Fomento a la Industria del Software en el Estado de Puebla. FLISOL Festival Latinoamericano de Instalacion de Software Libre. I . ICC Ingenieria en Ciencias de la Computacion. IIMAS Instituto de Investigaciones en Matematicas Aplicadas y Sistemas. INAOE Instituto Nacional de Astrofisica, Optica y Electronica. IPN Instituto Politecnico Nacional ITESM Instituto Tecnologico y de Estudios Superiores de Monterrey. ITCR Instituto Tecnologico de Costa Rica Benemerita Universidad Autonoma de Puebla 66 Facultad de Ciencias de la Computacion | Segundo Informe de Labores L . LANMR Latin American Workshop on Non-Monotonic Reasoning. LCC Licenciatura en Ciencias de la Computacion. M . MCTS Microsoft Certified Technology Specialist. MUM Modelo Universitario Minerva. O . OMI Olimpiada Mexicana de Informatica. P . PE(s) Programa(s) Educativo(s). PIFAU Programa Institucional de Formacion de Academicos Universitarios. PIFI Programa Integral de Fortalecimiento Institucional. PROMEP Programa de Mejoramiento del Profesorado. PTC Profesor Tiempo Completo. PIEVA Programa Institucional de Evaluacion Academica. PRONABES Programa Nacional de Becas para la Educacion Superior. Benemerita Universidad Autonoma de Puebla Facultad de Ciencias de la Computacion | Segundo Informe de Labores 67 R . RIPPPA Reglamento de Ingreso, Permanencia y Promocion del Personal Academico. S . SBDC Small Bussiness Development Center. SEDECO Secretaria de Desarrollo Economico. SNI Sistema Nacional de Investigadores. U . UA Unidad Academica. UAM Universidad Autonoma Metropolitana. UANL Universidad Autonoma de Nuevo Leon. UC Universidad de Camaguey. UDLAP Universidad de las Americas Puebla. UNAM Universidad Nacional Autonoma de Mexico. UPAEP Universidad Popular Autonoma del Estado de Puebla UTP Universidad Tecnologica de Puebla. V . VIEP Vicerrectoria de Investigacion y Estudios de Posgrado.
50b454c65fa7351b70000370 1 BENEMERITA UNIVERSIDAD AUTONOMA DE PUEBLA. FACULTAD DE CIENCIAS DE LA COMPUTACION. Modulo II: Diseno de Bases de Datos. Maestro: Carlos Armando Rios Acevedo. Otono 2012 2 Objetivos: El alumno integrara los conceptos de analisis con el diseno de bases de datos relacionales. El alumno entendera la necesidad de analizar la informacion como base para modelar una base de datos relacional de manera eficiente. Se estudiara y aplicara la normalizacion dentro del proceso de creacion de la base de datos relacional. 3 MODULO II: Diseno de Bases de Datos. Indice: Paginas 1. Fases del diseno de bases de datos. 4 1.1 Recoleccion y analisis de requerimientos. 4 1.2 Diseno Conceptual. 10 1.3 Diseno logico de la base de datos (transformacion de modelo de datos). 12 1.4 Diseno Fisico de la base de datos 13 2. Modelo Conceptual de Bases de Datos 14 2.1 Modelos de Datos. 14 2.2 Metodologia del Diseno Conceptual. 16 2.3 Modelo Entidad-Relacion. 20 2.3.1 Entidades y Conjunto de Entidades. 21 2.3.2 Relaciones y Conjunto de Relaciones. 22 2.3.3 Tipos de Relaciones. 24 2.3.4 Llaves Primarias. 27 2.3.5 Diagrama Entidad-Relacion. 27 2.3.6 Reduccion de diagramas E-R a tablas. 30 2.3.7 Generalizacion y especializacion. 30 2.3.8 Agregacion. 32 2.3.9 Diagrama E- 33 2.4 Otros Modelos de Datos. 35 3. Modelado Logico de Bases de Datos 37 3.1 Introduccion. 37 3.2 Objetivos del MR. 38 3.2.1 Estructura del Modelo Relacional. 39 3.2.2 Dominio y Atributo. 42 3.2.3 Claves. 42 3.2.4 Restricciones. 44 3.3 Algebra Relacional. 49 3.4 Mapeo de los objetos del modelo conceptual al modelo relacional. 59 3.5 Teoria de la Normalizacion. 66 3.6 Dependencias Funcionales. 67 3.7 Apendice 79 4 1. Fases del Diseno de Bases de Datos 1.1 Recoleccion y Analisis de Requerimientos Ingenieria de Requerimientos Facilita y agiliza el mecanismo apropiado para comprender lo que quiere el cliente, analizando necesidades, confirmando su viabilidad, negociando una solucion razonable, especificando la solucion sin ambiguedad, validando la especificacion y gestionando los requisitos para que se transformen en un sistema operacional. Figura 1.1. Existen 4 fases principales en la Ingenieria de Requerimientos: 1. Estudio de viabilidad. 2. Obtencion y analisis de requerimientos. 3. Especificacion de Requerimientos. 4. Validacion de requerimientos. Figura 1.1. El proceso de Ingenieria de Requerimientos 5 Estudio de viabilidad. Christel y Kang identifican una serie de problemas que nos ayudan a comprender por que la obtencion de requisitos es costosa. problemas de alcance. El limite del sistema esta mal definido o los detalles tecnicos innecesarios, que han sido aportados por los clientes/usuarios, pueden confundir mas que clarificar los objetivos del sistema. problemas de comprension. Los clientes/usuarios no estan completamente seguros de lo que necesitan, no existe un total entendimiento del dominio del problema, existen dificultades para comunicar las necesidades al ingeniero del sistema, la omision de informacion o por considerar que es <<obvia>>, especificacion de requisitos que estan en conflicto con las necesidades de otros clientes/usuarios, o especificar requisitos ambiguos o poco estables. Problemas de volatilidad. Los requisitos cambian con el tiempo. Obtencion Analisis de Requisitos Una vez recopilados los requisitos, el producto obtenido configura la base del analisis de requisitos. Los requisitos se agrupan por categorias y se organizan en subconjuntos, se estudia cada requisito en relacion con el resto, se examinan los requisitos en su consistencia, completitud y ambiguedad, y se clasifican en base a las necesidades de los clientes/usuarios. En muchas ocasiones los stakeholders (clientes, usuarios, patrocinadores etc.), solicitan reducciones en tiempo de desarrollo de aplicaciones informaticas, disminucion de los costos originales presupuestados y/o incrementar el alcance del proyecto. Estas variables mencionadas: tiempo, alcance y costo se vuelven restricciones en el desarrollo de un proyecto de software y ocasionan en su mayor parte que el 80% de los desarrollos de software fracasen. El ingeniero del sistema debe resolver estos conflictos a traves de un proceso de negociacion. Los clientes, usuarios y el resto de intervinientes deberan clasificar sus requisitos y discutir los posibles conflictos segun su prioridad. Los riesgos asociados con cada requisito seran identificados y analizados. Se efectuan <<estimaciones>> del esfuerzo de desarrollo que se utilizan para valorar el impacto de cada requisito en el coste del proyecto y en el plazo de entrega. Utilizando un procedimiento iterativo, se eliminaran requisitos, se combinan y/o modifican para conseguir satisfacer los objetivos planteados. Figura 1.2 6 Figura 1.2. Modelo para obtener requerimientos. Especificacion de Requerimientos La mayor parte de las veces, el cliente no tiene claro que es lo que realmente necesita. Es el desarrollador el responsable de ayudar al cliente a entender y expresar sus necesidades para que el software las pueda satisfacer. Para identificar los requerimientos se consultan a los interesados a traves de varias tecnicas [Tomayco] como son: Observando el funcionamiento de la empresa. Entrevistando al personal de la empresa, concretamente, a aquellos que son considerados expertos en las areas de interes. Revisar documentos o sistemas ya existentes que se pretenden mejorar. Utilizando cuestionarios para recoger informacion de grandes grupos de usuarios. Utilizando la experiencia adquirida en el diseno de sistemas similares. Los requerimientos son el punto de partida para la construccion de un producto de software. Los Requerimientos de software son un area de la Ingenieria de Software dedicada al estudio de la adquisicion, analisis, especificacion, validacion y administracion de los requerimientos o necesidades de un software. [SWEBOK 2001]. Es una fase fundamental para la construccion de software con calidad. Se entiende por calidad en un producto de software aquel que cumple con las necesidades del usuario. 7 La especificacion de requerimientos es como un mapa para entender el problema a resolver. Los mapas son una ayuda a llegar mas rapido al lugar deseado. Si no se tiene el mapa, se puede manejar a toda velocidad pero no necesariamente se llegara a la meta. Una caracteristica de los requerimientos es que cambian constantemente por muchas razones: se modifican las necesidades del cliente, cambia el ambiente, la tecnologia, etc. por lo que establecer los requerimientos es un proceso de negociacion entre el cliente y los desarrolladores, donde ambos entienden y acuerdan el objetivo del software. El texto debera escribirse preferentemente en un lenguaje que entienda el cliente sin tecnicismos computacionales. Coad propone una serie de estrategias al redactar ese texto para ayudar a para software y para que se usara. Otra estrategia que propone es que el desarrollador se de uesto permite ver a los usuarios y el tipo de cosas que necesitan que el sistema haga se haga una lista de caracteristicas que debera tener el software, la que se puede escribir en orden de importancia. Los requerimientos deben formularse de forma clara, precisa y no ambigua. Para eso pueden usarse varias tecnicas al mismo tiempo: el lenguaje natural, que es claro para el cliente pero ambiguo; el modelado grafico, que es mas claro para el desarrollador y no es ambiguo, pero puede no ser claro para el cliente; prototipo de interfaz de usuario, util para ambos pues es una representacion visual de lo que hara el software. Hay dos tipos de requerimientos: los funcionales y los no funcionales. Los funcionales incluyen: Las entradas y salidas de datos, los calculos o las funciones del software. Los requerimientos funcionales de un sistema describen la funcionalidad o los servicios que se espera que este provea. Estos dependen del tipo de software y del sistema que se desarrolle y de los posibles usuarios del software. Cuando se expresan como requerimientos del usuario, habitualmente se describen de forma general, mientras que los requerimientos funcionales del sistema describen con detalle la funcion de este, sus entradas y saludas, excepciones, etc. 8 Los no funcionales son las caracteristicas o restricciones que se le piden al software: Necesidades de la interfaz externa como: tipo de usuario, hardware, software, comunicaciones, facilidad de uso por sus usuarios. Atributos del software tales como: eficiencia, disponibilidad, seguridad, conversion, portabilidad, mantenimiento. Restricciones del diseno: de formatos, de archivos, lenguajes, estandares, compatibilidad. Otros: base de datos, instalacion, etc. Los requerimientos no funcionales pueden ser: Interfaz con el usuario: descripcion de las caracteristicas que permitan al software apoyar al usuario en sus tareas. Interfaz externa: relacion o conexion con otros sistemas. Confiabilidad: solicitud del desempeno respecto a seguridad, tolerancia a fallas y su recuperacion. Eficiencia: limites de tiempo de respuesta. Mantenimiento: facilidad de comprension y realizacion de modificaciones futuras. Portabilidad: facilidad de transferencia de un ambiente de ejecucion a otro. Restricciones de diseno y construccion: las que imponga el cliente. Legales y reglamentarios: necesidades impuestas por leyes o reglamentos de otros. Estos diferentes tipos de requerimientos se clasifican de acuerdo a sus implicaciones. Requerimientos del Producto. Especifican el comportamiento del producto; como los requerimientos de desempeno en la rapidez de ejecucion del sistema y cuanta memoria se requiere; los de fiabilidad que fijan la tasa de fallas para que el sistema sea aceptable. Requerimientos del Negocio. Son importantes debido que reflejan los fundamentos del dominio de aplicacion. Si estos requerimientos no se satisfacen, es imposible comprender las necesidades y funcionamiento del sistema. Requerimientos del Usuario. Describen los requerimientos funcionales y no funcionales de tal forma que sean comprensibles por los usuarios del 9 sistema que no posean un conocimiento tecnico detallado. Deben redactarse utilizando un lenguaje natural, representaciones y diagramas intuitivos sencillos. Evitar los tecnicismos. Requerimientos del Sistema. Establecen con detalle los servicios y restricciones del sistema. Son descripciones detalladas de los requerimientos del usuario. Sirven como base para definir el contrato de la especificacion y, por lo tanto, debe ser una especificacion completa y consistente del sistema. Son utilizados por los ingenieros de software como el punto de partida para el diseno del sistema. Deberan establecer lo que el sistema hara y no la manera en que se implementara. Validacion de Requerimientos. Esta actividad comprueba la veracidad, consistencia y completitud de los requerimientos. Durante este proceso, inevitablemente se descubren errores en el documento de requerimientos. Se debe modificar entonces para corregir estos problemas. El documento de especificaciones de requerimientos del software (SRS) es la declaracion oficial de que deben implementar los desarrolladores del sistema. Debe incluir tanto los requerimientos del usuario para el sistema como una especificacion detallada de los requerimientos del sistema. El documento de requerimientos tiene un conjunto diverso de usuarios que va desde los altos cargos de la organizacion que pagan por el sistema, hasta los ingenieros responsables de desarrollar el software. La diversidad de posibles usuarios significa que el documento de requerimientos tiene que presentar un equilibrio entre la comunicacion de los requerimientos a los clientes, la definicion de los requerimientos en el detalle exacto para los desarrolladores y probadores, y la inclusion de informacion sobre la posible evolucion del sistema. Figura 1.3 10 Figura 1.3. Usuarios de un documento de Requerimientos. 1.2. Diseno conceptual En esta etapa se debe construir un esquema de la informacion que se usa en la empresa, de cualquier consideracion fisica. A este esquema se le denomina esquema conceptual. Al construir el esquema, los disenadores descubren la semantica (significado) de los datos de la empresa: encuentran entidades, atributos y relaciones. El objetivo es comprender: 11 La perspectiva que cada usuario tiene de los datos La naturaleza de los datos, Independientemente de su representacion fisica. El uso de los datos a traves de las areas de aplicacion. El esquema conceptual se puede utilizar para que el disenador transmita a la empresa lo que ha entendido sobre la informacion que esta maneja. Para ello, ambas partes deben estar familiarizadas con la notacion utilizada en el esquema. La mas popular es la notacion del modelo entidad-relacion. El esquema conceptual se construye utilizando la informacion que se encuentra en la especificacion de los requisitos de usuario. El diseno conceptual es completamente independiente de los aspectos de implementacion, como puede ser el Sistema Gestor de Bases de Datos (SGBD) que se vaya a usar, los programas de aplicacion, los lenguajes de programacion, el hardware disponible o cualquier otra consideracion fisica. Durante todo el proceso de desarrollo del esquema conceptual este se prueba y se valida con los requisitos de los usuarios. El esquema conceptual es una fuente de informacion para el diseno logico de la base de datos. Figura 1.4 Figura 1.4. Los tres niveles de abstraccion de bases de datos 12 1.3. Diseno logico de la base de datos (transformacion de modelo de datos) El diseno logico es el proceso de construir un esquema de la informacion que utiliza la empresa, basandose en un modelo de base de datos especifico, independiente del SGBD concreto que se vaya a utilizar y de cualquier otra consideracion fisica. En esta etapa, se transforma el esquema conceptual en un esquema logico que utilizara las estructuras de datos del modelo de base de datos en el que se basa el SGBD que se vaya a utilizar, como puede ser el modelo relacional, el modelo de red, el modelo jerarquico o el modelo orientado a objetos. Conforme se va desarrollando el esquema logico, este se va probando y validando con los requisitos de usuario. La normalizacion es una tecnica que se utiliza para comprobar la validez de los esquemas logicos basados en el modelo relacional, ya que asegura que las relaciones (tablas) obtenidas no tienen datos redundantes. El esquema logico es una fuente de informacion para el diseno fisico. Ademas, juega un papel importante durante la etapa de mantenimiento del sistema, ya que permite que los futuros cambios que se realicen sobre los programas de aplicacion o sobre los datos, se representen correctamente en la base de datos. Tanto el diseno conceptual, como el diseno logico, son procesos iterativos, tienen un punto de inicio y se van refinando continuamente. Ambos se deben ver como un proceso de aprendizaje en el que el disenador va comprendiendo el funcionamiento de la empresa y el significado de los datos que maneja. El diseno conceptual y el diseno logico son etapas clave para conseguir un sistema que funcione correctamente. Si el esquema no es una representacion fiel de la empresa, sera dificil, sino imposible, definir todas las vistas de usuario (esquemas externos), o mantener la integridad de la base de datos. Tambien puede ser dificil definir la implementacion fisica o el mantener unas prestaciones aceptables del sistema. Ademas, hay que tener en cuenta que la capacidad de ajustarse a futuros cambios es un sello que identifica a los buenos disenos de bases de datos. Por todo esto, es fundamental dedicar el tiempo y las energias necesarias para producir el mejor esquema que sea posible. 13 1.4. Diseno fisico. El diseno fisico es el proceso de producir la descripcion de la implementacion de la base de datos en memoria secundaria: estructuras de almacenamiento y metodos de acceso que garanticen un acceso eficiente a los datos. Para llevar a cabo esta etapa, se debe haber decidido cual es el SGBD que se va a utilizar, ya que el esquema fisico se adapta a el. Entre el diseno fisico y el diseno logico hay una realimentacion, ya que algunas de las decisiones que se tomen durante el diseno fisico para mejorar las prestaciones, pueden afectar a la estructura del esquema logico. En general, el proposito del diseno fisico es describir como se va a implementar fisicamente el esquema logico obtenido en la fase anterior. Concretamente, en el modelo relacional, esto consiste en: Obtener un conjunto de relaciones (tablas) y las restricciones que se deben cumplir sobre ellas. 14 2. Modelo Conceptual de Bases de Datos 2.1 Modelos de Datos. La modelacion de datos nos permiten abstraer de problemas del mundo real los datos (objetos o entidades) involucrados y las relaciones que existen entre ellos. Un modelo de datos es una serie de conceptos que puede utilizarse para describir un conjunto de datos y las operaciones para manipularlos. Hay dos tipos de modelos de datos: los modelos conceptuales y los modelos logicos. Los modelos conceptuales se utilizan para representar la realidad a un alto nivel de abstraccion. Mediante los modelos conceptuales se puede construir una descripcion de la realidad facil de entender. En los modelos logicos, las descripciones de los datos tienen una correspondencia sencilla con la estructura fisica de la base de datos. En el diseno de bases de datos se usan primero los modelos conceptuales para lograr una descripcion de alto nivel de la realidad, y luego se transforma el esquema conceptual en un esquema logico. El motivo de realizar estas dos etapas es la dificultad de abstraer la estructura de una base de datos que presente cierta complejidad. Un esquema es un conjunto de representaciones linguisticas o graficas que describen la estructura de los datos de interes. Los modelos conceptuales deben ser buenas herramientas para representar la realidad, por lo que deben poseer las siguientes cualidades: Expresividad: deben tener suficientes conceptos para expresar perfectamente la realidad. Simplicidad: deben ser simples para que los esquemas sean faciles de entender. Minimalidad: cada concepto debe tener un significado distinto. Formalidad: todos los conceptos deben tener una interpretacion unica, precisa y bien definida. Es una coleccion de herramientas conceptuales para la descripcion de datos, relaciones entre datos, semantica de los datos y restricciones de consistencia. 15 Los modelos de datos describen las relaciones entre los datos que forman una base de datos. No se refieren en ningun momento a los valores especificos que un elemento de datos debe tomar. Tratan a los datos como grupos genericos, que pueden tomar cualquier conjunto de valores especificos Representacion de Datos Items/Entidades/Objetos [sustantivos]: distinguibles de otros (un libro, un autor, un tema...). Atributos [adjetivos]: Propiedades asociadas a un conjunto de entidades Relaciones/Conexiones/Asociaciones [verbos]: Conexiones semanticas entre dos conjuntos de entidades (escribe, trata...). Un esquema es una descripcion de una coleccion particular de datos usando un modelo de datos especifico. Un Sistema Manejador de Bases de Datos (SGBD) soporta un modelo de datos, que es usado para describir el esquema de la base de datos a utilizar. Existen varios modelos de datos. Figura 2.1. Modelo Basado en Grafos (Jerarquico y de Red). Modelo Entidad-Relacion (E-R). Modelo Entidad-Relacion Extendido (EER). Modelo Orientado a Objetos. Modelo Multidimensional. Modelo Relacional. 16 Figura 2.1 Modelos de Datos (Maquina-Usuario). 2.2 Metodologia de Diseno Conceptual El primer paso en el diseno de una base de datos es la produccion del esquema conceptual. Normalmente, se construyen varios esquemas conceptuales, cada uno para representar las distintas visiones que los usuarios tienen de la informacion. Cada una de estas visiones suelen corresponder a las diferentes areas funcionales de la empresa como, por ejemplo, produccion, ventas, recursos humanos, etc. Estas visiones de la informacion, denominadas vistas, se pueden identificar de varias formas. Una opcion consiste en examinar los diagramas de flujo de datos, que se pueden haber producido previamente, para identificar cada una de las areas funcionales. La otra opcion consiste en entrevistar a los usuarios, examinar los procedimientos, los informes y los formularios, y tambien observar el funcionamiento de la empresa. A los esquemas conceptuales correspondientes a cada vista de usuario se les denomina esquemas conceptuales locales. Cada uno de estos esquemas se compone de entidades, relaciones, atributos, dominios de atributos e identificadores. El esquema conceptual tambien tendra una documentacion, que se ira produciendo durante su desarrollo. Las tareas a realizar en el diseno conceptual son las siguientes: 1. Identificar las entidades. 2. Identificar las relaciones. 3. Identificar los atributos y asociarlos a entidades y relaciones. 4. Determinar los dominios de los atributos. 17 5. Determinar los identificadores. 6. Determinar las jerarquias de generalizacion (si las hay). 7. Dibujar el diagrama entidad-relacion. 8. Revisar el esquema conceptual local con el usuario. 1. Identificar las entidades En primer lugar hay que definir los principales objetos que interesan al usuario. Estos objetos seran las entidades. Una forma de identificar las entidades es examinar las especificaciones de requisitos de usuario. En estas especificaciones se buscan los nombres o los sintagmas nominales que se mencionan (por ejemplo: numero de empleado, nombre de empleado, numero de inmueble, direccion del inmueble, alquiler, numero de habitaciones). Tambien se buscan objetos importantes como personas, lugares o conceptos de interes, excluyendo aquellos nombres que solo son propiedad desde otros objetos. Por ejemplo, se pueden agrupar el numero de empleado y el nombre de empleado en una entidad denominada empleado, y agrupar numero de inmueble, direccion del inmueble, alquiler y numero de habitaciones en otra entidad denominada inmueble. Otra forma de identificar las entidades es buscar aquellos objetos que existen por si mismos. Por ejemplo, empleado es una entidad porque los empleados existen, sepamos o no sus nombres, direcciones y telefonos. Siempre que sea posible, el usuario debe colaborar en la identificacion de las entidades. A veces, es dificil identificar las entidades por la forma en que aparecen en las especificaciones de requisitos. Los usuarios, a veces, hablan utilizando ejemplos o analogias. En lugar de hablar de empleados en general, hablan de personas concretas, o bien, hablan de los puestos que ocupan esas personas. 2. Identificar las relaciones Una vez definidas las entidades, se deben definir las relaciones existentes entre ellas. Del mismo modo que para identificar las entidades se buscaban nombres en las especificaciones de requisitos, para identificar las relaciones se suelen buscar las expresiones verbales (por ejemplo: oficina tiene empleados, empleado gestiona inmueble, cliente visita inmueble). Si las especificaciones de 18 requisitos reflejan estas relaciones es porque son importantes para la empresa y, por lo tanto, se deben reflejar en el esquema conceptual. Una vez identificadas todas las relaciones, hay que determinar la cardinalidad minima y maxima con la que participa cada entidad en cada una de ellas. De este modo, el esquema representa de un modo mas explicito la semantica de las relaciones. La cardinalidad es un tipo de restriccion que se utiliza para comprobar y mantener la calidad de los datos. Estas restricciones son aserciones sobre las entidades que se pueden aplicar cuando se actualiza la base de datos para determinar si las actualizaciones violan o no las reglas establecidas sobre la semantica de los datos. Conforme se van identificando las relaciones, se les van asignando nombres que tengan significado para el usuario. En el diccionario de datos se anotan los nombres de las relaciones, su descripcion y las cardinalidades con las que participan las entidades en ellas. 3. Identificar los atributos y asociarlos a entidades y relaciones Al igual que con las entidades, se buscan nombres en las especificaciones de requisitos. Son atributos los nombres que identifican propiedades, cualidades, identificadores o caracteristicas de entidades o relaciones. 4. Determinar los dominios de los atributos El dominio de un atributo es el conjunto de valores que puede tomar el atributo. Un esquema conceptual esta completo si incluye los dominios de cada atributo: los valores permitidos para cada atributo, su tamano y su formato. 5. Determinar los identificadores Cada entidad tiene al menos un identificador. En este paso, se trata de encontrar todos los identificadores de cada una de las entidades. Los identificadores pueden ser simples o compuestos. De cada entidad se escogera uno de los identificadores como clave primaria en la fase del diseno logico. Todos los identificadores de las entidades se deben anotar en el diccionario de datos. 19 6. Determinar las jerarquias de generalizacion En este paso hay que observar las entidades que se han identificado hasta el momento. Hay que ver si es necesario reflejar las diferencias entre distintas ocurrencias de una entidad, con lo que surgiran nuevas subentidades de esta entidad generica; o bien, si hay entidades que tienen caracteristicas en comun y que realmente son subentidades de una nueva entidad generica. En cada jerarquia hay que determinar si es total o parcial y exclusiva o superpuesta. 7. Dibujar el diagrama entidad-relacion Una vez identificados todos los conceptos, se puede dibujar el diagrama entidad-relacion correspondiente a una de las vistas de los usuarios. Se obtiene asi un esquema conceptual local. 8. Revisar el esquema conceptual local con el usuario Antes de dar por finalizada la fase del diseno conceptual, se debe revisar el esquema conceptual local con el usuario. Este esquema esta formado por el diagrama entidad-relacion y toda la documentacion que describe el esquema. Si se encuentra alguna anomalia, hay que corregirla haciendo los cambios oportunos, por lo que posiblemente haya que repetir alguno de los pasos anteriores. Este proceso debe repetirse hasta que se este seguro de que el esquema conceptual es una fiel representacion de la parte de la empresa que se esta tratando de modelar. 20 2.3 Modelo Entidad-Relacion El modelo entidad-relacion (E-R) es un concepto de modelado de alto nivel para bases de datos, propuesto por Peter Chen en el ano de 1976. Ver figura 2.2. Figura 2.2 . Originalmente, el modelo entidad-relacion solo incluia los conceptos de entidad, relacion y atributo. Mas tarde, se anadieron otros conceptos, como los atributos compuestos y las jerarquias de generalizacion, en lo que se ha denominado modelo entidad-relacion extendido. (E-R) es una representacion conceptual de la informacion. Mediante una serie de procedimientos se puede pasar del modelo E-R a otros, por ejemplo al modelo relacional. Los diagramas E-R son un lenguaje grafico para describir conceptos. El modelo (E-R) es un modelo informal, sin embargo ayuda como teoria inicial para modelar estructuras de datos y asistir al disenador para definir y entender las cosas significativas acerca de cual informacion necesita ser conocida o manejada. Para modelar un diagrama de E-R, se necesita experiencia y muy buen entrenamiento para lograr resultados correctos. A continuacion se detallan algunos de los pasos para modelar Diagramas E-R: 1) Se parte de una descripcion textual del problema (Especificacion de Requerimientos de Softwar 2) Se hace una lista de los sustantivos y verbos que aparecen. 3) Los sustantivos son posibles entidades o atributos. 4) Los verbos son posibles relaciones. 5) Analizando los parrafos se determina la cardinalidad de las relaciones y otros detalles. 21 6) Se elabora el diagrama entidad-relacion. 7) Se completa el modelo con listas de atributos y una descripcion de otras restricciones que no se reflejan en el diagrama. 2.3.1 Entidades y conjunto de entidades Una entidad es una <<cosa>> u <<objeto>> en el mundo real que es distinguible de todos los demas objetos. Una entidad tiene un conjunto de propiedades, y los valores para algun conjunto de propiedades pueden identificar una entidad de forma univoca. [Silberschatz, 2004]. Es todo objeto de datos que es diferenciable de otros objetos, ya sean abstractos o concretos. Un conjunto de entidades es un conjunto de entidades del mismo tipo que comparten las mismas propiedades, o atributos. [Silberschatz, 2004]. Como un conjunto de entidades puede tener diferentes atributos, cada entidad se puede describir como un conjunto de pares (atributo, valor), un par para cada atributo del conjunto de entidades. Entidades fuertes y debiles. Cuando una entidad participa en una relacion puede adquirir un papel fuerte o debil. Una entidad debil es aquella que no puede existir sin participar en la relacion, es decir, aquella que no puede ser univocamente identificada solamente por sus atributos. Una entidad fuerte es aquella que si puede ser identificada univocamente. En los algunos casos, se debil. Atributos Permite describir a una entidad. Los atributos describen propiedades o caracteristicas de una entidad y/o relacion. Los atributos describen informacion util sobre las entidades. En particular, los atributos identificativos son aquellos que permiten diferenciar a una instancia de la entidad de otra distinta. Por ejemplo el atributo identificativo que diferencia a un alumno de otros es su matricula de estudiante. Ver figura 2.3 22 Figura 2.3. Entidad empleados con atributos. Para cada atributo hay un conjunto de valores permitidos, llamados el dominio, o el conjunto de valores, de ese atributo. Un atributo, como se usa en el modelo E-R, se puede caracterizar por los siguientes tipos de atributo: Atributos simples. Aquellos que no estan divididos en subpartes. Por ejemplo apellido paterno, apellido materno etc. Atributos compuestos. Aquellos que se pueden dividir en atributos simples. Por ejemplo el atributo direccion se puede dividir en: Calle, Colonia, Numero, Codigo Postal, etc. Atributos Multivalorados. Aquellos que tienen un conjunto de valores para una entidad especifica. Por ejemplo el atributo cuenta de correo. Atributos identificativos o Claves. Son aquellos que permiten diferenciar a una instancia de la entidad de otra distinta. Por ejemplo el atributo identificativo que diferencia a un alumno de otros es su matricula de estudiante. Atributos Derivados. El valor de este atributo se puede derivar o calcular a partir de otros atributos. Por ejemplo el atributo Importe se puede calcular multiplicando el atributo precio de venta por la cantidad de unidades compradas. 2.3.2 Relaciones y Conjunto de Relaciones Es una correspondencia o asociacion entre dos o mas entidades. Cada relacion tiene un nombre que describe su funcion. Las relaciones se representan graficamente mediante rombos y su nombre aparece en el interior. Las entidades 23 que estan involucradas en una determinada relacion se denominan entidades participantes. El numero de participantes en una relacion es lo que se denomina grado de la relacion. Por lo tanto, una relacion en la que participan dos entidades es una relacion binaria; si son tres las entidades participantes, la relacion es ternaria; etc. Ver figura 2.4. Atributos en las relaciones. Las relaciones tambien pueden tener atributos asociados. Se representan igual que los atributos de las entidades. Un ejemplo tipico son las relaciones de Relacion: Describe la conexion o asociacion existente entre dos o mas entidades. Por ejemplo EMPLEADOS trabajan en DEPARTAMENTOS es una relacion BINARIA. Figura 2.4. Figura 2.4 Ejemplo de relacion Binaria. ?El empleado JOSE en cuantos departamentos trabaja? ?En el departamento de CONTABILIDAD cuantos empleados trabajan? 24 2.3.3 Tipos de relaciones La cardinalidad con la que una entidad participa en una relacion especifica el numero minimo y el numero maximo de correspondencias en las que puede tomar parte cada ocurrencia de dicha entidad. La participacion de una entidad en una relacion es obligatoria (total) si la existencia de cada una de sus ocurrencias requiere la existencia de, al menos, una ocurrencia de la otra entidad participante. Si no, la participacion es opcional (parcial). Las reglas que definen la cardinalidad de las relaciones son las reglas de negocio. 25 26 27 2.3.4 Llaves Primarias Una clave permite identificar un conjunto de atributos suficiente para distinguir las entidades entre si. Las claves tambien ayudan a identificar univocamente a las relaciones y asi a distinguir las relaciones entre si. [Silberschatz, 2004]. Por lo tanto, los valores de los atributos de una entidad deben ser tales que permitan identificar univocamente a la entidad. Una superclave es un conjunto de uno o mas atributos que, tomados colectivamente, permiten identificar de forma unica una entidad en el conjunto de entidades. Llaves candidatas: llaves que posee una relacion, numero minimo de atributos. Una Clave primaria sirve para denotar una clave candidata que es elegida por el disenador de la base de datos como elemento principal para identificar las entidades dentro de un conjunto de entidades. Buscando que posea el menor numero de atributos, y que no pueda tener valores nulos. 2.3.5 Diagrama Entidad-Relacion Representa graficamente y de manera logica toda la informacion y como los datos se relacionan entre si. (E-R) esta basado en una percepcion del mundo real consistente en objetos basicos llamados entidades y de relaciones entre estos objetos. Ver Figura 2.5. Figura 2.5. Elementos de E-R 28 Por ejemplo tenemos a continuacion el diagrama entidad-relacion para un punto de venta de abarrotes sencillo. Ver figura 2.6. Figura 2.6 Diagrama entidad-relacion para un punto de venta. Notacion E-R Alternativas. Ver Figura 2.7 Figura 2.7 Notacion E-R Alternativas Otras notaciones a usarse en los diagramas de entidad-relacion son: 1. Los rectangulos representan una entidad o conjunto de entidades. 2. Los circulos representan atributos. (ligados a sus conjuntos de entidades mediante flechas sin direccion). 3. Los rombos o rectangulos redondeados representan relaciones ligadas a las entidades por flechas no dirigidas, aunque muchas, con el fin de simplificar 29 el diagrama, no se dibuja el rectangulo y en su lugar solo se etiqueta a las flechas que representan la relacion. Relacion uno a uno Relacion Obligatoria Relacion uno a muchos Relacion Opcional Debe Puede La tecnica para llegar a un modelo entidad-relacion, se puede iniciar con un prototipo inicial y gradualmente irlo depurando, ganando precision e identificando los elementos necesarios para modelar el negocio. Al principio se puede identificar cada entidad con al menos los atributos principales. Figura 2.8 Figura 2.8. Diagrama entidad-relacion 30 2.3.5 Reduccion de diagramas E-R a tablas Atributo: Los atributos son empleados para identificar, describir, calificar o expresar el estado de una entidad. Toda entidad posee un atributo o combinacion de atributos que se denominan . Adicionalmente los atributos pueden ser obligatorios u opcionales. A los atributos que forman parte de la clave primaria se los identifica anteponiendoles el signo de numero (#). A los atributos obligatorios se les antepone el asterisco (*). A los atributos opcionales se les antepone un circulo (0). 2.3.7 Generalizacion y especializacion La generalizacion es el tipo de interrelacion que existe entre un tipo de entidad y los tipos de entidad mas especificos que dependen de el. En el mundo real es muy habitual la descomposicion de un tipo de entidad, creandose de esta forma una jerarquia de tipos de entidad donde se puede distinguir un supertipo del cual dependen varios subtipos. La abstraccion correspondiente a este tipo de interrelacion entre entidades se denomina ES_UN Asi, por ejemplo, en la figura 2.9, el tipo de entidad DOCUMENTO es el supertipo de esta jerarquia, y constituye la generalizacion de los subtipos de entidades LIBRO y ARTICULO. Y a su vez estos ultimos son una especializacion del supertipo DOCUMENTO. Una de las caracteristicas mas importantes de las jerarquias es la herencia, por la cual, los atributos de un supertipo son heredados por sus subtipos. Asi, por ejemplo, en la figura 2.9 vemos que tanto un libro como un articulo son documentos, por lo que los tipos de entidad ARTICULO y LIBRO poseeran (heredaran) todos los atributos del tipo de entidad DOCUMENTO. 31 Figura 2.9 Ejemplos de Generalizacion y Especializacion. En la generalizacion, los atributos comunes a los subtipos (incluidos los identificadores) se asignan al supertipo, mientras que los atributos especificos se asocian al subtipo correspondiente. Del mismo modo, las interrelaciones que afectan a todos los subtipos se asocian al supertipo, dejandose para los subtipos las interrelaciones especificas en las que el correspondiente subtipo. En un diagrama entidad-relacion tambien puede agrupar las entidades en supertipo y en subtipo. Los supertipos agrupa a dos mas entidades subtipo. Los subtipos heredan los atributos de las entidades supertipo. Supertipo Subtipo PROFESOR ALUMNO # Codigo * Nombre deg Sexo * Salario # Codigo * Nombre deg Sexo * Beca 32 Cada subtipo puede tener relaciones propias independientes del supertipo. Los subtipos se representan como cajas dibujadas dentro de la caja del supertipo. 2.3.8 Agregacion La agregacion es una abstraccion a traves de la cual las relaciones se tratan como entidades de nivel mas alto. Asi, para este ejemplo, se considera el conjunto de relaciones trabaja-en (que relaciona los conjuntos de entidades empleado, sucursal y trabajo) como un conjunto de entidades de nivel mas alto denominado trabaja-en. Tal conjunto de entidades se trata de la misma forma que cualquier otro conjunto de entidades. Se puede crear entonces una relacion binaria dirige entre trabaja-en y director para representar quien dirige la tarea. Figura 2.10. PERSONA # Codigo * Nombre deg Sexo PROFESOR * Salario ALUMNO * Beca supertipo Subtipo 33 Figura 2.10 Diagrama E-R con agregacion. 2.3.9 Ejemplo Diagrama E- Una tienda de venta de abarrotes, desea tener una base de datos para facilitar la gestion de la informacion de sus clientes, facturas marcas, categorias y empleados. La tienda cuenta con varios clientes, de los cuales almacena (nombre completo, direccion, RFC, correos electronicos, numeros de telefonos celulares, etc.). Los clientes reciben una o mas facturas por cada una de sus compras. En el caso de las facturas la informacion de los clientes solo se guardara por una sola ocasion. Cada nota factura consta de la fecha de compra, folio de la nota, codigo de barras del producto, nombre del producto, precio de venta, unidades vendidas tener uno o mas productos y un producto puede aparecer en uno o mas pedidos. Cada producto pertenece a una sola marca y categoria; pero cada categoria o marca tiene uno o mas productos. Ademas cada producto tiene un precio de compra y unidades en existencia. 34 Finalmente a los empleados se les almacenara los siguientes datos: nombre completo, direccion, codigo de empleado, correos electronicos, numeros de telefonos celulares, salario mensual, horario laboral. Figura 2.11 Figura 2.11. Diagrama Entidad-Relacion para una tienda de abarrotes pequena. 35 2.4 Otros Modelos de Datos (XML) XML (eXtensible Mark up Language) es un lenguaje de representacion de datos que permite etiquetarlos para descubrir su significado. Una de sus caracteristicas distintivas es que permite crear conjuntos especificos de etiquetas (dialectos de XML) para describir toda clase de datos. Este lenguaje fue disenado para un ambiente altamente distribuido como lo es Internet, haciendo posible el tener datos autos-descritos que pueden tratarse automaticamente y que son independientes de cualquier plataforma de hardware, ya que todo en XML es texto plano. Representacion de datos en XML Los componentes basicos de XML son las etiquetas y los elementos. Las etiquetas (tags en ingles) son utilizadas para marcar secciones en los datos, para una aplicacion bancaria estos podrian ser por ejemplo cliente, cuenta, etc. Un elemento define una seccion de datos que se delimita entre una etiqueta de apertura y otra de cierre. Figura 2.12 Figura 2.12 Representacion de Datos XML Los elementos pueden anidarse a varios niveles formando una jerarquia elemento/subelemento. Los elementos pueden tener atributos, los cuales se especifican por pares nombre=valor dentro de la etiqueta de inicio de un elemento. Un elemento puede tener varios atributos, pero cada atributo puede ocurrir solo una vez. Una discusion frecuente es en que momento se deben usar atributos o subelementos. Por ejemplo, la matricula de un alumno se puede representar como un atributo: 36 O bien como un sub_elemento: <alumnos> <matricula>980019335</matricula> </alumnos> En este caso, una sugerencia es usar atributos para los identificadores de los elementos y usar sub_elementos para el contenido. Esquemas XML El esquema de una base de datos restringe la informacion que puede ser almacenada y los tipos de datos de los valores almacenados. Los documentos XML no requieren tener un esquema asociado, pero son los esquemas los que hacen posible consultar e interpretar los datos. Para los XML, existen dos formas de especificar esquemas: la Document Type Definition (DTD) y el XML Schema. Figura 2.13. Figura 2.13 Schema de un XML. XPath y XQuery son lenguajes de interrogacion que ofrecen multiples funcionalidades. En el sitio web del consorcio W3C se encuentra informacion detallada de ambos. 37 3. Modelo Logico de Bases de Datos 3.1 Introduccion Es una buena justificacion para estudiar la teoria que hay tras el modelo relacional, la que da Hernandez (1997): Muchas disciplinas (y sus metodologias de diseno asociadas) tienen algun tipo de base teorica. Los ingenieros industriales disenan estructuras utilizando teorias de la fisica. Los compositores crean sinfonias utilizando conceptos de teoria de la musica. La industria del automovil utiliza teorias de la aerodinamica para disenar automoviles con menor consumo. La industria aeronautica utiliza las mismas teorias para disenar alas de aviones que reduzcan la resistencia al viento. Estos ejemplos demuestran que la teoria es muy importante. La ventaja principal de la teoria es que hace que las cosas sean predecibles: nos permite predecir que ocurrira si realizamos una determinada accion. Por ejemplo, sabemos que si soltamos una piedra, caera al suelo. Consideremos ahora el ejemplo de una base de datos relacional. Sabemos que si un par de tablas estan relacionadas, podemos extraer datos de las dos a la vez, simplemente por el modo en que funciona la teoria de las bases de datos relacionales. Los datos que se saquen de las dos tablas se basaran en los valores coincidentes del campo que ambas tienen en comun. Una vez mas, nuestras acciones tienen un resultado predecible. El modelo relacional se basa en dos ramas de las matematicas: la teoria de conjuntos y la logica de predicados de primer orden. El hecho de que el modelo relacional este basado en la teoria de las matematicas es lo que lo hace tan seguro y robusto. Al mismo tiempo, estas ramas de las matematicas proporcionan los elementos basicos necesarios para crear una base de datos relacional con una buena estructura, y proporcionan las lineas que se utilizan para formular buenas metodologias de diseno. Hay quien ofrece una cierta resistencia a estudiar complicados conceptos matematicos para tan solo llevar a cabo una tarea bastante concreta. El modelo Relacional fue propuesto por el Dr. Edgar F. Codd de IBM en 1970 en el siguiente articulo: "A Relational Model for Large Shared Data 38 Banks, Communications of the ACM, June 1970. Este articulo revoluciono el area de las bases de datos por este trabajo, Edgar Codd obtuvo el premio Turing en 1981 (ACM Turing Award). Figura 3.1 Figura 3.1 Edgar F. Codd. El modelo relacional es ampliamente usado en los sistemas manejadores de bases de datos actuales. Obtiene su nombre del concepto matematico de relacion matematica, donde cada entidad es representada por medio de una relacion. diferentes de una entidad dada. 3.2 Objetivos del MR El documento de Codd propone un modelo de datos basado en la teoria de las relaciones, en donde los datos se estructuran logicamente en forma de independencia de esta estructura logica respecto al modo de almacenamiento y a otras caracteristicas de tipo fisico. El trabajo publicado por Codd en ACM presentaba un nuevo modelo de datos que perseguia una serie de objetivos: Independencia fisica: el modo en que se almacenan los datos no debe influir en su manipulacion logica y, por tanto, los usuarios acceden a esos datos no han de modificar sus programas por cambios en el almacenamiento fisico. 39 Independencia logica: Anadir, eliminar o modificar cualquier elemento de la base de datos no debe repercutir en los programas y/o usuarios que estan accediendo a subconjuntos parciales de los mismos (vistas). Flexibilidad: En el sentido de poder ofrecer a cada usuario los datos de la forma mas adecuada a la correspondiente aplicacion. Uniformidad: Las estructuras logicas de los datos presentan un aspecto uniforme (tablas), lo que facilita la concepcion y manipulacion de la base de datos por parte de los usuarios. Sencillez: Las caracteristicas anteriores, asi como unos lenguajes de usuario muy sencillos, producen como resultado que el modelo de datos relacionales faciles de comprender y de utilizar por parte del usuario final. 3.2.1 Estructura del Modelo Relacional Una base de datos relacional representa a los datos mediante tablas bidimensionales, compuestas de renglones y columnas. Figura 3.2 Figura 3.2. Tabla bidimensional. 40 En la tabla podemos distinguir su nombre, un conjunto de columnas, denominadas atributos, que representan propiedades de la tabla y que tambien estan caracterizadas por su nombre, y un conjunto de filas llamadas tuplas, que contienen los valores que toma cada uno de los atributos para cada elemento de la relacion. La tabla por si misma, y no los datos almacenados en ella, es a lo que se llama relacion. Las relaciones (tablas) poseen un nombre que refleja su contenido Ejemplo: Relacion Products Los datos almacenados en una tabla son llamados ocurrencias o instancias de la relacion. Las tablas estan formadas por una coleccion de atributos. Atributo: Describe a la relacion, con referencia a los datos que almacena. Forman las columnas de una relacion. Tiene un nombre que se relaciona con el tipo de datos que el atributo almacena. En una tabla se puede distinguir una cabecera que define la estructura de la tabla: es decir, sus atributos con los dominios subyacentes, y un cuerpo que esta formado por un conjunto de tuplas que varian en el tiempo. A continuacion la 41 terminologia relacional con la que corresponde a las tablas y a los ficheros. Figura 3.3. RELACION TABLA FICHERO TUPLA FILA REGISTRO ATRIBUTO COLUMNA CAMPO GRADO NUMERO DE COLUMNAS NUMERO DE CAMPOS CARDINALIDAD NUMERO DE FILAS NUMERO DE REGISTROS Figura 3.3. Relacion de terminologia en MR. Propiedades Importantes en las tablas No se permiten duplicados. Numero finito de renglones y columnas. El orden de los renglones no es relevante. Un mismo valor puede aparecer varias veces en una columna. El grado (arity) de una tabla es el numero de columnas o atributos Grado debe ser >=0. Cardinalidad de una tabla |T| es el numero de tuplas. Cada renglon representa una tupla de R. Una tupla es un conjunto de atributos asociados y corresponde a un renglon de la tabla. En el modelo relacional, las relaciones son representadas a traves de archivos que se organizan por llaves, la organizacion fisica de tales archivos es usando el valor de la llave. El hecho de organizar los archivos a traves de las llaves permite que las operaciones de insercion y borrado se realicen a traves del valor de la llave. Un esquema relacional se conforma por una o mas tablas, las cuales dinamicamente pueden ser sujetas a insercion de nuevas tuplas, o de la eliminacion de algunas de ellas, o bien de la modificacion de los componentes de algunas de esas tuplas. 42 3.2.2 Dominio y Atributo. Dominio: conjunto de valores permitido para un atributo. Es una restriccion sobre la relacion. La restriccion es una regla que gobierna los datos que pueden ser almacenados en un atributo de una relacion. Este conjunto finito de valores es homogeneo porque son todos del mismo tipo y atomicos porque son indivisibles en lo que al modelo se refiere. Todo dominio ha de tener un nombre, por el cual nos podemos referir a el, y un tipo de datos. Un atributo es el nombre de una columna de una relacion. En el modelo relacional, las relaciones se utilizan para almacenar informacion sobre los objetos que se representan en la base de datos. Una relacion se representa graficamente como una tabla bidimensional en la que las filas corresponden a registros individuales y las columnas corresponden a los campos o atributos de esos registros. Los atributos pueden aparecer en la relacion en cualquier orden. 3.2.3 Claves. Ya que en una relacion no hay tuplas repetidas, estas se pueden distinguir unas de otras, es decir, se pueden identificar de modo unico. La forma de identificarlas es mediante los valores de sus atributos. Cada relacion posee una o varias llaves. Llave: Es el conjunto minimo de atributos que identifican de manera unica a cada tupla en la relacion. Una llave debe ser unica. 43 Pueden estar formadas por un solo atributo o por la concatenacion de varios atributos. Para poder definirlas es necesario conocer las reglas bajo las cuales operan los datos en la relacion. Clave Candidata: agrupacion de atributos (puede ser solo un atributo) que identifican sin ambiguedad y de forma univoca todas las posibles tuplas de una tabla. Como minimo, una clave debe tener un atributo. Como maximo, los que tenga la tabla. E unico modo de identificar las claves candidatas es conociendo el significado real de los atributos, ya que esto permite saber si es posible que aparezcan duplicados. Solo usando esta informacion semantica se puede saber con certeza si un conjunto de atributos forman una clave candidata. Figura 3.4 Clave Primaria: se escoge de entre varias claves candidatas. Usualmente se recomienda con el menor numero posible de atributos (indexacion). No permite nulos en algun atributo de la misma (regla de integridad de entidad). Claves Alternativas: el resto de las claves candidatas no escogidas como clave primaria. Clave Ajena: un atributo de una tabla (o agregacion de ellos) puede ser la llave primaria de otra tabla. Ademas sirve como un mecanismo de relacion y enlace de informacion. En una tabla no es obligatoria la existencia de claves ajenas. Atributo simple o compuesto, en una relacion, que esta definido en el mismo dominio que la llave primaria de otra relacion. Una llave foranea no necesita tener el mismo nombre que su llave primaria, solo contener datos equivalentes. Figura 3.4. Llave Primaria Llave Primaria 44 3.2.4 Restricciones. Nulos Cuando en una tupla un atributo es desconocido, se dice que es nulo. Un nulo no representa el valor cero ni la cadena vacia, estos son valores que tienen significado. El nulo implica ausencia de informacion, bien porque al insertar la tupla se desconocia el valor del atributo, o bien porque para dicha tupla el atributo no tiene sentido. Ya que los nulos no son valores, deben tratarse de modo diferente, lo que causa problemas de implementacion. De hecho, no todos los SGBD relacionales soportan los nulos. Regla de Integridad de la llave (Key Constraint): Cada tabla debe tener una llave que identifique de manera unica cada tupla. Regla de Integridad de la Entidad (Entity Integrity Constraint): La llave Primaria no puede ser Nula. Regla de Integridad de Referencia (Referential Integrity Constraint): Una tupla de una tabla que referencia otra tabla DEBE referirse a una tupla existente en esa tabla. La integridad referencial es una importante restriccion semantica que viene impuesta por el mundo real, siendo el usuario quien la define al escribir el esquema relacional. Por lo tanto, para cada clave ajena de la base de datos habra que contestar a tres preguntas: Regla de los nulos: ?Tiene sentido que la clave ajena acepte nulos? 45 Regla de borrado: ?Que ocurre si se intenta borrar la tupla referenciada por la clave ajena? a) Restringir: no se permite borrar la tupla referenciada. b) Propagar: se borra la tupla referenciada y se propaga el borrado a las tuplas que la referencian mediante la clave ajena. c) Anular: se borra la tupla referenciada y las tuplas que la referenciaban ponen a nulo la clave ajena (solo si acepta nulos). Regla de modificacion: ?Que ocurre si se intenta modificar el valor de la clave primaria de la tupla referenciada por la clave ajena? a) Restringir: no se permite modificar el valor de la clave primaria de la tupla referenciada. b) Propagar: se modifica el valor de la clave primaria de la tupla referenciada y se propaga la modificacion a las tuplas que la referencian mediante la clave ajena. c) Anular: se modifica la tupla referenciada y las tuplas que la referenciaban ponen a nulo la clave ajena (solo si acepta nulos). 12 Reglas de CODD para los Sistemas Relacionales 1. Representacion de la informacion: Toda informacion en una base de datos relacional debe representarse explicitamente a nivel logico, y de manera unica, por medio de valores en tablas. Podriamos decir que este es el principio basico del modelo relacional. 2. Acceso garantizado: Todo dato debe ser accesible mediante una combinacion de un nombre de tabla, un valor de su clave y el nombre de una columna. Es una forma de insistir en la obligatoriedad de la clave primaria. 3. Tratamiento Sistematico de valores nulos: Los valores nulos informacion desconocida o inaplicable, han de ser tratados sistematicamente por el sistema, el cual ha de ofrecer las facilidades necesarias para su tratamiento. 46 4. Catalogo activo en linea basado en el modelo relacional: la representacion de la metainformacion (descripcion de la base de datos ) debe ser igual a la de los otros datos, y su acceso debe poder realizarse por medio del mismo lenguaje relacional que se utiliza para los demas datos; es decir, el modelo de datos para la metainformacion debe ser tambien el relacional. 5. Sub-lenguaje de datos completo: Debe existir un lenguaje que permita un completo manejo de la base de datos (definicion de datos, definicion de vistas, manipulacion de datos, restricciones de integridad, autorizaciones y gestion de transacciones). 6. Actualizacion de vistas: Toda vista teoricamente actualizable debe poder ser actualizada por el sistema. 7. Inserciones, modificaciones y eliminaciones de alto nivel: Todas las operaciones de manipulacion de datos (consulta, insercion, modificacion y borrado) deben operar sobre conjunto de filas. 8. Independencia fisica de los datos: El acceso logico a los datos debe mantenerse incluso cuando cambien los metodos de acceso o la forma de almacenamiento. 9. Independencia logica de los datos: Los programas de aplicacion no deben verse afectados por cambios realizados en las tablas que esten permitidos teoricamente y que preserven la informacion. 10. Independencia de la integridad: Las reglas de integridad de una base de datos deben ser definibles por medio del sublenguaje de datos relacional y habran de almacenarse en el catalogo de la base de datos (metabase), no en los programas de aplicacion. Las reglas deberan estar definidas en el catalogo. El SMBD debera checar automaticamente el que estas reglas se vean cumplidas. 11. Independencia de la distribucion: Debe existir un sublenguaje de datos que pueda soportar base de datos distribuidas sin alterar los programas de aplicacion cuando se distribuyan los datos por primera vez o se redistribuyan estos posteriormente. Si la BD es distribuida, debera aparecer a los usuarios como si estuviera centralizada. 47 12. Regla de la no subversion: Si un SGBD soporta un lenguaje de bajo nivel que permite el acceso fila a fila, este no puede utilizarse para saltarselas reglas de integridad expresadas por medio del lenguaje de mas alto nivel Ejemplo Esquema Sucursal Empleado Figura 3.5 Esquema Sucursal Empleado 48 Ejercicio 49 3.3 Algebra Relacional Es un lenguaje FORMAL, PROCEDURAL, para realizar consultas en BD relacionales. Ademas el algebra relacional proporciona un metodo paso a paso para obtener una relacion que contenga los datos que constituyen la respuesta al problema planteado. El algebra relacional resulta una extension de la teoria de conjuntos y consta de nueve operaciones fundamentales, cuatro de las cuales son muy similares a las de la teoria matematica. Las operaciones son: 1. Union. 2. Interseccion. 3. Diferencia. 4. Producto Cartesiano. 5. Restriccion o seleccion 6. Proyeccion. 7. Reunion o Join. 8. Division. 9. Asignacion. Sean r y s relaciones con Esquemas R y S, respectivamente, se definen 5 Operaciones basicas: union: r U s = {t | t r v t s} Diferencia : r s = {t | t r ^ t s} producto cartesiano : r x s = {t | t= trts where tr r ^ ts s} Seleccion: p(r) Proyeccion: A(r) 50 Esquema Relacional Ejemplo Cse_majors(id, name, class) Eee_majors(id, name, class) Cse_profs(name, office) Cse_courses(crsid, crstitle) Teaches(tname, tcrsid) Instancia de la BD Union r U s = {t | t r V t s} Las relaciones r y s deben ser COMPATIBLES en UNION 1) El grado de r y s debe ser el mismo (mismo numero de atributos) 2) El dominio de atributo ith de r debe ser el mismo dominio del atributo ith de s. 51 Se eliminaran las tuplas duplicadas puesto que se trata de un conjunto. Ejemplo Query: Obtener la informacion de los estudiantes cuya especialidad (major) sea Ciencias Computacionales O electrical engineering Respuesta: cse_majors U eee_majors Nuevo Schema: ID, NAME, CLASS cse_majors U eee_majors ID NAME CLASS 1111 Student1 FR 2222 Student2 SO 3333 Student3 JR 4444 Stuent4 SR 5555 Student5 GR 6666 Student6 SR Diferencia. r s = {t | t r ^ t s} Restriccion: r y s DEBEN SER compatibles en UNION 52 Ejemplo Query: Obtenga la informacion de los estudiantes con especialidad en Ciencias Computacionales y que no tengan especialidad en Ingenieria electrica (Electrical Engineering) Respuesta: cse_majors eee_majors Schema: ID, NAME, CLASS cse_majors eee_majors ID NAME CLASS 1111 Student1 FR 3333 Student3 JR 5555 Student5 GR Producto Cartesiano r x s = {t | t= trts where tr r ^ ts s} Sea nr y ns el numero de tuplas en r y s Hay nr * ns tuplas en r x s El esquema de la relacion formada por r x s es la concatenacion de los esquemas de r y s, con sus respectivos nombres de atributos. Query: Exprese el query que obtenga todas las combinaciones posibles de los profesores de ciencias computacionales con los cursos de ciencias computacionales. Solucion: cse_profs x cse_courses Schema: NAME, OFFICE, CRSID, CRSTITLE 53 cse_profs x cse_courses NAME OFFICE CRSID CRSTITLE Prof1 Office1 PR1 Programacion I Prof1 Office1 DB1 Bases de Datos I Prof1 Office1 IA1 Sistemas Inteligentes Prof2 Office2 PR1 Programacion I Prof2 Office2 DB1 Bases de Datos I Prof2 Office2 IA1 Sistemas Inteligentes Seleccion p(r) Selecciona las tuplas de r que satisfacen el predicado P P es un predicado que expresa una condicion sobre atributos de r. Query: Escriba el query que liste la informacion de los estudiantes con clasificacion SR (seniors ) y que tengan su especialidad en Ciencias Computacionales Respuesta: (cse_majors) Esquema: ID, NAME, CLASS (cse_majors) ID NAME CLASS 4444 Student4 SR 54 Proyeccion A(r) Regresa solo los atributos dados en el conjunto A de la relacion r, donde A es un subconjunto de los atributos de r. Query: Escriba el query que liste el nombre y el ID de los estudiantes cuya especialidad (major) es Ciencias Computacionales. Solucion: ID, NAME (cse_majors) Schema: ID, NAME ID NAME 1111 Student1 2222 Student2 3333 Student3 4444 Student4 5555 Student5 Operadores Complementarios Interseccion Join Natural Join Division 55 Interseccion r s= r (r s) Restriccion: r y s deben ser compatibles en union Query: Escriba el query que muestre la informacion de los estudiantes que tengan como especialidad (major) AMBAS Ciencias Computacionales e Ingenieria Electrica. Solucion: cse_majors eee_majors Schema: ID, NAME, CLASS cse_majors eee_majors ID NAME CLASS 2222 Student2 SO 4444 Student4 SR -JOIN r s= (r x s) Query: Escriba el query que muestre la informacion del profesor y de los cursos que imparte. Solucion: cse_profs NAME=TNAME teaches Schema: NAME, OFFICE, TNAME, TCRSID 56 cse_profs NAME=TNAME teaches NAME OFFICE TNAME TCRSID Prof1 Office1 Prof1 PR1 Prof1 Office1 Prof1 DB1 Prof2 Office2 Prof2 IA1 El -join mas comun es el operador de llama equi-Join. El ejemplo anterior es un equi-join. En general la condicion expresada en puede ser cualquier operacion relacional (<, >, <=, >=, <>, =). JOIN NATURAL r s = (R U S) (r r.A1=s.A1 r.An=s.An s) donde R S = {A1n} Es decir, r s es la relacion que resulta de la proyeccion de R U S de un -join donde el predicado requiere que r.A=s.A para cada atributo A in R S. Considerando los siguientes esquemas teaches (name, crsid), cse_profs(name, office), cse_courses(crsid, crstitle) Query: Escriba el query que obtenga la informacion de cursos y profesores que los imparten. Answer: cse_profs (cse_courses teaches) Esquema del resultado: NAME, OFFICE, CRSID, CRSTITLE cse_profs (cse_courses teaches) 57 NAME OFFICE CRSID CRSTITLE Prof1 Office1 PR1 Programacion I Prof1 Office1 DB1 Bases de Datos I Prof2 Office2 IA1 Sistemas Inteligentes Outer Join Natural Join Solamente las tuplas R de que coinciden con las tuplas de S (and viceversa) aparecen en el resultado. Tuplas que no coinciden, son eliminadas del resultado. Las tuplas con NULL en los atributos del JOIN son tambien eliminadas. Left outer Join Todas las tuplas de la primera relacion r aparecen en el resultado de la operacion r outer-join s. Si los valores campos del join coinciden, se colocan los valores correspondientes, y si no coinciden, se pone NULL en los atributos de s Right outerjoin (r right outer-join s) Todas las tuplas de la segunda relacion s aparecen en el resultado Full outerjoin (r full outer-join s) Todas las tuplas r y s aparecen en el resultado Ejemplo left outer join 58 Escriba el query que obtenga todos los nommbres de los empleados y el nombre del departamento que administran (SI es que administran un depto.) Temp (employee left outer join (ssn=mgrssn) Department) Result fname, minit, lastname,dname (Temp) Algebra (Operadores Basicos) Algebra (Operadores Adicionales) 59 3.4 Mapeo de los objetos del Modelo Conceptual al Modelo Relacional. El paso de un esquema en el modelo E/R al relacional esta basado en los tres principios siguientes: Todo tipo de entidad se convierte en una relacion. Todo tipo de interrelacion N:M se transforma en una relacion. Todo tipo de interrelacion 1:N se traduce en el fenomeno de propagacion de clave o bien se crea una nueva relacion. Ver figura 3.7 El enfoque ER representa un diseno conceptual que representa una situacion real. Aqui consideramos el mapeo de entidades y relaciones de un diagrama ER a las relaciones (tablas) del modelo de datos relacional. Aunque el mapeo es flexible de alguna forma, se definen varias heuristicas o reglas mapeo. 60 Figura 3.7 Mapeo E-R A M-R Reglas de Mapeo R1 Mapeo de Entidades. R2 Mapeo de Atributos Simples y Compuestos. R3 Mapeo de relaciones 1:1. R4 Mapeo de relaciones 1:N. R5 Mapeo de relaciones M:N. R6 Mapeo de atributos multivalor. R7 Mapeo de Entidades debiles. R8 Mapeo de relaciones recursivas. R9 Mapeo de atributos derivados. 61 REGLA 1. MAPEO DE ENTIDADES Regla 2. Atributos Simples y Compuestos 62 Regla 3. Mapeo de Relaciones 1:1 Regla 4. Mapeo de Relaciones 1: N 63 Regla 5. Mapeo de Relaciones N: M Regla 6. Mapeo de atributos multivalor. 64 Regla 7. Mapeo de Entidades debiles. Regla 8. Mapeo de relaciones recursivas. R8 Utilizar las reglas R3, R4 y R5 de acuerdo a la cardinalidad 1:1, 1:N o M:N. La llave foranea hace referencia a la misma tabla. Tabla(llave, attr2, attr3, llave foranea, attrel) PK(llave) FK(llave foranea) references Tabla(llave) Regla 9. Atributos Derivados. Los atributos derivados no se representan en el modelo relacional. Se deben codificar dentro de la aplicacion para calcularse. 65 Reglas de Mapeo Ejercicio de Mapeo 66 Solucion 3.5 Teoria de la Normalizacion. El diseno de una base de datos relacional se puede realizar mediante la metodologia de Diagrama E-R, a fin de obtener un esquema conceptual; en una segunda fase, se transforma dicho esquema al modelo relacional mediante las correspondientes reglas de transformacion. Aunque esta primera aproximacion produce un esquema estructurado y con poca redundancia, el exito se fundamenta en la experiencia del que realiza este modelado; sin embargo siempre es conveniente aplicar un conjunto de reglas, conocidas como teoria de la normalizacion, que nos permite asegurar que un esquema relacional cumple con ciertas propiedades. La normalizacion es el conjunto de reglas a aplicar para reducir en forma sistematica una relacion a un conjunto de relaciones mas pequenas que son equivalentes y mas deseables que la relacion original. Ademas la normalizacion es una tecnica que nos permite obtener estructuras de datos mas eficientes. La normalizacion esta basada en el concepto de formas normales cada forma normal tiene un conjunto de reglas que deben ser verificadas (1FN, 2FN, 3FN). 67 Estas formas normales estan anidadas, es decir que para que una relacion este en 3FN debe haber pasado por 2FN y esta por 1FN. Los objetivos principales de la normalizacion son: 1) Eliminar cierto tipo de redundancia. 2) Evitar anomalias de actualizacion e insercion. 3) Simplificar las restricciones de integridad. 4) Producir un diseno que sea facil de entender intuitivamente y constituya una buena base para el futuro. Relaciones entre las formas Normales Conceptos Usados en la normalizacion 3.6 Dependencias Funcionales Concepto principal asociado con la normalizacion. Dependencia Funcional (Functional Dependency) Describe una relacion entre atributos 68 A, B son atributos de la relacion R, A -> B se lee: A determina los valores de B B es funcionalmente dependiente A si cada valor de A en R esta asociado con exactamente un valor de B en R. Claves o llaves Claves o llaves. Es el atributo que le da la diferencia a cada tabla, este atributo hace que no tengamos tuplas o filas repetidas. MATRICULA NOMBRE APELLIDO PATERNO 200812345 ARTURO RIOS 200712345 PEDRO LOPEZ 200323445 ADRIANA AGUILAR 69 PRIMERA FORMA NORMAL (1FN) DEFINICION: La esencia de la 1FN, es que un registro no incluye ningun grupo repetitivo. EJEMPLO DE PRIMERA FORMA NORMAL (1FN) CASO: diseno de la base de datos para la automatizacion del control de los pedidos de productos. Se cuenta con el siguiente documento para solicitar los productos: 70 Se presenta un formulario de pedidos de productos a proveedores, el siguiente paso es llevar a la forma normal 1, donde se va a listar todos los atributos encontrados en el formulario y se va a seleccionar un atributo clave. Una vez que escogemos el atributo NumPed como el atributo clave por ser unico. Procedemos a identificar grupos repetitivos. 71 Como podemos notar en la figura anterior se encuentran grupos repetitivos, por lo tanto no estan en primera forma normal, la cual dice que debemos remover grupos repetitivos. Notemos que en la primera relacion se encuentran atributos no repetitivos, y tiene un solo atributo clave, sin embargo en la segunda relacion donde se encuentran los grupos repetitivos la clave primaria esta compuesta por dos atributos NumPed y NumProd Grupo Repetitivo. Lineas de productos pedidos 72 Nuestro ejercicio ya se encuentra en primera forma normal, pero presenta problemas en las operaciones de insercion, eliminacion y actualizacion. Entonces para resolver este problema sera necesario aplicar las siguientes fases de normalizacion (2FN, 3FN) a este modelo para eliminar los problemas que presenta. Para Continuar debemos entender el concepto de Dependencia Funcional Completa: esto quiere decir que cada atributo no llave debe depender completamente de la llave clave, no parcialmente. 73 Por ejemplo tenemos la relacion: Asi por lo tanto la segunda formal nos dice: Por lo tanto de las dos relaciones que tenemos aun solo la segunda tiene una llave compuesta: 74 Continuando con la segunda forma normal vemos claramente que los atributos CantPed y SubTtlProd dependen funcional y completamente de NumPed y NumProd, sin embargo: Por lo tanto se crea una nueva relacion para los atributos que dependan de cada parte de la clave: 75 Entonces ahora tenemos las siguientes relaciones: Sin embargo tenemos problemas con la relacion PEDIDO: 76 Por lo tanto ahora debemos aplicar la 3FN: Aplicando la 3FN a la relacion PEDIDO nos queda: 77 Luego creamos una nueva relacion llamada Proveedor Finalmente obtenemos las siguientes relaciones: 78 Luego lo pasamos a DER 79 APENDICE EJERCICIOS DEL CAPITULO DOS. Instrucciones: Lea con atencion el siguiente problema, y luego modele E-R Ejercicio 1. PARQUES NATURALES Una comunidad autonoma (CA) puede tener varios parques naturales. En toda comunidad autonoma existe un y solo un organismo responsable de los parques. Un parque puede estar compartido por mas de una comunidad autonoma. Un parque natural se identifica por un nombre, fue declarado en una fecha, se compone de varias areas identificadas por un nombre y caracterizadas por una determinada extension. Por motivos de eficiencia se desea favorecer las consultas referentes al numero de parques existentes en cada comunidad y la superficie total declarada parque natural en cada CA. En cada area forzosamente residen especies que pueden ser de tres tipos: vegetales, animales y minerales. Cada especie tiene una denominacion cientifica, una denominacion vulgar y un numero inventariado de individuos por area. De las especies vegetales se desea saber si tienen floracion y en que periodo se produce esta; de las animales se desea saber su tipo de alimentacion (herbivora, carnivora u omnivora) y su periodo de celo anual; de las minerales se desea saber si se trata de cristales o de rocas. Ejercicio 2. EMPRESA DE PROYECTOS INFORMATICOS Una empresa de consultoria desea crear una base de datos para facilitar la gestion de los proyectos informaticos que desarrolla para sus empresas clientes. Los requisitos se muestran a continuacion: La empresa desarrolla proyectos de los que almacena su codigo, nombre, cliente para el que se desarrolla el proyecto, una breve descripcion, presupuesto, numero de horas totales estimadas, fecha inicio y fecha fin. Cada proyecto se compone de una serie de fases identificadas por un numero de secuencia en cada proyecto. Cada fase se caracteriza, ademas, por su nombre, fecha de comienzo, fecha de fin y estado en que se encuentra (en curso o finalizada). Los empleados de la empresa (codigo, DNI, nombre, direccion, titulacion y anos de experiencia) estan asignados a los proyectos que desarrolla la empresa. 80 Interesa almacenar a los empleados que son jefes de proyecto junto con su dedicacion total en horas prevista a cada proyecto asi como el coste de su participacion en euros, teniendo en cuenta que cada proyecto lo lidera un unico jefe de proyecto. En cuanto a los informaticos que participan en los proyectos, se quiere conocer los que son programadores, asi como el numero de horas totales previstas dedicadas en cada proyecto y el coste en euros. Ademas se almacenara los lenguajes de programacion que dominan cada uno de los programadores. En cada fase de un proyecto se generan una serie de productos (software) sobre los que se quiere guardar informacion. Cada producto previsto para una fase tiene un codigo, un nombre, una descripcion, una version, si esta finalizado o no y tiene como participantes a varios programadores, pero solo un jefe de proyecto. Ejercicio 3. PUBLICACIONES El departamento de Informatica de una Universidad, necesita una base de datos para almacenar informacion concerniente a los proyectos de investigacion tanto actuales como pasados en los que trabajan los profesores y asi poder llevar una gestion mas eficiente. La informacion que se desea almacenar corresponde a los siguientes supuestos: En el departamento los profesores participan en proyectos de investigacion caracterizados por un codigo de referencia unico, por un nombre, un acronimo, un presupuesto total, el programa de I+D que lo financia, una fecha de inicio y una fecha de finalizacion y una breve descripcion de los objetivos del proyecto. En los proyectos trabajan profesores del departamento durante un periodo de tiempo, es decir, una fecha de inicio y una fecha de fin, pudiendo ocurrir un profesor trabaje en el mismo proyecto en varias epocas (f_ini, f_fin) diferentes. Un profesor se identifica por su nombre y apellidos y se caracteriza por su despacho y telefono y puede trabajar en varios proyectos simultaneamente y en un proyecto de investigacion trabajan varios profesores. Los proyectos de investigacion producen una serie de publicaciones sobre las que tambien interesa guardar informacion. Una publicacion se caracteriza por un numero en secuencia dentro de cada proyecto de investigacion y se guardara el titulo y los profesores que la han escrito; las publicaciones son de dos tipos, publicaciones en congresos y publicaciones en revista; de las primeras se almacenara el nombre del congreso, su tipo (nacional o internacional), la fecha de 81 inicio y de fin, el lugar de celebracion, pais y la editorial que ha publicado las actas del congreso (si es que se han publicado); de las publicaciones en revista interesa saber el nombre de la revista, la editorial, el volumen, el numero y las paginas de inicio y fin. Ejercicio 4. ADMINISTRACION DE FINCAS Una firma de abogados dedicada a la administracion de finas desea tener una base de datos para facilitar la gestion de la informacion de sus clientes, es decir las distintas comunidades de vecinos que administra. La informacion que debe contener la BD concierne a los aspectos que se describen a continuacion. La firma tiene varios abogados y cada uno de ellos ejerce de administrador de una o mas comunidades de vecinos, por lo que cobra a cada una de ellas unos honorarios anuales. Una comunidad de vecinos es gestionada por un unico administrador (Nombre, DNI y No de Colegiado). Las funciones de un administrador, sobre las que en este caso interesa guardar informacion, consisten en llevar la contabilidad de la comunidad, gestionando los recibos que pagan los vecinos mensualmente, asi como los pagos a distintas companias que proporcionan algun servicio a la comunidad (limpieza, ascensores, seguridad, luz, etc.). De las empresas que tienen contratadas las distintas comunidades de vecinos (por ejemplo, Iberdrola, Union Fenosa, OTIS, etc.) se guarda su nombre CIF, direccion, telefono y una persona de contacto. Ademas interesa tener estas companias agrupadas en distintos sectores (luz, seguridad, ascensores, etc.). De cada comunidad de vecinos gestionada por la firma de abogados interesa almacenar un codigo identificador, su nombre, calle, codigo postal y poblacion. Cada comunidad consta de una serie de propiedades que pueden ser de tres tipos (vivienda particular, local comercial y oficina). Cada propiedad se caracteriza por un numero de portal, planta y letra, un nombre y apellidos del propietario con su direccion completa. Y un telefono de contacto. Si la vivienda es particular se guardara el numero de habitaciones de que dispone; si es un local comercial se almacenara el tipo de comercio que se desarrolla en el y el horario (en caso de que este en uso); si es una oficina se guardara la actividad a la que se destina. 82 Bibliografia edicion, Mc Graw Hill, 2006. -MA, 2003. edicion, alfaomega RA-MA, 2008. Wesley, 2003. So, novena edicion, Addison Wesley, 2008. Hill, 2005. Graw Hill, 2006.
